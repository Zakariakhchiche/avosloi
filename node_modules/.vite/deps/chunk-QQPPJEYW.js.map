{
  "version": 3,
  "sources": ["../../zod/lib/helpers/util.js", "../../zod/lib/ZodError.js", "../../zod/lib/locales/en.js", "../../zod/lib/errors.js", "../../zod/lib/helpers/parseUtil.js", "../../zod/lib/helpers/typeAliases.js", "../../zod/lib/helpers/errorUtil.js", "../../zod/lib/types.js", "../../zod/lib/external.js", "../../zod/lib/index.js", "../../zod-to-json-schema/src/parsers/any.js", "../../zod-to-json-schema/src/errorMessages.js", "../../zod-to-json-schema/src/parsers/array.js", "../../zod-to-json-schema/src/parsers/bigint.js", "../../zod-to-json-schema/src/parsers/boolean.js", "../../zod-to-json-schema/src/parsers/branded.js", "../../zod-to-json-schema/src/parsers/catch.js", "../../zod-to-json-schema/src/parsers/date.js", "../../zod-to-json-schema/src/parsers/default.js", "../../zod-to-json-schema/src/parsers/effects.js", "../../zod-to-json-schema/src/parsers/enum.js", "../../zod-to-json-schema/src/parsers/intersection.js", "../../zod-to-json-schema/src/parsers/literal.js", "../../zod-to-json-schema/src/parsers/map.js", "../../zod-to-json-schema/src/parsers/nativeEnum.js", "../../zod-to-json-schema/src/parsers/never.js", "../../zod-to-json-schema/src/parsers/null.js", "../../zod-to-json-schema/src/parsers/union.js", "../../zod-to-json-schema/src/parsers/nullable.js", "../../zod-to-json-schema/src/parsers/number.js", "../../zod-to-json-schema/src/parsers/object.js", "../../zod-to-json-schema/src/parsers/optional.js", "../../zod-to-json-schema/src/parsers/pipeline.js", "../../zod-to-json-schema/src/parsers/promise.js", "../../zod-to-json-schema/src/parsers/string.js", "../../zod-to-json-schema/src/parsers/record.js", "../../zod-to-json-schema/src/parsers/set.js", "../../zod-to-json-schema/src/parsers/tuple.js", "../../zod-to-json-schema/src/parsers/undefined.js", "../../zod-to-json-schema/src/parsers/unknown.js", "../../zod-to-json-schema/src/parseDef.js", "../../zod-to-json-schema/src/Options.js", "../../zod-to-json-schema/src/Refs.js", "../../zod-to-json-schema/src/zodToJsonSchema.js", "../../zod-to-json-schema/index.js", "../../langchain/node_modules/openai/src/version.ts", "../../langchain/node_modules/openai/src/streaming.ts", "../../langchain/node_modules/openai/src/error.ts", "../../langchain/node_modules/openai/src/_shims/agent.ts", "../../langchain/node_modules/openai/_shims/fetch.mjs", "../../langchain/node_modules/openai/_shims/formdata.mjs", "../../langchain/node_modules/openai/src/_shims/getMultipartRequestOptions.ts", "../../langchain/node_modules/openai/src/_shims/fileFromPath.ts", "../../langchain/node_modules/openai/src/_shims/node-readable.ts", "../../langchain/node_modules/openai/src/uploads.ts", "../../langchain/node_modules/openai/src/core.ts", "../../langchain/node_modules/openai/src/pagination.ts", "../../langchain/node_modules/openai/src/resource.ts", "../../langchain/node_modules/openai/src/resources/audio/transcriptions.ts", "../../langchain/node_modules/openai/src/resources/audio/translations.ts", "../../langchain/node_modules/openai/src/resources/audio/audio.ts", "../../langchain/node_modules/openai/src/resources/chat/completions.ts", "../../langchain/node_modules/openai/src/resources/chat/chat.ts", "../../langchain/node_modules/openai/src/resources/completions.ts", "../../langchain/node_modules/openai/src/resources/embeddings.ts", "../../langchain/node_modules/openai/src/resources/edits.ts", "../../langchain/node_modules/openai/src/resources/files.ts", "../../langchain/node_modules/openai/src/resources/fine-tunes.ts", "../../langchain/node_modules/openai/src/resources/fine-tuning/jobs.ts", "../../langchain/node_modules/openai/src/resources/fine-tuning/fine-tuning.ts", "../../langchain/node_modules/openai/src/resources/images.ts", "../../langchain/node_modules/openai/src/resources/models.ts", "../../langchain/node_modules/openai/src/resources/moderations.ts", "../../langchain/node_modules/openai/src/index.ts", "../../langchain/dist/tools/convert_to_openai.js", "../../langchain/dist/util/azure.js", "../../langchain/dist/util/prompt-layer.js", "../../langchain/dist/chat_models/base.js", "../../langchain/dist/util/openai.js", "../../langchain/dist/chat_models/openai.js"],
  "sourcesContent": ["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getParsedType = exports.ZodParsedType = exports.objectUtil = exports.util = void 0;\r\nvar util;\r\n(function (util) {\r\n    util.assertEqual = (val) => val;\r\n    function assertIs(_arg) { }\r\n    util.assertIs = assertIs;\r\n    function assertNever(_x) {\r\n        throw new Error();\r\n    }\r\n    util.assertNever = assertNever;\r\n    util.arrayToEnum = (items) => {\r\n        const obj = {};\r\n        for (const item of items) {\r\n            obj[item] = item;\r\n        }\r\n        return obj;\r\n    };\r\n    util.getValidEnumValues = (obj) => {\r\n        const validKeys = util.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\r\n        const filtered = {};\r\n        for (const k of validKeys) {\r\n            filtered[k] = obj[k];\r\n        }\r\n        return util.objectValues(filtered);\r\n    };\r\n    util.objectValues = (obj) => {\r\n        return util.objectKeys(obj).map(function (e) {\r\n            return obj[e];\r\n        });\r\n    };\r\n    util.objectKeys = typeof Object.keys === \"function\"\r\n        ? (obj) => Object.keys(obj)\r\n        : (object) => {\r\n            const keys = [];\r\n            for (const key in object) {\r\n                if (Object.prototype.hasOwnProperty.call(object, key)) {\r\n                    keys.push(key);\r\n                }\r\n            }\r\n            return keys;\r\n        };\r\n    util.find = (arr, checker) => {\r\n        for (const item of arr) {\r\n            if (checker(item))\r\n                return item;\r\n        }\r\n        return undefined;\r\n    };\r\n    util.isInteger = typeof Number.isInteger === \"function\"\r\n        ? (val) => Number.isInteger(val)\r\n        : (val) => typeof val === \"number\" && isFinite(val) && Math.floor(val) === val;\r\n    function joinValues(array, separator = \" | \") {\r\n        return array\r\n            .map((val) => (typeof val === \"string\" ? `'${val}'` : val))\r\n            .join(separator);\r\n    }\r\n    util.joinValues = joinValues;\r\n    util.jsonStringifyReplacer = (_, value) => {\r\n        if (typeof value === \"bigint\") {\r\n            return value.toString();\r\n        }\r\n        return value;\r\n    };\r\n})(util = exports.util || (exports.util = {}));\r\nvar objectUtil;\r\n(function (objectUtil) {\r\n    objectUtil.mergeShapes = (first, second) => {\r\n        return {\r\n            ...first,\r\n            ...second,\r\n        };\r\n    };\r\n})(objectUtil = exports.objectUtil || (exports.objectUtil = {}));\r\nexports.ZodParsedType = util.arrayToEnum([\r\n    \"string\",\r\n    \"nan\",\r\n    \"number\",\r\n    \"integer\",\r\n    \"float\",\r\n    \"boolean\",\r\n    \"date\",\r\n    \"bigint\",\r\n    \"symbol\",\r\n    \"function\",\r\n    \"undefined\",\r\n    \"null\",\r\n    \"array\",\r\n    \"object\",\r\n    \"unknown\",\r\n    \"promise\",\r\n    \"void\",\r\n    \"never\",\r\n    \"map\",\r\n    \"set\",\r\n]);\r\nconst getParsedType = (data) => {\r\n    const t = typeof data;\r\n    switch (t) {\r\n        case \"undefined\":\r\n            return exports.ZodParsedType.undefined;\r\n        case \"string\":\r\n            return exports.ZodParsedType.string;\r\n        case \"number\":\r\n            return isNaN(data) ? exports.ZodParsedType.nan : exports.ZodParsedType.number;\r\n        case \"boolean\":\r\n            return exports.ZodParsedType.boolean;\r\n        case \"function\":\r\n            return exports.ZodParsedType.function;\r\n        case \"bigint\":\r\n            return exports.ZodParsedType.bigint;\r\n        case \"symbol\":\r\n            return exports.ZodParsedType.symbol;\r\n        case \"object\":\r\n            if (Array.isArray(data)) {\r\n                return exports.ZodParsedType.array;\r\n            }\r\n            if (data === null) {\r\n                return exports.ZodParsedType.null;\r\n            }\r\n            if (data.then &&\r\n                typeof data.then === \"function\" &&\r\n                data.catch &&\r\n                typeof data.catch === \"function\") {\r\n                return exports.ZodParsedType.promise;\r\n            }\r\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\r\n                return exports.ZodParsedType.map;\r\n            }\r\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\r\n                return exports.ZodParsedType.set;\r\n            }\r\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\r\n                return exports.ZodParsedType.date;\r\n            }\r\n            return exports.ZodParsedType.object;\r\n        default:\r\n            return exports.ZodParsedType.unknown;\r\n    }\r\n};\r\nexports.getParsedType = getParsedType;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ZodError = exports.quotelessJson = exports.ZodIssueCode = void 0;\r\nconst util_1 = require(\"./helpers/util\");\r\nexports.ZodIssueCode = util_1.util.arrayToEnum([\r\n    \"invalid_type\",\r\n    \"invalid_literal\",\r\n    \"custom\",\r\n    \"invalid_union\",\r\n    \"invalid_union_discriminator\",\r\n    \"invalid_enum_value\",\r\n    \"unrecognized_keys\",\r\n    \"invalid_arguments\",\r\n    \"invalid_return_type\",\r\n    \"invalid_date\",\r\n    \"invalid_string\",\r\n    \"too_small\",\r\n    \"too_big\",\r\n    \"invalid_intersection_types\",\r\n    \"not_multiple_of\",\r\n    \"not_finite\",\r\n]);\r\nconst quotelessJson = (obj) => {\r\n    const json = JSON.stringify(obj, null, 2);\r\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\r\n};\r\nexports.quotelessJson = quotelessJson;\r\nclass ZodError extends Error {\r\n    constructor(issues) {\r\n        super();\r\n        this.issues = [];\r\n        this.addIssue = (sub) => {\r\n            this.issues = [...this.issues, sub];\r\n        };\r\n        this.addIssues = (subs = []) => {\r\n            this.issues = [...this.issues, ...subs];\r\n        };\r\n        const actualProto = new.target.prototype;\r\n        if (Object.setPrototypeOf) {\r\n            Object.setPrototypeOf(this, actualProto);\r\n        }\r\n        else {\r\n            this.__proto__ = actualProto;\r\n        }\r\n        this.name = \"ZodError\";\r\n        this.issues = issues;\r\n    }\r\n    get errors() {\r\n        return this.issues;\r\n    }\r\n    format(_mapper) {\r\n        const mapper = _mapper ||\r\n            function (issue) {\r\n                return issue.message;\r\n            };\r\n        const fieldErrors = { _errors: [] };\r\n        const processError = (error) => {\r\n            for (const issue of error.issues) {\r\n                if (issue.code === \"invalid_union\") {\r\n                    issue.unionErrors.map(processError);\r\n                }\r\n                else if (issue.code === \"invalid_return_type\") {\r\n                    processError(issue.returnTypeError);\r\n                }\r\n                else if (issue.code === \"invalid_arguments\") {\r\n                    processError(issue.argumentsError);\r\n                }\r\n                else if (issue.path.length === 0) {\r\n                    fieldErrors._errors.push(mapper(issue));\r\n                }\r\n                else {\r\n                    let curr = fieldErrors;\r\n                    let i = 0;\r\n                    while (i < issue.path.length) {\r\n                        const el = issue.path[i];\r\n                        const terminal = i === issue.path.length - 1;\r\n                        if (!terminal) {\r\n                            curr[el] = curr[el] || { _errors: [] };\r\n                        }\r\n                        else {\r\n                            curr[el] = curr[el] || { _errors: [] };\r\n                            curr[el]._errors.push(mapper(issue));\r\n                        }\r\n                        curr = curr[el];\r\n                        i++;\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        processError(this);\r\n        return fieldErrors;\r\n    }\r\n    toString() {\r\n        return this.message;\r\n    }\r\n    get message() {\r\n        return JSON.stringify(this.issues, util_1.util.jsonStringifyReplacer, 2);\r\n    }\r\n    get isEmpty() {\r\n        return this.issues.length === 0;\r\n    }\r\n    flatten(mapper = (issue) => issue.message) {\r\n        const fieldErrors = {};\r\n        const formErrors = [];\r\n        for (const sub of this.issues) {\r\n            if (sub.path.length > 0) {\r\n                fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\r\n                fieldErrors[sub.path[0]].push(mapper(sub));\r\n            }\r\n            else {\r\n                formErrors.push(mapper(sub));\r\n            }\r\n        }\r\n        return { formErrors, fieldErrors };\r\n    }\r\n    get formErrors() {\r\n        return this.flatten();\r\n    }\r\n}\r\nexports.ZodError = ZodError;\r\nZodError.create = (issues) => {\r\n    const error = new ZodError(issues);\r\n    return error;\r\n};\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst util_1 = require(\"../helpers/util\");\r\nconst ZodError_1 = require(\"../ZodError\");\r\nconst errorMap = (issue, _ctx) => {\r\n    let message;\r\n    switch (issue.code) {\r\n        case ZodError_1.ZodIssueCode.invalid_type:\r\n            if (issue.received === util_1.ZodParsedType.undefined) {\r\n                message = \"Required\";\r\n            }\r\n            else {\r\n                message = `Expected ${issue.expected}, received ${issue.received}`;\r\n            }\r\n            break;\r\n        case ZodError_1.ZodIssueCode.invalid_literal:\r\n            message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util_1.util.jsonStringifyReplacer)}`;\r\n            break;\r\n        case ZodError_1.ZodIssueCode.unrecognized_keys:\r\n            message = `Unrecognized key(s) in object: ${util_1.util.joinValues(issue.keys, \", \")}`;\r\n            break;\r\n        case ZodError_1.ZodIssueCode.invalid_union:\r\n            message = `Invalid input`;\r\n            break;\r\n        case ZodError_1.ZodIssueCode.invalid_union_discriminator:\r\n            message = `Invalid discriminator value. Expected ${util_1.util.joinValues(issue.options)}`;\r\n            break;\r\n        case ZodError_1.ZodIssueCode.invalid_enum_value:\r\n            message = `Invalid enum value. Expected ${util_1.util.joinValues(issue.options)}, received '${issue.received}'`;\r\n            break;\r\n        case ZodError_1.ZodIssueCode.invalid_arguments:\r\n            message = `Invalid function arguments`;\r\n            break;\r\n        case ZodError_1.ZodIssueCode.invalid_return_type:\r\n            message = `Invalid function return type`;\r\n            break;\r\n        case ZodError_1.ZodIssueCode.invalid_date:\r\n            message = `Invalid date`;\r\n            break;\r\n        case ZodError_1.ZodIssueCode.invalid_string:\r\n            if (typeof issue.validation === \"object\") {\r\n                if (\"includes\" in issue.validation) {\r\n                    message = `Invalid input: must include \"${issue.validation.includes}\"`;\r\n                    if (typeof issue.validation.position === \"number\") {\r\n                        message = `${message} at one or more positions greater than or equal to ${issue.validation.position}`;\r\n                    }\r\n                }\r\n                else if (\"startsWith\" in issue.validation) {\r\n                    message = `Invalid input: must start with \"${issue.validation.startsWith}\"`;\r\n                }\r\n                else if (\"endsWith\" in issue.validation) {\r\n                    message = `Invalid input: must end with \"${issue.validation.endsWith}\"`;\r\n                }\r\n                else {\r\n                    util_1.util.assertNever(issue.validation);\r\n                }\r\n            }\r\n            else if (issue.validation !== \"regex\") {\r\n                message = `Invalid ${issue.validation}`;\r\n            }\r\n            else {\r\n                message = \"Invalid\";\r\n            }\r\n            break;\r\n        case ZodError_1.ZodIssueCode.too_small:\r\n            if (issue.type === \"array\")\r\n                message = `Array must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;\r\n            else if (issue.type === \"string\")\r\n                message = `String must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;\r\n            else if (issue.type === \"number\")\r\n                message = `Number must be ${issue.exact\r\n                    ? `exactly equal to `\r\n                    : issue.inclusive\r\n                        ? `greater than or equal to `\r\n                        : `greater than `}${issue.minimum}`;\r\n            else if (issue.type === \"date\")\r\n                message = `Date must be ${issue.exact\r\n                    ? `exactly equal to `\r\n                    : issue.inclusive\r\n                        ? `greater than or equal to `\r\n                        : `greater than `}${new Date(Number(issue.minimum))}`;\r\n            else\r\n                message = \"Invalid input\";\r\n            break;\r\n        case ZodError_1.ZodIssueCode.too_big:\r\n            if (issue.type === \"array\")\r\n                message = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;\r\n            else if (issue.type === \"string\")\r\n                message = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;\r\n            else if (issue.type === \"number\")\r\n                message = `Number must be ${issue.exact\r\n                    ? `exactly`\r\n                    : issue.inclusive\r\n                        ? `less than or equal to`\r\n                        : `less than`} ${issue.maximum}`;\r\n            else if (issue.type === \"bigint\")\r\n                message = `BigInt must be ${issue.exact\r\n                    ? `exactly`\r\n                    : issue.inclusive\r\n                        ? `less than or equal to`\r\n                        : `less than`} ${issue.maximum}`;\r\n            else if (issue.type === \"date\")\r\n                message = `Date must be ${issue.exact\r\n                    ? `exactly`\r\n                    : issue.inclusive\r\n                        ? `smaller than or equal to`\r\n                        : `smaller than`} ${new Date(Number(issue.maximum))}`;\r\n            else\r\n                message = \"Invalid input\";\r\n            break;\r\n        case ZodError_1.ZodIssueCode.custom:\r\n            message = `Invalid input`;\r\n            break;\r\n        case ZodError_1.ZodIssueCode.invalid_intersection_types:\r\n            message = `Intersection results could not be merged`;\r\n            break;\r\n        case ZodError_1.ZodIssueCode.not_multiple_of:\r\n            message = `Number must be a multiple of ${issue.multipleOf}`;\r\n            break;\r\n        case ZodError_1.ZodIssueCode.not_finite:\r\n            message = \"Number must be finite\";\r\n            break;\r\n        default:\r\n            message = _ctx.defaultError;\r\n            util_1.util.assertNever(issue);\r\n    }\r\n    return { message };\r\n};\r\nexports.default = errorMap;\r\n", "\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getErrorMap = exports.setErrorMap = exports.defaultErrorMap = void 0;\r\nconst en_1 = __importDefault(require(\"./locales/en\"));\r\nexports.defaultErrorMap = en_1.default;\r\nlet overrideErrorMap = en_1.default;\r\nfunction setErrorMap(map) {\r\n    overrideErrorMap = map;\r\n}\r\nexports.setErrorMap = setErrorMap;\r\nfunction getErrorMap() {\r\n    return overrideErrorMap;\r\n}\r\nexports.getErrorMap = getErrorMap;\r\n", "\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.isAsync = exports.isValid = exports.isDirty = exports.isAborted = exports.OK = exports.DIRTY = exports.INVALID = exports.ParseStatus = exports.addIssueToContext = exports.EMPTY_PATH = exports.makeIssue = void 0;\r\nconst errors_1 = require(\"../errors\");\r\nconst en_1 = __importDefault(require(\"../locales/en\"));\r\nconst makeIssue = (params) => {\r\n    const { data, path, errorMaps, issueData } = params;\r\n    const fullPath = [...path, ...(issueData.path || [])];\r\n    const fullIssue = {\r\n        ...issueData,\r\n        path: fullPath,\r\n    };\r\n    let errorMessage = \"\";\r\n    const maps = errorMaps\r\n        .filter((m) => !!m)\r\n        .slice()\r\n        .reverse();\r\n    for (const map of maps) {\r\n        errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\r\n    }\r\n    return {\r\n        ...issueData,\r\n        path: fullPath,\r\n        message: issueData.message || errorMessage,\r\n    };\r\n};\r\nexports.makeIssue = makeIssue;\r\nexports.EMPTY_PATH = [];\r\nfunction addIssueToContext(ctx, issueData) {\r\n    const issue = (0, exports.makeIssue)({\r\n        issueData: issueData,\r\n        data: ctx.data,\r\n        path: ctx.path,\r\n        errorMaps: [\r\n            ctx.common.contextualErrorMap,\r\n            ctx.schemaErrorMap,\r\n            (0, errors_1.getErrorMap)(),\r\n            en_1.default,\r\n        ].filter((x) => !!x),\r\n    });\r\n    ctx.common.issues.push(issue);\r\n}\r\nexports.addIssueToContext = addIssueToContext;\r\nclass ParseStatus {\r\n    constructor() {\r\n        this.value = \"valid\";\r\n    }\r\n    dirty() {\r\n        if (this.value === \"valid\")\r\n            this.value = \"dirty\";\r\n    }\r\n    abort() {\r\n        if (this.value !== \"aborted\")\r\n            this.value = \"aborted\";\r\n    }\r\n    static mergeArray(status, results) {\r\n        const arrayValue = [];\r\n        for (const s of results) {\r\n            if (s.status === \"aborted\")\r\n                return exports.INVALID;\r\n            if (s.status === \"dirty\")\r\n                status.dirty();\r\n            arrayValue.push(s.value);\r\n        }\r\n        return { status: status.value, value: arrayValue };\r\n    }\r\n    static async mergeObjectAsync(status, pairs) {\r\n        const syncPairs = [];\r\n        for (const pair of pairs) {\r\n            syncPairs.push({\r\n                key: await pair.key,\r\n                value: await pair.value,\r\n            });\r\n        }\r\n        return ParseStatus.mergeObjectSync(status, syncPairs);\r\n    }\r\n    static mergeObjectSync(status, pairs) {\r\n        const finalObject = {};\r\n        for (const pair of pairs) {\r\n            const { key, value } = pair;\r\n            if (key.status === \"aborted\")\r\n                return exports.INVALID;\r\n            if (value.status === \"aborted\")\r\n                return exports.INVALID;\r\n            if (key.status === \"dirty\")\r\n                status.dirty();\r\n            if (value.status === \"dirty\")\r\n                status.dirty();\r\n            if (key.value !== \"__proto__\" &&\r\n                (typeof value.value !== \"undefined\" || pair.alwaysSet)) {\r\n                finalObject[key.value] = value.value;\r\n            }\r\n        }\r\n        return { status: status.value, value: finalObject };\r\n    }\r\n}\r\nexports.ParseStatus = ParseStatus;\r\nexports.INVALID = Object.freeze({\r\n    status: \"aborted\",\r\n});\r\nconst DIRTY = (value) => ({ status: \"dirty\", value });\r\nexports.DIRTY = DIRTY;\r\nconst OK = (value) => ({ status: \"valid\", value });\r\nexports.OK = OK;\r\nconst isAborted = (x) => x.status === \"aborted\";\r\nexports.isAborted = isAborted;\r\nconst isDirty = (x) => x.status === \"dirty\";\r\nexports.isDirty = isDirty;\r\nconst isValid = (x) => x.status === \"valid\";\r\nexports.isValid = isValid;\r\nconst isAsync = (x) => typeof Promise !== \"undefined\" && x instanceof Promise;\r\nexports.isAsync = isAsync;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.errorUtil = void 0;\r\nvar errorUtil;\r\n(function (errorUtil) {\r\n    errorUtil.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\r\n    errorUtil.toString = (message) => typeof message === \"string\" ? message : message === null || message === void 0 ? void 0 : message.message;\r\n})(errorUtil = exports.errorUtil || (exports.errorUtil = {}));\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.date = exports.boolean = exports.bigint = exports.array = exports.any = exports.coerce = exports.ZodFirstPartyTypeKind = exports.late = exports.ZodSchema = exports.Schema = exports.custom = exports.ZodReadonly = exports.ZodPipeline = exports.ZodBranded = exports.BRAND = exports.ZodNaN = exports.ZodCatch = exports.ZodDefault = exports.ZodNullable = exports.ZodOptional = exports.ZodTransformer = exports.ZodEffects = exports.ZodPromise = exports.ZodNativeEnum = exports.ZodEnum = exports.ZodLiteral = exports.ZodLazy = exports.ZodFunction = exports.ZodSet = exports.ZodMap = exports.ZodRecord = exports.ZodTuple = exports.ZodIntersection = exports.ZodDiscriminatedUnion = exports.ZodUnion = exports.ZodObject = exports.ZodArray = exports.ZodVoid = exports.ZodNever = exports.ZodUnknown = exports.ZodAny = exports.ZodNull = exports.ZodUndefined = exports.ZodSymbol = exports.ZodDate = exports.ZodBoolean = exports.ZodBigInt = exports.ZodNumber = exports.ZodString = exports.ZodType = void 0;\r\nexports.NEVER = exports.void = exports.unknown = exports.union = exports.undefined = exports.tuple = exports.transformer = exports.symbol = exports.string = exports.strictObject = exports.set = exports.record = exports.promise = exports.preprocess = exports.pipeline = exports.ostring = exports.optional = exports.onumber = exports.oboolean = exports.object = exports.number = exports.nullable = exports.null = exports.never = exports.nativeEnum = exports.nan = exports.map = exports.literal = exports.lazy = exports.intersection = exports.instanceof = exports.function = exports.enum = exports.effect = exports.discriminatedUnion = void 0;\r\nconst errors_1 = require(\"./errors\");\r\nconst errorUtil_1 = require(\"./helpers/errorUtil\");\r\nconst parseUtil_1 = require(\"./helpers/parseUtil\");\r\nconst util_1 = require(\"./helpers/util\");\r\nconst ZodError_1 = require(\"./ZodError\");\r\nclass ParseInputLazyPath {\r\n    constructor(parent, value, path, key) {\r\n        this._cachedPath = [];\r\n        this.parent = parent;\r\n        this.data = value;\r\n        this._path = path;\r\n        this._key = key;\r\n    }\r\n    get path() {\r\n        if (!this._cachedPath.length) {\r\n            if (this._key instanceof Array) {\r\n                this._cachedPath.push(...this._path, ...this._key);\r\n            }\r\n            else {\r\n                this._cachedPath.push(...this._path, this._key);\r\n            }\r\n        }\r\n        return this._cachedPath;\r\n    }\r\n}\r\nconst handleResult = (ctx, result) => {\r\n    if ((0, parseUtil_1.isValid)(result)) {\r\n        return { success: true, data: result.value };\r\n    }\r\n    else {\r\n        if (!ctx.common.issues.length) {\r\n            throw new Error(\"Validation failed but no issues detected.\");\r\n        }\r\n        return {\r\n            success: false,\r\n            get error() {\r\n                if (this._error)\r\n                    return this._error;\r\n                const error = new ZodError_1.ZodError(ctx.common.issues);\r\n                this._error = error;\r\n                return this._error;\r\n            },\r\n        };\r\n    }\r\n};\r\nfunction processCreateParams(params) {\r\n    if (!params)\r\n        return {};\r\n    const { errorMap, invalid_type_error, required_error, description } = params;\r\n    if (errorMap && (invalid_type_error || required_error)) {\r\n        throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);\r\n    }\r\n    if (errorMap)\r\n        return { errorMap: errorMap, description };\r\n    const customMap = (iss, ctx) => {\r\n        if (iss.code !== \"invalid_type\")\r\n            return { message: ctx.defaultError };\r\n        if (typeof ctx.data === \"undefined\") {\r\n            return { message: required_error !== null && required_error !== void 0 ? required_error : ctx.defaultError };\r\n        }\r\n        return { message: invalid_type_error !== null && invalid_type_error !== void 0 ? invalid_type_error : ctx.defaultError };\r\n    };\r\n    return { errorMap: customMap, description };\r\n}\r\nclass ZodType {\r\n    constructor(def) {\r\n        this.spa = this.safeParseAsync;\r\n        this._def = def;\r\n        this.parse = this.parse.bind(this);\r\n        this.safeParse = this.safeParse.bind(this);\r\n        this.parseAsync = this.parseAsync.bind(this);\r\n        this.safeParseAsync = this.safeParseAsync.bind(this);\r\n        this.spa = this.spa.bind(this);\r\n        this.refine = this.refine.bind(this);\r\n        this.refinement = this.refinement.bind(this);\r\n        this.superRefine = this.superRefine.bind(this);\r\n        this.optional = this.optional.bind(this);\r\n        this.nullable = this.nullable.bind(this);\r\n        this.nullish = this.nullish.bind(this);\r\n        this.array = this.array.bind(this);\r\n        this.promise = this.promise.bind(this);\r\n        this.or = this.or.bind(this);\r\n        this.and = this.and.bind(this);\r\n        this.transform = this.transform.bind(this);\r\n        this.brand = this.brand.bind(this);\r\n        this.default = this.default.bind(this);\r\n        this.catch = this.catch.bind(this);\r\n        this.describe = this.describe.bind(this);\r\n        this.pipe = this.pipe.bind(this);\r\n        this.readonly = this.readonly.bind(this);\r\n        this.isNullable = this.isNullable.bind(this);\r\n        this.isOptional = this.isOptional.bind(this);\r\n    }\r\n    get description() {\r\n        return this._def.description;\r\n    }\r\n    _getType(input) {\r\n        return (0, util_1.getParsedType)(input.data);\r\n    }\r\n    _getOrReturnCtx(input, ctx) {\r\n        return (ctx || {\r\n            common: input.parent.common,\r\n            data: input.data,\r\n            parsedType: (0, util_1.getParsedType)(input.data),\r\n            schemaErrorMap: this._def.errorMap,\r\n            path: input.path,\r\n            parent: input.parent,\r\n        });\r\n    }\r\n    _processInputParams(input) {\r\n        return {\r\n            status: new parseUtil_1.ParseStatus(),\r\n            ctx: {\r\n                common: input.parent.common,\r\n                data: input.data,\r\n                parsedType: (0, util_1.getParsedType)(input.data),\r\n                schemaErrorMap: this._def.errorMap,\r\n                path: input.path,\r\n                parent: input.parent,\r\n            },\r\n        };\r\n    }\r\n    _parseSync(input) {\r\n        const result = this._parse(input);\r\n        if ((0, parseUtil_1.isAsync)(result)) {\r\n            throw new Error(\"Synchronous parse encountered promise.\");\r\n        }\r\n        return result;\r\n    }\r\n    _parseAsync(input) {\r\n        const result = this._parse(input);\r\n        return Promise.resolve(result);\r\n    }\r\n    parse(data, params) {\r\n        const result = this.safeParse(data, params);\r\n        if (result.success)\r\n            return result.data;\r\n        throw result.error;\r\n    }\r\n    safeParse(data, params) {\r\n        var _a;\r\n        const ctx = {\r\n            common: {\r\n                issues: [],\r\n                async: (_a = params === null || params === void 0 ? void 0 : params.async) !== null && _a !== void 0 ? _a : false,\r\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\r\n            },\r\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\r\n            schemaErrorMap: this._def.errorMap,\r\n            parent: null,\r\n            data,\r\n            parsedType: (0, util_1.getParsedType)(data),\r\n        };\r\n        const result = this._parseSync({ data, path: ctx.path, parent: ctx });\r\n        return handleResult(ctx, result);\r\n    }\r\n    async parseAsync(data, params) {\r\n        const result = await this.safeParseAsync(data, params);\r\n        if (result.success)\r\n            return result.data;\r\n        throw result.error;\r\n    }\r\n    async safeParseAsync(data, params) {\r\n        const ctx = {\r\n            common: {\r\n                issues: [],\r\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\r\n                async: true,\r\n            },\r\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\r\n            schemaErrorMap: this._def.errorMap,\r\n            parent: null,\r\n            data,\r\n            parsedType: (0, util_1.getParsedType)(data),\r\n        };\r\n        const maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx });\r\n        const result = await ((0, parseUtil_1.isAsync)(maybeAsyncResult)\r\n            ? maybeAsyncResult\r\n            : Promise.resolve(maybeAsyncResult));\r\n        return handleResult(ctx, result);\r\n    }\r\n    refine(check, message) {\r\n        const getIssueProperties = (val) => {\r\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\r\n                return { message };\r\n            }\r\n            else if (typeof message === \"function\") {\r\n                return message(val);\r\n            }\r\n            else {\r\n                return message;\r\n            }\r\n        };\r\n        return this._refinement((val, ctx) => {\r\n            const result = check(val);\r\n            const setError = () => ctx.addIssue({\r\n                code: ZodError_1.ZodIssueCode.custom,\r\n                ...getIssueProperties(val),\r\n            });\r\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\r\n                return result.then((data) => {\r\n                    if (!data) {\r\n                        setError();\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        return true;\r\n                    }\r\n                });\r\n            }\r\n            if (!result) {\r\n                setError();\r\n                return false;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        });\r\n    }\r\n    refinement(check, refinementData) {\r\n        return this._refinement((val, ctx) => {\r\n            if (!check(val)) {\r\n                ctx.addIssue(typeof refinementData === \"function\"\r\n                    ? refinementData(val, ctx)\r\n                    : refinementData);\r\n                return false;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        });\r\n    }\r\n    _refinement(refinement) {\r\n        return new ZodEffects({\r\n            schema: this,\r\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\r\n            effect: { type: \"refinement\", refinement },\r\n        });\r\n    }\r\n    superRefine(refinement) {\r\n        return this._refinement(refinement);\r\n    }\r\n    optional() {\r\n        return ZodOptional.create(this, this._def);\r\n    }\r\n    nullable() {\r\n        return ZodNullable.create(this, this._def);\r\n    }\r\n    nullish() {\r\n        return this.nullable().optional();\r\n    }\r\n    array() {\r\n        return ZodArray.create(this, this._def);\r\n    }\r\n    promise() {\r\n        return ZodPromise.create(this, this._def);\r\n    }\r\n    or(option) {\r\n        return ZodUnion.create([this, option], this._def);\r\n    }\r\n    and(incoming) {\r\n        return ZodIntersection.create(this, incoming, this._def);\r\n    }\r\n    transform(transform) {\r\n        return new ZodEffects({\r\n            ...processCreateParams(this._def),\r\n            schema: this,\r\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\r\n            effect: { type: \"transform\", transform },\r\n        });\r\n    }\r\n    default(def) {\r\n        const defaultValueFunc = typeof def === \"function\" ? def : () => def;\r\n        return new ZodDefault({\r\n            ...processCreateParams(this._def),\r\n            innerType: this,\r\n            defaultValue: defaultValueFunc,\r\n            typeName: ZodFirstPartyTypeKind.ZodDefault,\r\n        });\r\n    }\r\n    brand() {\r\n        return new ZodBranded({\r\n            typeName: ZodFirstPartyTypeKind.ZodBranded,\r\n            type: this,\r\n            ...processCreateParams(this._def),\r\n        });\r\n    }\r\n    catch(def) {\r\n        const catchValueFunc = typeof def === \"function\" ? def : () => def;\r\n        return new ZodCatch({\r\n            ...processCreateParams(this._def),\r\n            innerType: this,\r\n            catchValue: catchValueFunc,\r\n            typeName: ZodFirstPartyTypeKind.ZodCatch,\r\n        });\r\n    }\r\n    describe(description) {\r\n        const This = this.constructor;\r\n        return new This({\r\n            ...this._def,\r\n            description,\r\n        });\r\n    }\r\n    pipe(target) {\r\n        return ZodPipeline.create(this, target);\r\n    }\r\n    readonly() {\r\n        return ZodReadonly.create(this);\r\n    }\r\n    isOptional() {\r\n        return this.safeParse(undefined).success;\r\n    }\r\n    isNullable() {\r\n        return this.safeParse(null).success;\r\n    }\r\n}\r\nexports.ZodType = ZodType;\r\nexports.Schema = ZodType;\r\nexports.ZodSchema = ZodType;\r\nconst cuidRegex = /^c[^\\s-]{8,}$/i;\r\nconst cuid2Regex = /^[a-z][a-z0-9]*$/;\r\nconst ulidRegex = /[0-9A-HJKMNP-TV-Z]{26}/;\r\nconst uuidRegex = /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/i;\r\nconst emailRegex = /^([A-Z0-9_+-]+\\.?)*[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\\-]*\\.)+[A-Z]{2,}$/i;\r\nconst emojiRegex = /^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$/u;\r\nconst ipv4Regex = /^(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))$/;\r\nconst ipv6Regex = /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/;\r\nconst datetimeRegex = (args) => {\r\n    if (args.precision) {\r\n        if (args.offset) {\r\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\d{${args.precision}}(([+-]\\\\d{2}(:?\\\\d{2})?)|Z)$`);\r\n        }\r\n        else {\r\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\d{${args.precision}}Z$`);\r\n        }\r\n    }\r\n    else if (args.precision === 0) {\r\n        if (args.offset) {\r\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}(([+-]\\\\d{2}(:?\\\\d{2})?)|Z)$`);\r\n        }\r\n        else {\r\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}Z$`);\r\n        }\r\n    }\r\n    else {\r\n        if (args.offset) {\r\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}(\\\\.\\\\d+)?(([+-]\\\\d{2}(:?\\\\d{2})?)|Z)$`);\r\n        }\r\n        else {\r\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}(\\\\.\\\\d+)?Z$`);\r\n        }\r\n    }\r\n};\r\nfunction isValidIP(ip, version) {\r\n    if ((version === \"v4\" || !version) && ipv4Regex.test(ip)) {\r\n        return true;\r\n    }\r\n    if ((version === \"v6\" || !version) && ipv6Regex.test(ip)) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nclass ZodString extends ZodType {\r\n    constructor() {\r\n        super(...arguments);\r\n        this._regex = (regex, validation, message) => this.refinement((data) => regex.test(data), {\r\n            validation,\r\n            code: ZodError_1.ZodIssueCode.invalid_string,\r\n            ...errorUtil_1.errorUtil.errToObj(message),\r\n        });\r\n        this.nonempty = (message) => this.min(1, errorUtil_1.errorUtil.errToObj(message));\r\n        this.trim = () => new ZodString({\r\n            ...this._def,\r\n            checks: [...this._def.checks, { kind: \"trim\" }],\r\n        });\r\n        this.toLowerCase = () => new ZodString({\r\n            ...this._def,\r\n            checks: [...this._def.checks, { kind: \"toLowerCase\" }],\r\n        });\r\n        this.toUpperCase = () => new ZodString({\r\n            ...this._def,\r\n            checks: [...this._def.checks, { kind: \"toUpperCase\" }],\r\n        });\r\n    }\r\n    _parse(input) {\r\n        if (this._def.coerce) {\r\n            input.data = String(input.data);\r\n        }\r\n        const parsedType = this._getType(input);\r\n        if (parsedType !== util_1.ZodParsedType.string) {\r\n            const ctx = this._getOrReturnCtx(input);\r\n            (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                code: ZodError_1.ZodIssueCode.invalid_type,\r\n                expected: util_1.ZodParsedType.string,\r\n                received: ctx.parsedType,\r\n            });\r\n            return parseUtil_1.INVALID;\r\n        }\r\n        const status = new parseUtil_1.ParseStatus();\r\n        let ctx = undefined;\r\n        for (const check of this._def.checks) {\r\n            if (check.kind === \"min\") {\r\n                if (input.data.length < check.value) {\r\n                    ctx = this._getOrReturnCtx(input, ctx);\r\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                        code: ZodError_1.ZodIssueCode.too_small,\r\n                        minimum: check.value,\r\n                        type: \"string\",\r\n                        inclusive: true,\r\n                        exact: false,\r\n                        message: check.message,\r\n                    });\r\n                    status.dirty();\r\n                }\r\n            }\r\n            else if (check.kind === \"max\") {\r\n                if (input.data.length > check.value) {\r\n                    ctx = this._getOrReturnCtx(input, ctx);\r\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                        code: ZodError_1.ZodIssueCode.too_big,\r\n                        maximum: check.value,\r\n                        type: \"string\",\r\n                        inclusive: true,\r\n                        exact: false,\r\n                        message: check.message,\r\n                    });\r\n                    status.dirty();\r\n                }\r\n            }\r\n            else if (check.kind === \"length\") {\r\n                const tooBig = input.data.length > check.value;\r\n                const tooSmall = input.data.length < check.value;\r\n                if (tooBig || tooSmall) {\r\n                    ctx = this._getOrReturnCtx(input, ctx);\r\n                    if (tooBig) {\r\n                        (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                            code: ZodError_1.ZodIssueCode.too_big,\r\n                            maximum: check.value,\r\n                            type: \"string\",\r\n                            inclusive: true,\r\n                            exact: true,\r\n                            message: check.message,\r\n                        });\r\n                    }\r\n                    else if (tooSmall) {\r\n                        (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                            code: ZodError_1.ZodIssueCode.too_small,\r\n                            minimum: check.value,\r\n                            type: \"string\",\r\n                            inclusive: true,\r\n                            exact: true,\r\n                            message: check.message,\r\n                        });\r\n                    }\r\n                    status.dirty();\r\n                }\r\n            }\r\n            else if (check.kind === \"email\") {\r\n                if (!emailRegex.test(input.data)) {\r\n                    ctx = this._getOrReturnCtx(input, ctx);\r\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                        validation: \"email\",\r\n                        code: ZodError_1.ZodIssueCode.invalid_string,\r\n                        message: check.message,\r\n                    });\r\n                    status.dirty();\r\n                }\r\n            }\r\n            else if (check.kind === \"emoji\") {\r\n                if (!emojiRegex.test(input.data)) {\r\n                    ctx = this._getOrReturnCtx(input, ctx);\r\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                        validation: \"emoji\",\r\n                        code: ZodError_1.ZodIssueCode.invalid_string,\r\n                        message: check.message,\r\n                    });\r\n                    status.dirty();\r\n                }\r\n            }\r\n            else if (check.kind === \"uuid\") {\r\n                if (!uuidRegex.test(input.data)) {\r\n                    ctx = this._getOrReturnCtx(input, ctx);\r\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                        validation: \"uuid\",\r\n                        code: ZodError_1.ZodIssueCode.invalid_string,\r\n                        message: check.message,\r\n                    });\r\n                    status.dirty();\r\n                }\r\n            }\r\n            else if (check.kind === \"cuid\") {\r\n                if (!cuidRegex.test(input.data)) {\r\n                    ctx = this._getOrReturnCtx(input, ctx);\r\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                        validation: \"cuid\",\r\n                        code: ZodError_1.ZodIssueCode.invalid_string,\r\n                        message: check.message,\r\n                    });\r\n                    status.dirty();\r\n                }\r\n            }\r\n            else if (check.kind === \"cuid2\") {\r\n                if (!cuid2Regex.test(input.data)) {\r\n                    ctx = this._getOrReturnCtx(input, ctx);\r\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                        validation: \"cuid2\",\r\n                        code: ZodError_1.ZodIssueCode.invalid_string,\r\n                        message: check.message,\r\n                    });\r\n                    status.dirty();\r\n                }\r\n            }\r\n            else if (check.kind === \"ulid\") {\r\n                if (!ulidRegex.test(input.data)) {\r\n                    ctx = this._getOrReturnCtx(input, ctx);\r\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                        validation: \"ulid\",\r\n                        code: ZodError_1.ZodIssueCode.invalid_string,\r\n                        message: check.message,\r\n                    });\r\n                    status.dirty();\r\n                }\r\n            }\r\n            else if (check.kind === \"url\") {\r\n                try {\r\n                    new URL(input.data);\r\n                }\r\n                catch (_a) {\r\n                    ctx = this._getOrReturnCtx(input, ctx);\r\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                        validation: \"url\",\r\n                        code: ZodError_1.ZodIssueCode.invalid_string,\r\n                        message: check.message,\r\n                    });\r\n                    status.dirty();\r\n                }\r\n            }\r\n            else if (check.kind === \"regex\") {\r\n                check.regex.lastIndex = 0;\r\n                const testResult = check.regex.test(input.data);\r\n                if (!testResult) {\r\n                    ctx = this._getOrReturnCtx(input, ctx);\r\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                        validation: \"regex\",\r\n                        code: ZodError_1.ZodIssueCode.invalid_string,\r\n                        message: check.message,\r\n                    });\r\n                    status.dirty();\r\n                }\r\n            }\r\n            else if (check.kind === \"trim\") {\r\n                input.data = input.data.trim();\r\n            }\r\n            else if (check.kind === \"includes\") {\r\n                if (!input.data.includes(check.value, check.position)) {\r\n                    ctx = this._getOrReturnCtx(input, ctx);\r\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                        code: ZodError_1.ZodIssueCode.invalid_string,\r\n                        validation: { includes: check.value, position: check.position },\r\n                        message: check.message,\r\n                    });\r\n                    status.dirty();\r\n                }\r\n            }\r\n            else if (check.kind === \"toLowerCase\") {\r\n                input.data = input.data.toLowerCase();\r\n            }\r\n            else if (check.kind === \"toUpperCase\") {\r\n                input.data = input.data.toUpperCase();\r\n            }\r\n            else if (check.kind === \"startsWith\") {\r\n                if (!input.data.startsWith(check.value)) {\r\n                    ctx = this._getOrReturnCtx(input, ctx);\r\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                        code: ZodError_1.ZodIssueCode.invalid_string,\r\n                        validation: { startsWith: check.value },\r\n                        message: check.message,\r\n                    });\r\n                    status.dirty();\r\n                }\r\n            }\r\n            else if (check.kind === \"endsWith\") {\r\n                if (!input.data.endsWith(check.value)) {\r\n                    ctx = this._getOrReturnCtx(input, ctx);\r\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                        code: ZodError_1.ZodIssueCode.invalid_string,\r\n                        validation: { endsWith: check.value },\r\n                        message: check.message,\r\n                    });\r\n                    status.dirty();\r\n                }\r\n            }\r\n            else if (check.kind === \"datetime\") {\r\n                const regex = datetimeRegex(check);\r\n                if (!regex.test(input.data)) {\r\n                    ctx = this._getOrReturnCtx(input, ctx);\r\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                        code: ZodError_1.ZodIssueCode.invalid_string,\r\n                        validation: \"datetime\",\r\n                        message: check.message,\r\n                    });\r\n                    status.dirty();\r\n                }\r\n            }\r\n            else if (check.kind === \"ip\") {\r\n                if (!isValidIP(input.data, check.version)) {\r\n                    ctx = this._getOrReturnCtx(input, ctx);\r\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                        validation: \"ip\",\r\n                        code: ZodError_1.ZodIssueCode.invalid_string,\r\n                        message: check.message,\r\n                    });\r\n                    status.dirty();\r\n                }\r\n            }\r\n            else {\r\n                util_1.util.assertNever(check);\r\n            }\r\n        }\r\n        return { status: status.value, value: input.data };\r\n    }\r\n    _addCheck(check) {\r\n        return new ZodString({\r\n            ...this._def,\r\n            checks: [...this._def.checks, check],\r\n        });\r\n    }\r\n    email(message) {\r\n        return this._addCheck({ kind: \"email\", ...errorUtil_1.errorUtil.errToObj(message) });\r\n    }\r\n    url(message) {\r\n        return this._addCheck({ kind: \"url\", ...errorUtil_1.errorUtil.errToObj(message) });\r\n    }\r\n    emoji(message) {\r\n        return this._addCheck({ kind: \"emoji\", ...errorUtil_1.errorUtil.errToObj(message) });\r\n    }\r\n    uuid(message) {\r\n        return this._addCheck({ kind: \"uuid\", ...errorUtil_1.errorUtil.errToObj(message) });\r\n    }\r\n    cuid(message) {\r\n        return this._addCheck({ kind: \"cuid\", ...errorUtil_1.errorUtil.errToObj(message) });\r\n    }\r\n    cuid2(message) {\r\n        return this._addCheck({ kind: \"cuid2\", ...errorUtil_1.errorUtil.errToObj(message) });\r\n    }\r\n    ulid(message) {\r\n        return this._addCheck({ kind: \"ulid\", ...errorUtil_1.errorUtil.errToObj(message) });\r\n    }\r\n    ip(options) {\r\n        return this._addCheck({ kind: \"ip\", ...errorUtil_1.errorUtil.errToObj(options) });\r\n    }\r\n    datetime(options) {\r\n        var _a;\r\n        if (typeof options === \"string\") {\r\n            return this._addCheck({\r\n                kind: \"datetime\",\r\n                precision: null,\r\n                offset: false,\r\n                message: options,\r\n            });\r\n        }\r\n        return this._addCheck({\r\n            kind: \"datetime\",\r\n            precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === \"undefined\" ? null : options === null || options === void 0 ? void 0 : options.precision,\r\n            offset: (_a = options === null || options === void 0 ? void 0 : options.offset) !== null && _a !== void 0 ? _a : false,\r\n            ...errorUtil_1.errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\r\n        });\r\n    }\r\n    regex(regex, message) {\r\n        return this._addCheck({\r\n            kind: \"regex\",\r\n            regex: regex,\r\n            ...errorUtil_1.errorUtil.errToObj(message),\r\n        });\r\n    }\r\n    includes(value, options) {\r\n        return this._addCheck({\r\n            kind: \"includes\",\r\n            value: value,\r\n            position: options === null || options === void 0 ? void 0 : options.position,\r\n            ...errorUtil_1.errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\r\n        });\r\n    }\r\n    startsWith(value, message) {\r\n        return this._addCheck({\r\n            kind: \"startsWith\",\r\n            value: value,\r\n            ...errorUtil_1.errorUtil.errToObj(message),\r\n        });\r\n    }\r\n    endsWith(value, message) {\r\n        return this._addCheck({\r\n            kind: \"endsWith\",\r\n            value: value,\r\n            ...errorUtil_1.errorUtil.errToObj(message),\r\n        });\r\n    }\r\n    min(minLength, message) {\r\n        return this._addCheck({\r\n            kind: \"min\",\r\n            value: minLength,\r\n            ...errorUtil_1.errorUtil.errToObj(message),\r\n        });\r\n    }\r\n    max(maxLength, message) {\r\n        return this._addCheck({\r\n            kind: \"max\",\r\n            value: maxLength,\r\n            ...errorUtil_1.errorUtil.errToObj(message),\r\n        });\r\n    }\r\n    length(len, message) {\r\n        return this._addCheck({\r\n            kind: \"length\",\r\n            value: len,\r\n            ...errorUtil_1.errorUtil.errToObj(message),\r\n        });\r\n    }\r\n    get isDatetime() {\r\n        return !!this._def.checks.find((ch) => ch.kind === \"datetime\");\r\n    }\r\n    get isEmail() {\r\n        return !!this._def.checks.find((ch) => ch.kind === \"email\");\r\n    }\r\n    get isURL() {\r\n        return !!this._def.checks.find((ch) => ch.kind === \"url\");\r\n    }\r\n    get isEmoji() {\r\n        return !!this._def.checks.find((ch) => ch.kind === \"emoji\");\r\n    }\r\n    get isUUID() {\r\n        return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\r\n    }\r\n    get isCUID() {\r\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\r\n    }\r\n    get isCUID2() {\r\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid2\");\r\n    }\r\n    get isULID() {\r\n        return !!this._def.checks.find((ch) => ch.kind === \"ulid\");\r\n    }\r\n    get isIP() {\r\n        return !!this._def.checks.find((ch) => ch.kind === \"ip\");\r\n    }\r\n    get minLength() {\r\n        let min = null;\r\n        for (const ch of this._def.checks) {\r\n            if (ch.kind === \"min\") {\r\n                if (min === null || ch.value > min)\r\n                    min = ch.value;\r\n            }\r\n        }\r\n        return min;\r\n    }\r\n    get maxLength() {\r\n        let max = null;\r\n        for (const ch of this._def.checks) {\r\n            if (ch.kind === \"max\") {\r\n                if (max === null || ch.value < max)\r\n                    max = ch.value;\r\n            }\r\n        }\r\n        return max;\r\n    }\r\n}\r\nexports.ZodString = ZodString;\r\nZodString.create = (params) => {\r\n    var _a;\r\n    return new ZodString({\r\n        checks: [],\r\n        typeName: ZodFirstPartyTypeKind.ZodString,\r\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\r\n        ...processCreateParams(params),\r\n    });\r\n};\r\nfunction floatSafeRemainder(val, step) {\r\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\r\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\r\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\r\n    const valInt = parseInt(val.toFixed(decCount).replace(\".\", \"\"));\r\n    const stepInt = parseInt(step.toFixed(decCount).replace(\".\", \"\"));\r\n    return (valInt % stepInt) / Math.pow(10, decCount);\r\n}\r\nclass ZodNumber extends ZodType {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.min = this.gte;\r\n        this.max = this.lte;\r\n        this.step = this.multipleOf;\r\n    }\r\n    _parse(input) {\r\n        if (this._def.coerce) {\r\n            input.data = Number(input.data);\r\n        }\r\n        const parsedType = this._getType(input);\r\n        if (parsedType !== util_1.ZodParsedType.number) {\r\n            const ctx = this._getOrReturnCtx(input);\r\n            (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                code: ZodError_1.ZodIssueCode.invalid_type,\r\n                expected: util_1.ZodParsedType.number,\r\n                received: ctx.parsedType,\r\n            });\r\n            return parseUtil_1.INVALID;\r\n        }\r\n        let ctx = undefined;\r\n        const status = new parseUtil_1.ParseStatus();\r\n        for (const check of this._def.checks) {\r\n            if (check.kind === \"int\") {\r\n                if (!util_1.util.isInteger(input.data)) {\r\n                    ctx = this._getOrReturnCtx(input, ctx);\r\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                        code: ZodError_1.ZodIssueCode.invalid_type,\r\n                        expected: \"integer\",\r\n                        received: \"float\",\r\n                        message: check.message,\r\n                    });\r\n                    status.dirty();\r\n                }\r\n            }\r\n            else if (check.kind === \"min\") {\r\n                const tooSmall = check.inclusive\r\n                    ? input.data < check.value\r\n                    : input.data <= check.value;\r\n                if (tooSmall) {\r\n                    ctx = this._getOrReturnCtx(input, ctx);\r\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                        code: ZodError_1.ZodIssueCode.too_small,\r\n                        minimum: check.value,\r\n                        type: \"number\",\r\n                        inclusive: check.inclusive,\r\n                        exact: false,\r\n                        message: check.message,\r\n                    });\r\n                    status.dirty();\r\n                }\r\n            }\r\n            else if (check.kind === \"max\") {\r\n                const tooBig = check.inclusive\r\n                    ? input.data > check.value\r\n                    : input.data >= check.value;\r\n                if (tooBig) {\r\n                    ctx = this._getOrReturnCtx(input, ctx);\r\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                        code: ZodError_1.ZodIssueCode.too_big,\r\n                        maximum: check.value,\r\n                        type: \"number\",\r\n                        inclusive: check.inclusive,\r\n                        exact: false,\r\n                        message: check.message,\r\n                    });\r\n                    status.dirty();\r\n                }\r\n            }\r\n            else if (check.kind === \"multipleOf\") {\r\n                if (floatSafeRemainder(input.data, check.value) !== 0) {\r\n                    ctx = this._getOrReturnCtx(input, ctx);\r\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                        code: ZodError_1.ZodIssueCode.not_multiple_of,\r\n                        multipleOf: check.value,\r\n                        message: check.message,\r\n                    });\r\n                    status.dirty();\r\n                }\r\n            }\r\n            else if (check.kind === \"finite\") {\r\n                if (!Number.isFinite(input.data)) {\r\n                    ctx = this._getOrReturnCtx(input, ctx);\r\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                        code: ZodError_1.ZodIssueCode.not_finite,\r\n                        message: check.message,\r\n                    });\r\n                    status.dirty();\r\n                }\r\n            }\r\n            else {\r\n                util_1.util.assertNever(check);\r\n            }\r\n        }\r\n        return { status: status.value, value: input.data };\r\n    }\r\n    gte(value, message) {\r\n        return this.setLimit(\"min\", value, true, errorUtil_1.errorUtil.toString(message));\r\n    }\r\n    gt(value, message) {\r\n        return this.setLimit(\"min\", value, false, errorUtil_1.errorUtil.toString(message));\r\n    }\r\n    lte(value, message) {\r\n        return this.setLimit(\"max\", value, true, errorUtil_1.errorUtil.toString(message));\r\n    }\r\n    lt(value, message) {\r\n        return this.setLimit(\"max\", value, false, errorUtil_1.errorUtil.toString(message));\r\n    }\r\n    setLimit(kind, value, inclusive, message) {\r\n        return new ZodNumber({\r\n            ...this._def,\r\n            checks: [\r\n                ...this._def.checks,\r\n                {\r\n                    kind,\r\n                    value,\r\n                    inclusive,\r\n                    message: errorUtil_1.errorUtil.toString(message),\r\n                },\r\n            ],\r\n        });\r\n    }\r\n    _addCheck(check) {\r\n        return new ZodNumber({\r\n            ...this._def,\r\n            checks: [...this._def.checks, check],\r\n        });\r\n    }\r\n    int(message) {\r\n        return this._addCheck({\r\n            kind: \"int\",\r\n            message: errorUtil_1.errorUtil.toString(message),\r\n        });\r\n    }\r\n    positive(message) {\r\n        return this._addCheck({\r\n            kind: \"min\",\r\n            value: 0,\r\n            inclusive: false,\r\n            message: errorUtil_1.errorUtil.toString(message),\r\n        });\r\n    }\r\n    negative(message) {\r\n        return this._addCheck({\r\n            kind: \"max\",\r\n            value: 0,\r\n            inclusive: false,\r\n            message: errorUtil_1.errorUtil.toString(message),\r\n        });\r\n    }\r\n    nonpositive(message) {\r\n        return this._addCheck({\r\n            kind: \"max\",\r\n            value: 0,\r\n            inclusive: true,\r\n            message: errorUtil_1.errorUtil.toString(message),\r\n        });\r\n    }\r\n    nonnegative(message) {\r\n        return this._addCheck({\r\n            kind: \"min\",\r\n            value: 0,\r\n            inclusive: true,\r\n            message: errorUtil_1.errorUtil.toString(message),\r\n        });\r\n    }\r\n    multipleOf(value, message) {\r\n        return this._addCheck({\r\n            kind: \"multipleOf\",\r\n            value: value,\r\n            message: errorUtil_1.errorUtil.toString(message),\r\n        });\r\n    }\r\n    finite(message) {\r\n        return this._addCheck({\r\n            kind: \"finite\",\r\n            message: errorUtil_1.errorUtil.toString(message),\r\n        });\r\n    }\r\n    safe(message) {\r\n        return this._addCheck({\r\n            kind: \"min\",\r\n            inclusive: true,\r\n            value: Number.MIN_SAFE_INTEGER,\r\n            message: errorUtil_1.errorUtil.toString(message),\r\n        })._addCheck({\r\n            kind: \"max\",\r\n            inclusive: true,\r\n            value: Number.MAX_SAFE_INTEGER,\r\n            message: errorUtil_1.errorUtil.toString(message),\r\n        });\r\n    }\r\n    get minValue() {\r\n        let min = null;\r\n        for (const ch of this._def.checks) {\r\n            if (ch.kind === \"min\") {\r\n                if (min === null || ch.value > min)\r\n                    min = ch.value;\r\n            }\r\n        }\r\n        return min;\r\n    }\r\n    get maxValue() {\r\n        let max = null;\r\n        for (const ch of this._def.checks) {\r\n            if (ch.kind === \"max\") {\r\n                if (max === null || ch.value < max)\r\n                    max = ch.value;\r\n            }\r\n        }\r\n        return max;\r\n    }\r\n    get isInt() {\r\n        return !!this._def.checks.find((ch) => ch.kind === \"int\" ||\r\n            (ch.kind === \"multipleOf\" && util_1.util.isInteger(ch.value)));\r\n    }\r\n    get isFinite() {\r\n        let max = null, min = null;\r\n        for (const ch of this._def.checks) {\r\n            if (ch.kind === \"finite\" ||\r\n                ch.kind === \"int\" ||\r\n                ch.kind === \"multipleOf\") {\r\n                return true;\r\n            }\r\n            else if (ch.kind === \"min\") {\r\n                if (min === null || ch.value > min)\r\n                    min = ch.value;\r\n            }\r\n            else if (ch.kind === \"max\") {\r\n                if (max === null || ch.value < max)\r\n                    max = ch.value;\r\n            }\r\n        }\r\n        return Number.isFinite(min) && Number.isFinite(max);\r\n    }\r\n}\r\nexports.ZodNumber = ZodNumber;\r\nZodNumber.create = (params) => {\r\n    return new ZodNumber({\r\n        checks: [],\r\n        typeName: ZodFirstPartyTypeKind.ZodNumber,\r\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\r\n        ...processCreateParams(params),\r\n    });\r\n};\r\nclass ZodBigInt extends ZodType {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.min = this.gte;\r\n        this.max = this.lte;\r\n    }\r\n    _parse(input) {\r\n        if (this._def.coerce) {\r\n            input.data = BigInt(input.data);\r\n        }\r\n        const parsedType = this._getType(input);\r\n        if (parsedType !== util_1.ZodParsedType.bigint) {\r\n            const ctx = this._getOrReturnCtx(input);\r\n            (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                code: ZodError_1.ZodIssueCode.invalid_type,\r\n                expected: util_1.ZodParsedType.bigint,\r\n                received: ctx.parsedType,\r\n            });\r\n            return parseUtil_1.INVALID;\r\n        }\r\n        let ctx = undefined;\r\n        const status = new parseUtil_1.ParseStatus();\r\n        for (const check of this._def.checks) {\r\n            if (check.kind === \"min\") {\r\n                const tooSmall = check.inclusive\r\n                    ? input.data < check.value\r\n                    : input.data <= check.value;\r\n                if (tooSmall) {\r\n                    ctx = this._getOrReturnCtx(input, ctx);\r\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                        code: ZodError_1.ZodIssueCode.too_small,\r\n                        type: \"bigint\",\r\n                        minimum: check.value,\r\n                        inclusive: check.inclusive,\r\n                        message: check.message,\r\n                    });\r\n                    status.dirty();\r\n                }\r\n            }\r\n            else if (check.kind === \"max\") {\r\n                const tooBig = check.inclusive\r\n                    ? input.data > check.value\r\n                    : input.data >= check.value;\r\n                if (tooBig) {\r\n                    ctx = this._getOrReturnCtx(input, ctx);\r\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                        code: ZodError_1.ZodIssueCode.too_big,\r\n                        type: \"bigint\",\r\n                        maximum: check.value,\r\n                        inclusive: check.inclusive,\r\n                        message: check.message,\r\n                    });\r\n                    status.dirty();\r\n                }\r\n            }\r\n            else if (check.kind === \"multipleOf\") {\r\n                if (input.data % check.value !== BigInt(0)) {\r\n                    ctx = this._getOrReturnCtx(input, ctx);\r\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                        code: ZodError_1.ZodIssueCode.not_multiple_of,\r\n                        multipleOf: check.value,\r\n                        message: check.message,\r\n                    });\r\n                    status.dirty();\r\n                }\r\n            }\r\n            else {\r\n                util_1.util.assertNever(check);\r\n            }\r\n        }\r\n        return { status: status.value, value: input.data };\r\n    }\r\n    gte(value, message) {\r\n        return this.setLimit(\"min\", value, true, errorUtil_1.errorUtil.toString(message));\r\n    }\r\n    gt(value, message) {\r\n        return this.setLimit(\"min\", value, false, errorUtil_1.errorUtil.toString(message));\r\n    }\r\n    lte(value, message) {\r\n        return this.setLimit(\"max\", value, true, errorUtil_1.errorUtil.toString(message));\r\n    }\r\n    lt(value, message) {\r\n        return this.setLimit(\"max\", value, false, errorUtil_1.errorUtil.toString(message));\r\n    }\r\n    setLimit(kind, value, inclusive, message) {\r\n        return new ZodBigInt({\r\n            ...this._def,\r\n            checks: [\r\n                ...this._def.checks,\r\n                {\r\n                    kind,\r\n                    value,\r\n                    inclusive,\r\n                    message: errorUtil_1.errorUtil.toString(message),\r\n                },\r\n            ],\r\n        });\r\n    }\r\n    _addCheck(check) {\r\n        return new ZodBigInt({\r\n            ...this._def,\r\n            checks: [...this._def.checks, check],\r\n        });\r\n    }\r\n    positive(message) {\r\n        return this._addCheck({\r\n            kind: \"min\",\r\n            value: BigInt(0),\r\n            inclusive: false,\r\n            message: errorUtil_1.errorUtil.toString(message),\r\n        });\r\n    }\r\n    negative(message) {\r\n        return this._addCheck({\r\n            kind: \"max\",\r\n            value: BigInt(0),\r\n            inclusive: false,\r\n            message: errorUtil_1.errorUtil.toString(message),\r\n        });\r\n    }\r\n    nonpositive(message) {\r\n        return this._addCheck({\r\n            kind: \"max\",\r\n            value: BigInt(0),\r\n            inclusive: true,\r\n            message: errorUtil_1.errorUtil.toString(message),\r\n        });\r\n    }\r\n    nonnegative(message) {\r\n        return this._addCheck({\r\n            kind: \"min\",\r\n            value: BigInt(0),\r\n            inclusive: true,\r\n            message: errorUtil_1.errorUtil.toString(message),\r\n        });\r\n    }\r\n    multipleOf(value, message) {\r\n        return this._addCheck({\r\n            kind: \"multipleOf\",\r\n            value,\r\n            message: errorUtil_1.errorUtil.toString(message),\r\n        });\r\n    }\r\n    get minValue() {\r\n        let min = null;\r\n        for (const ch of this._def.checks) {\r\n            if (ch.kind === \"min\") {\r\n                if (min === null || ch.value > min)\r\n                    min = ch.value;\r\n            }\r\n        }\r\n        return min;\r\n    }\r\n    get maxValue() {\r\n        let max = null;\r\n        for (const ch of this._def.checks) {\r\n            if (ch.kind === \"max\") {\r\n                if (max === null || ch.value < max)\r\n                    max = ch.value;\r\n            }\r\n        }\r\n        return max;\r\n    }\r\n}\r\nexports.ZodBigInt = ZodBigInt;\r\nZodBigInt.create = (params) => {\r\n    var _a;\r\n    return new ZodBigInt({\r\n        checks: [],\r\n        typeName: ZodFirstPartyTypeKind.ZodBigInt,\r\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\r\n        ...processCreateParams(params),\r\n    });\r\n};\r\nclass ZodBoolean extends ZodType {\r\n    _parse(input) {\r\n        if (this._def.coerce) {\r\n            input.data = Boolean(input.data);\r\n        }\r\n        const parsedType = this._getType(input);\r\n        if (parsedType !== util_1.ZodParsedType.boolean) {\r\n            const ctx = this._getOrReturnCtx(input);\r\n            (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                code: ZodError_1.ZodIssueCode.invalid_type,\r\n                expected: util_1.ZodParsedType.boolean,\r\n                received: ctx.parsedType,\r\n            });\r\n            return parseUtil_1.INVALID;\r\n        }\r\n        return (0, parseUtil_1.OK)(input.data);\r\n    }\r\n}\r\nexports.ZodBoolean = ZodBoolean;\r\nZodBoolean.create = (params) => {\r\n    return new ZodBoolean({\r\n        typeName: ZodFirstPartyTypeKind.ZodBoolean,\r\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\r\n        ...processCreateParams(params),\r\n    });\r\n};\r\nclass ZodDate extends ZodType {\r\n    _parse(input) {\r\n        if (this._def.coerce) {\r\n            input.data = new Date(input.data);\r\n        }\r\n        const parsedType = this._getType(input);\r\n        if (parsedType !== util_1.ZodParsedType.date) {\r\n            const ctx = this._getOrReturnCtx(input);\r\n            (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                code: ZodError_1.ZodIssueCode.invalid_type,\r\n                expected: util_1.ZodParsedType.date,\r\n                received: ctx.parsedType,\r\n            });\r\n            return parseUtil_1.INVALID;\r\n        }\r\n        if (isNaN(input.data.getTime())) {\r\n            const ctx = this._getOrReturnCtx(input);\r\n            (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                code: ZodError_1.ZodIssueCode.invalid_date,\r\n            });\r\n            return parseUtil_1.INVALID;\r\n        }\r\n        const status = new parseUtil_1.ParseStatus();\r\n        let ctx = undefined;\r\n        for (const check of this._def.checks) {\r\n            if (check.kind === \"min\") {\r\n                if (input.data.getTime() < check.value) {\r\n                    ctx = this._getOrReturnCtx(input, ctx);\r\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                        code: ZodError_1.ZodIssueCode.too_small,\r\n                        message: check.message,\r\n                        inclusive: true,\r\n                        exact: false,\r\n                        minimum: check.value,\r\n                        type: \"date\",\r\n                    });\r\n                    status.dirty();\r\n                }\r\n            }\r\n            else if (check.kind === \"max\") {\r\n                if (input.data.getTime() > check.value) {\r\n                    ctx = this._getOrReturnCtx(input, ctx);\r\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                        code: ZodError_1.ZodIssueCode.too_big,\r\n                        message: check.message,\r\n                        inclusive: true,\r\n                        exact: false,\r\n                        maximum: check.value,\r\n                        type: \"date\",\r\n                    });\r\n                    status.dirty();\r\n                }\r\n            }\r\n            else {\r\n                util_1.util.assertNever(check);\r\n            }\r\n        }\r\n        return {\r\n            status: status.value,\r\n            value: new Date(input.data.getTime()),\r\n        };\r\n    }\r\n    _addCheck(check) {\r\n        return new ZodDate({\r\n            ...this._def,\r\n            checks: [...this._def.checks, check],\r\n        });\r\n    }\r\n    min(minDate, message) {\r\n        return this._addCheck({\r\n            kind: \"min\",\r\n            value: minDate.getTime(),\r\n            message: errorUtil_1.errorUtil.toString(message),\r\n        });\r\n    }\r\n    max(maxDate, message) {\r\n        return this._addCheck({\r\n            kind: \"max\",\r\n            value: maxDate.getTime(),\r\n            message: errorUtil_1.errorUtil.toString(message),\r\n        });\r\n    }\r\n    get minDate() {\r\n        let min = null;\r\n        for (const ch of this._def.checks) {\r\n            if (ch.kind === \"min\") {\r\n                if (min === null || ch.value > min)\r\n                    min = ch.value;\r\n            }\r\n        }\r\n        return min != null ? new Date(min) : null;\r\n    }\r\n    get maxDate() {\r\n        let max = null;\r\n        for (const ch of this._def.checks) {\r\n            if (ch.kind === \"max\") {\r\n                if (max === null || ch.value < max)\r\n                    max = ch.value;\r\n            }\r\n        }\r\n        return max != null ? new Date(max) : null;\r\n    }\r\n}\r\nexports.ZodDate = ZodDate;\r\nZodDate.create = (params) => {\r\n    return new ZodDate({\r\n        checks: [],\r\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\r\n        typeName: ZodFirstPartyTypeKind.ZodDate,\r\n        ...processCreateParams(params),\r\n    });\r\n};\r\nclass ZodSymbol extends ZodType {\r\n    _parse(input) {\r\n        const parsedType = this._getType(input);\r\n        if (parsedType !== util_1.ZodParsedType.symbol) {\r\n            const ctx = this._getOrReturnCtx(input);\r\n            (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                code: ZodError_1.ZodIssueCode.invalid_type,\r\n                expected: util_1.ZodParsedType.symbol,\r\n                received: ctx.parsedType,\r\n            });\r\n            return parseUtil_1.INVALID;\r\n        }\r\n        return (0, parseUtil_1.OK)(input.data);\r\n    }\r\n}\r\nexports.ZodSymbol = ZodSymbol;\r\nZodSymbol.create = (params) => {\r\n    return new ZodSymbol({\r\n        typeName: ZodFirstPartyTypeKind.ZodSymbol,\r\n        ...processCreateParams(params),\r\n    });\r\n};\r\nclass ZodUndefined extends ZodType {\r\n    _parse(input) {\r\n        const parsedType = this._getType(input);\r\n        if (parsedType !== util_1.ZodParsedType.undefined) {\r\n            const ctx = this._getOrReturnCtx(input);\r\n            (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                code: ZodError_1.ZodIssueCode.invalid_type,\r\n                expected: util_1.ZodParsedType.undefined,\r\n                received: ctx.parsedType,\r\n            });\r\n            return parseUtil_1.INVALID;\r\n        }\r\n        return (0, parseUtil_1.OK)(input.data);\r\n    }\r\n}\r\nexports.ZodUndefined = ZodUndefined;\r\nZodUndefined.create = (params) => {\r\n    return new ZodUndefined({\r\n        typeName: ZodFirstPartyTypeKind.ZodUndefined,\r\n        ...processCreateParams(params),\r\n    });\r\n};\r\nclass ZodNull extends ZodType {\r\n    _parse(input) {\r\n        const parsedType = this._getType(input);\r\n        if (parsedType !== util_1.ZodParsedType.null) {\r\n            const ctx = this._getOrReturnCtx(input);\r\n            (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                code: ZodError_1.ZodIssueCode.invalid_type,\r\n                expected: util_1.ZodParsedType.null,\r\n                received: ctx.parsedType,\r\n            });\r\n            return parseUtil_1.INVALID;\r\n        }\r\n        return (0, parseUtil_1.OK)(input.data);\r\n    }\r\n}\r\nexports.ZodNull = ZodNull;\r\nZodNull.create = (params) => {\r\n    return new ZodNull({\r\n        typeName: ZodFirstPartyTypeKind.ZodNull,\r\n        ...processCreateParams(params),\r\n    });\r\n};\r\nclass ZodAny extends ZodType {\r\n    constructor() {\r\n        super(...arguments);\r\n        this._any = true;\r\n    }\r\n    _parse(input) {\r\n        return (0, parseUtil_1.OK)(input.data);\r\n    }\r\n}\r\nexports.ZodAny = ZodAny;\r\nZodAny.create = (params) => {\r\n    return new ZodAny({\r\n        typeName: ZodFirstPartyTypeKind.ZodAny,\r\n        ...processCreateParams(params),\r\n    });\r\n};\r\nclass ZodUnknown extends ZodType {\r\n    constructor() {\r\n        super(...arguments);\r\n        this._unknown = true;\r\n    }\r\n    _parse(input) {\r\n        return (0, parseUtil_1.OK)(input.data);\r\n    }\r\n}\r\nexports.ZodUnknown = ZodUnknown;\r\nZodUnknown.create = (params) => {\r\n    return new ZodUnknown({\r\n        typeName: ZodFirstPartyTypeKind.ZodUnknown,\r\n        ...processCreateParams(params),\r\n    });\r\n};\r\nclass ZodNever extends ZodType {\r\n    _parse(input) {\r\n        const ctx = this._getOrReturnCtx(input);\r\n        (0, parseUtil_1.addIssueToContext)(ctx, {\r\n            code: ZodError_1.ZodIssueCode.invalid_type,\r\n            expected: util_1.ZodParsedType.never,\r\n            received: ctx.parsedType,\r\n        });\r\n        return parseUtil_1.INVALID;\r\n    }\r\n}\r\nexports.ZodNever = ZodNever;\r\nZodNever.create = (params) => {\r\n    return new ZodNever({\r\n        typeName: ZodFirstPartyTypeKind.ZodNever,\r\n        ...processCreateParams(params),\r\n    });\r\n};\r\nclass ZodVoid extends ZodType {\r\n    _parse(input) {\r\n        const parsedType = this._getType(input);\r\n        if (parsedType !== util_1.ZodParsedType.undefined) {\r\n            const ctx = this._getOrReturnCtx(input);\r\n            (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                code: ZodError_1.ZodIssueCode.invalid_type,\r\n                expected: util_1.ZodParsedType.void,\r\n                received: ctx.parsedType,\r\n            });\r\n            return parseUtil_1.INVALID;\r\n        }\r\n        return (0, parseUtil_1.OK)(input.data);\r\n    }\r\n}\r\nexports.ZodVoid = ZodVoid;\r\nZodVoid.create = (params) => {\r\n    return new ZodVoid({\r\n        typeName: ZodFirstPartyTypeKind.ZodVoid,\r\n        ...processCreateParams(params),\r\n    });\r\n};\r\nclass ZodArray extends ZodType {\r\n    _parse(input) {\r\n        const { ctx, status } = this._processInputParams(input);\r\n        const def = this._def;\r\n        if (ctx.parsedType !== util_1.ZodParsedType.array) {\r\n            (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                code: ZodError_1.ZodIssueCode.invalid_type,\r\n                expected: util_1.ZodParsedType.array,\r\n                received: ctx.parsedType,\r\n            });\r\n            return parseUtil_1.INVALID;\r\n        }\r\n        if (def.exactLength !== null) {\r\n            const tooBig = ctx.data.length > def.exactLength.value;\r\n            const tooSmall = ctx.data.length < def.exactLength.value;\r\n            if (tooBig || tooSmall) {\r\n                (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                    code: tooBig ? ZodError_1.ZodIssueCode.too_big : ZodError_1.ZodIssueCode.too_small,\r\n                    minimum: (tooSmall ? def.exactLength.value : undefined),\r\n                    maximum: (tooBig ? def.exactLength.value : undefined),\r\n                    type: \"array\",\r\n                    inclusive: true,\r\n                    exact: true,\r\n                    message: def.exactLength.message,\r\n                });\r\n                status.dirty();\r\n            }\r\n        }\r\n        if (def.minLength !== null) {\r\n            if (ctx.data.length < def.minLength.value) {\r\n                (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                    code: ZodError_1.ZodIssueCode.too_small,\r\n                    minimum: def.minLength.value,\r\n                    type: \"array\",\r\n                    inclusive: true,\r\n                    exact: false,\r\n                    message: def.minLength.message,\r\n                });\r\n                status.dirty();\r\n            }\r\n        }\r\n        if (def.maxLength !== null) {\r\n            if (ctx.data.length > def.maxLength.value) {\r\n                (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                    code: ZodError_1.ZodIssueCode.too_big,\r\n                    maximum: def.maxLength.value,\r\n                    type: \"array\",\r\n                    inclusive: true,\r\n                    exact: false,\r\n                    message: def.maxLength.message,\r\n                });\r\n                status.dirty();\r\n            }\r\n        }\r\n        if (ctx.common.async) {\r\n            return Promise.all([...ctx.data].map((item, i) => {\r\n                return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\r\n            })).then((result) => {\r\n                return parseUtil_1.ParseStatus.mergeArray(status, result);\r\n            });\r\n        }\r\n        const result = [...ctx.data].map((item, i) => {\r\n            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\r\n        });\r\n        return parseUtil_1.ParseStatus.mergeArray(status, result);\r\n    }\r\n    get element() {\r\n        return this._def.type;\r\n    }\r\n    min(minLength, message) {\r\n        return new ZodArray({\r\n            ...this._def,\r\n            minLength: { value: minLength, message: errorUtil_1.errorUtil.toString(message) },\r\n        });\r\n    }\r\n    max(maxLength, message) {\r\n        return new ZodArray({\r\n            ...this._def,\r\n            maxLength: { value: maxLength, message: errorUtil_1.errorUtil.toString(message) },\r\n        });\r\n    }\r\n    length(len, message) {\r\n        return new ZodArray({\r\n            ...this._def,\r\n            exactLength: { value: len, message: errorUtil_1.errorUtil.toString(message) },\r\n        });\r\n    }\r\n    nonempty(message) {\r\n        return this.min(1, message);\r\n    }\r\n}\r\nexports.ZodArray = ZodArray;\r\nZodArray.create = (schema, params) => {\r\n    return new ZodArray({\r\n        type: schema,\r\n        minLength: null,\r\n        maxLength: null,\r\n        exactLength: null,\r\n        typeName: ZodFirstPartyTypeKind.ZodArray,\r\n        ...processCreateParams(params),\r\n    });\r\n};\r\nfunction deepPartialify(schema) {\r\n    if (schema instanceof ZodObject) {\r\n        const newShape = {};\r\n        for (const key in schema.shape) {\r\n            const fieldSchema = schema.shape[key];\r\n            newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\r\n        }\r\n        return new ZodObject({\r\n            ...schema._def,\r\n            shape: () => newShape,\r\n        });\r\n    }\r\n    else if (schema instanceof ZodArray) {\r\n        return new ZodArray({\r\n            ...schema._def,\r\n            type: deepPartialify(schema.element),\r\n        });\r\n    }\r\n    else if (schema instanceof ZodOptional) {\r\n        return ZodOptional.create(deepPartialify(schema.unwrap()));\r\n    }\r\n    else if (schema instanceof ZodNullable) {\r\n        return ZodNullable.create(deepPartialify(schema.unwrap()));\r\n    }\r\n    else if (schema instanceof ZodTuple) {\r\n        return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));\r\n    }\r\n    else {\r\n        return schema;\r\n    }\r\n}\r\nclass ZodObject extends ZodType {\r\n    constructor() {\r\n        super(...arguments);\r\n        this._cached = null;\r\n        this.nonstrict = this.passthrough;\r\n        this.augment = this.extend;\r\n    }\r\n    _getCached() {\r\n        if (this._cached !== null)\r\n            return this._cached;\r\n        const shape = this._def.shape();\r\n        const keys = util_1.util.objectKeys(shape);\r\n        return (this._cached = { shape, keys });\r\n    }\r\n    _parse(input) {\r\n        const parsedType = this._getType(input);\r\n        if (parsedType !== util_1.ZodParsedType.object) {\r\n            const ctx = this._getOrReturnCtx(input);\r\n            (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                code: ZodError_1.ZodIssueCode.invalid_type,\r\n                expected: util_1.ZodParsedType.object,\r\n                received: ctx.parsedType,\r\n            });\r\n            return parseUtil_1.INVALID;\r\n        }\r\n        const { status, ctx } = this._processInputParams(input);\r\n        const { shape, keys: shapeKeys } = this._getCached();\r\n        const extraKeys = [];\r\n        if (!(this._def.catchall instanceof ZodNever &&\r\n            this._def.unknownKeys === \"strip\")) {\r\n            for (const key in ctx.data) {\r\n                if (!shapeKeys.includes(key)) {\r\n                    extraKeys.push(key);\r\n                }\r\n            }\r\n        }\r\n        const pairs = [];\r\n        for (const key of shapeKeys) {\r\n            const keyValidator = shape[key];\r\n            const value = ctx.data[key];\r\n            pairs.push({\r\n                key: { status: \"valid\", value: key },\r\n                value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\r\n                alwaysSet: key in ctx.data,\r\n            });\r\n        }\r\n        if (this._def.catchall instanceof ZodNever) {\r\n            const unknownKeys = this._def.unknownKeys;\r\n            if (unknownKeys === \"passthrough\") {\r\n                for (const key of extraKeys) {\r\n                    pairs.push({\r\n                        key: { status: \"valid\", value: key },\r\n                        value: { status: \"valid\", value: ctx.data[key] },\r\n                    });\r\n                }\r\n            }\r\n            else if (unknownKeys === \"strict\") {\r\n                if (extraKeys.length > 0) {\r\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                        code: ZodError_1.ZodIssueCode.unrecognized_keys,\r\n                        keys: extraKeys,\r\n                    });\r\n                    status.dirty();\r\n                }\r\n            }\r\n            else if (unknownKeys === \"strip\") {\r\n            }\r\n            else {\r\n                throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\r\n            }\r\n        }\r\n        else {\r\n            const catchall = this._def.catchall;\r\n            for (const key of extraKeys) {\r\n                const value = ctx.data[key];\r\n                pairs.push({\r\n                    key: { status: \"valid\", value: key },\r\n                    value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\r\n                    alwaysSet: key in ctx.data,\r\n                });\r\n            }\r\n        }\r\n        if (ctx.common.async) {\r\n            return Promise.resolve()\r\n                .then(async () => {\r\n                const syncPairs = [];\r\n                for (const pair of pairs) {\r\n                    const key = await pair.key;\r\n                    syncPairs.push({\r\n                        key,\r\n                        value: await pair.value,\r\n                        alwaysSet: pair.alwaysSet,\r\n                    });\r\n                }\r\n                return syncPairs;\r\n            })\r\n                .then((syncPairs) => {\r\n                return parseUtil_1.ParseStatus.mergeObjectSync(status, syncPairs);\r\n            });\r\n        }\r\n        else {\r\n            return parseUtil_1.ParseStatus.mergeObjectSync(status, pairs);\r\n        }\r\n    }\r\n    get shape() {\r\n        return this._def.shape();\r\n    }\r\n    strict(message) {\r\n        errorUtil_1.errorUtil.errToObj;\r\n        return new ZodObject({\r\n            ...this._def,\r\n            unknownKeys: \"strict\",\r\n            ...(message !== undefined\r\n                ? {\r\n                    errorMap: (issue, ctx) => {\r\n                        var _a, _b, _c, _d;\r\n                        const defaultError = (_c = (_b = (_a = this._def).errorMap) === null || _b === void 0 ? void 0 : _b.call(_a, issue, ctx).message) !== null && _c !== void 0 ? _c : ctx.defaultError;\r\n                        if (issue.code === \"unrecognized_keys\")\r\n                            return {\r\n                                message: (_d = errorUtil_1.errorUtil.errToObj(message).message) !== null && _d !== void 0 ? _d : defaultError,\r\n                            };\r\n                        return {\r\n                            message: defaultError,\r\n                        };\r\n                    },\r\n                }\r\n                : {}),\r\n        });\r\n    }\r\n    strip() {\r\n        return new ZodObject({\r\n            ...this._def,\r\n            unknownKeys: \"strip\",\r\n        });\r\n    }\r\n    passthrough() {\r\n        return new ZodObject({\r\n            ...this._def,\r\n            unknownKeys: \"passthrough\",\r\n        });\r\n    }\r\n    extend(augmentation) {\r\n        return new ZodObject({\r\n            ...this._def,\r\n            shape: () => ({\r\n                ...this._def.shape(),\r\n                ...augmentation,\r\n            }),\r\n        });\r\n    }\r\n    merge(merging) {\r\n        const merged = new ZodObject({\r\n            unknownKeys: merging._def.unknownKeys,\r\n            catchall: merging._def.catchall,\r\n            shape: () => ({\r\n                ...this._def.shape(),\r\n                ...merging._def.shape(),\r\n            }),\r\n            typeName: ZodFirstPartyTypeKind.ZodObject,\r\n        });\r\n        return merged;\r\n    }\r\n    setKey(key, schema) {\r\n        return this.augment({ [key]: schema });\r\n    }\r\n    catchall(index) {\r\n        return new ZodObject({\r\n            ...this._def,\r\n            catchall: index,\r\n        });\r\n    }\r\n    pick(mask) {\r\n        const shape = {};\r\n        util_1.util.objectKeys(mask).forEach((key) => {\r\n            if (mask[key] && this.shape[key]) {\r\n                shape[key] = this.shape[key];\r\n            }\r\n        });\r\n        return new ZodObject({\r\n            ...this._def,\r\n            shape: () => shape,\r\n        });\r\n    }\r\n    omit(mask) {\r\n        const shape = {};\r\n        util_1.util.objectKeys(this.shape).forEach((key) => {\r\n            if (!mask[key]) {\r\n                shape[key] = this.shape[key];\r\n            }\r\n        });\r\n        return new ZodObject({\r\n            ...this._def,\r\n            shape: () => shape,\r\n        });\r\n    }\r\n    deepPartial() {\r\n        return deepPartialify(this);\r\n    }\r\n    partial(mask) {\r\n        const newShape = {};\r\n        util_1.util.objectKeys(this.shape).forEach((key) => {\r\n            const fieldSchema = this.shape[key];\r\n            if (mask && !mask[key]) {\r\n                newShape[key] = fieldSchema;\r\n            }\r\n            else {\r\n                newShape[key] = fieldSchema.optional();\r\n            }\r\n        });\r\n        return new ZodObject({\r\n            ...this._def,\r\n            shape: () => newShape,\r\n        });\r\n    }\r\n    required(mask) {\r\n        const newShape = {};\r\n        util_1.util.objectKeys(this.shape).forEach((key) => {\r\n            if (mask && !mask[key]) {\r\n                newShape[key] = this.shape[key];\r\n            }\r\n            else {\r\n                const fieldSchema = this.shape[key];\r\n                let newField = fieldSchema;\r\n                while (newField instanceof ZodOptional) {\r\n                    newField = newField._def.innerType;\r\n                }\r\n                newShape[key] = newField;\r\n            }\r\n        });\r\n        return new ZodObject({\r\n            ...this._def,\r\n            shape: () => newShape,\r\n        });\r\n    }\r\n    keyof() {\r\n        return createZodEnum(util_1.util.objectKeys(this.shape));\r\n    }\r\n}\r\nexports.ZodObject = ZodObject;\r\nZodObject.create = (shape, params) => {\r\n    return new ZodObject({\r\n        shape: () => shape,\r\n        unknownKeys: \"strip\",\r\n        catchall: ZodNever.create(),\r\n        typeName: ZodFirstPartyTypeKind.ZodObject,\r\n        ...processCreateParams(params),\r\n    });\r\n};\r\nZodObject.strictCreate = (shape, params) => {\r\n    return new ZodObject({\r\n        shape: () => shape,\r\n        unknownKeys: \"strict\",\r\n        catchall: ZodNever.create(),\r\n        typeName: ZodFirstPartyTypeKind.ZodObject,\r\n        ...processCreateParams(params),\r\n    });\r\n};\r\nZodObject.lazycreate = (shape, params) => {\r\n    return new ZodObject({\r\n        shape,\r\n        unknownKeys: \"strip\",\r\n        catchall: ZodNever.create(),\r\n        typeName: ZodFirstPartyTypeKind.ZodObject,\r\n        ...processCreateParams(params),\r\n    });\r\n};\r\nclass ZodUnion extends ZodType {\r\n    _parse(input) {\r\n        const { ctx } = this._processInputParams(input);\r\n        const options = this._def.options;\r\n        function handleResults(results) {\r\n            for (const result of results) {\r\n                if (result.result.status === \"valid\") {\r\n                    return result.result;\r\n                }\r\n            }\r\n            for (const result of results) {\r\n                if (result.result.status === \"dirty\") {\r\n                    ctx.common.issues.push(...result.ctx.common.issues);\r\n                    return result.result;\r\n                }\r\n            }\r\n            const unionErrors = results.map((result) => new ZodError_1.ZodError(result.ctx.common.issues));\r\n            (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                code: ZodError_1.ZodIssueCode.invalid_union,\r\n                unionErrors,\r\n            });\r\n            return parseUtil_1.INVALID;\r\n        }\r\n        if (ctx.common.async) {\r\n            return Promise.all(options.map(async (option) => {\r\n                const childCtx = {\r\n                    ...ctx,\r\n                    common: {\r\n                        ...ctx.common,\r\n                        issues: [],\r\n                    },\r\n                    parent: null,\r\n                };\r\n                return {\r\n                    result: await option._parseAsync({\r\n                        data: ctx.data,\r\n                        path: ctx.path,\r\n                        parent: childCtx,\r\n                    }),\r\n                    ctx: childCtx,\r\n                };\r\n            })).then(handleResults);\r\n        }\r\n        else {\r\n            let dirty = undefined;\r\n            const issues = [];\r\n            for (const option of options) {\r\n                const childCtx = {\r\n                    ...ctx,\r\n                    common: {\r\n                        ...ctx.common,\r\n                        issues: [],\r\n                    },\r\n                    parent: null,\r\n                };\r\n                const result = option._parseSync({\r\n                    data: ctx.data,\r\n                    path: ctx.path,\r\n                    parent: childCtx,\r\n                });\r\n                if (result.status === \"valid\") {\r\n                    return result;\r\n                }\r\n                else if (result.status === \"dirty\" && !dirty) {\r\n                    dirty = { result, ctx: childCtx };\r\n                }\r\n                if (childCtx.common.issues.length) {\r\n                    issues.push(childCtx.common.issues);\r\n                }\r\n            }\r\n            if (dirty) {\r\n                ctx.common.issues.push(...dirty.ctx.common.issues);\r\n                return dirty.result;\r\n            }\r\n            const unionErrors = issues.map((issues) => new ZodError_1.ZodError(issues));\r\n            (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                code: ZodError_1.ZodIssueCode.invalid_union,\r\n                unionErrors,\r\n            });\r\n            return parseUtil_1.INVALID;\r\n        }\r\n    }\r\n    get options() {\r\n        return this._def.options;\r\n    }\r\n}\r\nexports.ZodUnion = ZodUnion;\r\nZodUnion.create = (types, params) => {\r\n    return new ZodUnion({\r\n        options: types,\r\n        typeName: ZodFirstPartyTypeKind.ZodUnion,\r\n        ...processCreateParams(params),\r\n    });\r\n};\r\nconst getDiscriminator = (type) => {\r\n    if (type instanceof ZodLazy) {\r\n        return getDiscriminator(type.schema);\r\n    }\r\n    else if (type instanceof ZodEffects) {\r\n        return getDiscriminator(type.innerType());\r\n    }\r\n    else if (type instanceof ZodLiteral) {\r\n        return [type.value];\r\n    }\r\n    else if (type instanceof ZodEnum) {\r\n        return type.options;\r\n    }\r\n    else if (type instanceof ZodNativeEnum) {\r\n        return Object.keys(type.enum);\r\n    }\r\n    else if (type instanceof ZodDefault) {\r\n        return getDiscriminator(type._def.innerType);\r\n    }\r\n    else if (type instanceof ZodUndefined) {\r\n        return [undefined];\r\n    }\r\n    else if (type instanceof ZodNull) {\r\n        return [null];\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n};\r\nclass ZodDiscriminatedUnion extends ZodType {\r\n    _parse(input) {\r\n        const { ctx } = this._processInputParams(input);\r\n        if (ctx.parsedType !== util_1.ZodParsedType.object) {\r\n            (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                code: ZodError_1.ZodIssueCode.invalid_type,\r\n                expected: util_1.ZodParsedType.object,\r\n                received: ctx.parsedType,\r\n            });\r\n            return parseUtil_1.INVALID;\r\n        }\r\n        const discriminator = this.discriminator;\r\n        const discriminatorValue = ctx.data[discriminator];\r\n        const option = this.optionsMap.get(discriminatorValue);\r\n        if (!option) {\r\n            (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                code: ZodError_1.ZodIssueCode.invalid_union_discriminator,\r\n                options: Array.from(this.optionsMap.keys()),\r\n                path: [discriminator],\r\n            });\r\n            return parseUtil_1.INVALID;\r\n        }\r\n        if (ctx.common.async) {\r\n            return option._parseAsync({\r\n                data: ctx.data,\r\n                path: ctx.path,\r\n                parent: ctx,\r\n            });\r\n        }\r\n        else {\r\n            return option._parseSync({\r\n                data: ctx.data,\r\n                path: ctx.path,\r\n                parent: ctx,\r\n            });\r\n        }\r\n    }\r\n    get discriminator() {\r\n        return this._def.discriminator;\r\n    }\r\n    get options() {\r\n        return this._def.options;\r\n    }\r\n    get optionsMap() {\r\n        return this._def.optionsMap;\r\n    }\r\n    static create(discriminator, options, params) {\r\n        const optionsMap = new Map();\r\n        for (const type of options) {\r\n            const discriminatorValues = getDiscriminator(type.shape[discriminator]);\r\n            if (!discriminatorValues) {\r\n                throw new Error(`A discriminator value for key \\`${discriminator}\\` could not be extracted from all schema options`);\r\n            }\r\n            for (const value of discriminatorValues) {\r\n                if (optionsMap.has(value)) {\r\n                    throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);\r\n                }\r\n                optionsMap.set(value, type);\r\n            }\r\n        }\r\n        return new ZodDiscriminatedUnion({\r\n            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\r\n            discriminator,\r\n            options,\r\n            optionsMap,\r\n            ...processCreateParams(params),\r\n        });\r\n    }\r\n}\r\nexports.ZodDiscriminatedUnion = ZodDiscriminatedUnion;\r\nfunction mergeValues(a, b) {\r\n    const aType = (0, util_1.getParsedType)(a);\r\n    const bType = (0, util_1.getParsedType)(b);\r\n    if (a === b) {\r\n        return { valid: true, data: a };\r\n    }\r\n    else if (aType === util_1.ZodParsedType.object && bType === util_1.ZodParsedType.object) {\r\n        const bKeys = util_1.util.objectKeys(b);\r\n        const sharedKeys = util_1.util\r\n            .objectKeys(a)\r\n            .filter((key) => bKeys.indexOf(key) !== -1);\r\n        const newObj = { ...a, ...b };\r\n        for (const key of sharedKeys) {\r\n            const sharedValue = mergeValues(a[key], b[key]);\r\n            if (!sharedValue.valid) {\r\n                return { valid: false };\r\n            }\r\n            newObj[key] = sharedValue.data;\r\n        }\r\n        return { valid: true, data: newObj };\r\n    }\r\n    else if (aType === util_1.ZodParsedType.array && bType === util_1.ZodParsedType.array) {\r\n        if (a.length !== b.length) {\r\n            return { valid: false };\r\n        }\r\n        const newArray = [];\r\n        for (let index = 0; index < a.length; index++) {\r\n            const itemA = a[index];\r\n            const itemB = b[index];\r\n            const sharedValue = mergeValues(itemA, itemB);\r\n            if (!sharedValue.valid) {\r\n                return { valid: false };\r\n            }\r\n            newArray.push(sharedValue.data);\r\n        }\r\n        return { valid: true, data: newArray };\r\n    }\r\n    else if (aType === util_1.ZodParsedType.date &&\r\n        bType === util_1.ZodParsedType.date &&\r\n        +a === +b) {\r\n        return { valid: true, data: a };\r\n    }\r\n    else {\r\n        return { valid: false };\r\n    }\r\n}\r\nclass ZodIntersection extends ZodType {\r\n    _parse(input) {\r\n        const { status, ctx } = this._processInputParams(input);\r\n        const handleParsed = (parsedLeft, parsedRight) => {\r\n            if ((0, parseUtil_1.isAborted)(parsedLeft) || (0, parseUtil_1.isAborted)(parsedRight)) {\r\n                return parseUtil_1.INVALID;\r\n            }\r\n            const merged = mergeValues(parsedLeft.value, parsedRight.value);\r\n            if (!merged.valid) {\r\n                (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                    code: ZodError_1.ZodIssueCode.invalid_intersection_types,\r\n                });\r\n                return parseUtil_1.INVALID;\r\n            }\r\n            if ((0, parseUtil_1.isDirty)(parsedLeft) || (0, parseUtil_1.isDirty)(parsedRight)) {\r\n                status.dirty();\r\n            }\r\n            return { status: status.value, value: merged.data };\r\n        };\r\n        if (ctx.common.async) {\r\n            return Promise.all([\r\n                this._def.left._parseAsync({\r\n                    data: ctx.data,\r\n                    path: ctx.path,\r\n                    parent: ctx,\r\n                }),\r\n                this._def.right._parseAsync({\r\n                    data: ctx.data,\r\n                    path: ctx.path,\r\n                    parent: ctx,\r\n                }),\r\n            ]).then(([left, right]) => handleParsed(left, right));\r\n        }\r\n        else {\r\n            return handleParsed(this._def.left._parseSync({\r\n                data: ctx.data,\r\n                path: ctx.path,\r\n                parent: ctx,\r\n            }), this._def.right._parseSync({\r\n                data: ctx.data,\r\n                path: ctx.path,\r\n                parent: ctx,\r\n            }));\r\n        }\r\n    }\r\n}\r\nexports.ZodIntersection = ZodIntersection;\r\nZodIntersection.create = (left, right, params) => {\r\n    return new ZodIntersection({\r\n        left: left,\r\n        right: right,\r\n        typeName: ZodFirstPartyTypeKind.ZodIntersection,\r\n        ...processCreateParams(params),\r\n    });\r\n};\r\nclass ZodTuple extends ZodType {\r\n    _parse(input) {\r\n        const { status, ctx } = this._processInputParams(input);\r\n        if (ctx.parsedType !== util_1.ZodParsedType.array) {\r\n            (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                code: ZodError_1.ZodIssueCode.invalid_type,\r\n                expected: util_1.ZodParsedType.array,\r\n                received: ctx.parsedType,\r\n            });\r\n            return parseUtil_1.INVALID;\r\n        }\r\n        if (ctx.data.length < this._def.items.length) {\r\n            (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                code: ZodError_1.ZodIssueCode.too_small,\r\n                minimum: this._def.items.length,\r\n                inclusive: true,\r\n                exact: false,\r\n                type: \"array\",\r\n            });\r\n            return parseUtil_1.INVALID;\r\n        }\r\n        const rest = this._def.rest;\r\n        if (!rest && ctx.data.length > this._def.items.length) {\r\n            (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                code: ZodError_1.ZodIssueCode.too_big,\r\n                maximum: this._def.items.length,\r\n                inclusive: true,\r\n                exact: false,\r\n                type: \"array\",\r\n            });\r\n            status.dirty();\r\n        }\r\n        const items = [...ctx.data]\r\n            .map((item, itemIndex) => {\r\n            const schema = this._def.items[itemIndex] || this._def.rest;\r\n            if (!schema)\r\n                return null;\r\n            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\r\n        })\r\n            .filter((x) => !!x);\r\n        if (ctx.common.async) {\r\n            return Promise.all(items).then((results) => {\r\n                return parseUtil_1.ParseStatus.mergeArray(status, results);\r\n            });\r\n        }\r\n        else {\r\n            return parseUtil_1.ParseStatus.mergeArray(status, items);\r\n        }\r\n    }\r\n    get items() {\r\n        return this._def.items;\r\n    }\r\n    rest(rest) {\r\n        return new ZodTuple({\r\n            ...this._def,\r\n            rest,\r\n        });\r\n    }\r\n}\r\nexports.ZodTuple = ZodTuple;\r\nZodTuple.create = (schemas, params) => {\r\n    if (!Array.isArray(schemas)) {\r\n        throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");\r\n    }\r\n    return new ZodTuple({\r\n        items: schemas,\r\n        typeName: ZodFirstPartyTypeKind.ZodTuple,\r\n        rest: null,\r\n        ...processCreateParams(params),\r\n    });\r\n};\r\nclass ZodRecord extends ZodType {\r\n    get keySchema() {\r\n        return this._def.keyType;\r\n    }\r\n    get valueSchema() {\r\n        return this._def.valueType;\r\n    }\r\n    _parse(input) {\r\n        const { status, ctx } = this._processInputParams(input);\r\n        if (ctx.parsedType !== util_1.ZodParsedType.object) {\r\n            (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                code: ZodError_1.ZodIssueCode.invalid_type,\r\n                expected: util_1.ZodParsedType.object,\r\n                received: ctx.parsedType,\r\n            });\r\n            return parseUtil_1.INVALID;\r\n        }\r\n        const pairs = [];\r\n        const keyType = this._def.keyType;\r\n        const valueType = this._def.valueType;\r\n        for (const key in ctx.data) {\r\n            pairs.push({\r\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\r\n                value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\r\n            });\r\n        }\r\n        if (ctx.common.async) {\r\n            return parseUtil_1.ParseStatus.mergeObjectAsync(status, pairs);\r\n        }\r\n        else {\r\n            return parseUtil_1.ParseStatus.mergeObjectSync(status, pairs);\r\n        }\r\n    }\r\n    get element() {\r\n        return this._def.valueType;\r\n    }\r\n    static create(first, second, third) {\r\n        if (second instanceof ZodType) {\r\n            return new ZodRecord({\r\n                keyType: first,\r\n                valueType: second,\r\n                typeName: ZodFirstPartyTypeKind.ZodRecord,\r\n                ...processCreateParams(third),\r\n            });\r\n        }\r\n        return new ZodRecord({\r\n            keyType: ZodString.create(),\r\n            valueType: first,\r\n            typeName: ZodFirstPartyTypeKind.ZodRecord,\r\n            ...processCreateParams(second),\r\n        });\r\n    }\r\n}\r\nexports.ZodRecord = ZodRecord;\r\nclass ZodMap extends ZodType {\r\n    get keySchema() {\r\n        return this._def.keyType;\r\n    }\r\n    get valueSchema() {\r\n        return this._def.valueType;\r\n    }\r\n    _parse(input) {\r\n        const { status, ctx } = this._processInputParams(input);\r\n        if (ctx.parsedType !== util_1.ZodParsedType.map) {\r\n            (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                code: ZodError_1.ZodIssueCode.invalid_type,\r\n                expected: util_1.ZodParsedType.map,\r\n                received: ctx.parsedType,\r\n            });\r\n            return parseUtil_1.INVALID;\r\n        }\r\n        const keyType = this._def.keyType;\r\n        const valueType = this._def.valueType;\r\n        const pairs = [...ctx.data.entries()].map(([key, value], index) => {\r\n            return {\r\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\r\n                value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"])),\r\n            };\r\n        });\r\n        if (ctx.common.async) {\r\n            const finalMap = new Map();\r\n            return Promise.resolve().then(async () => {\r\n                for (const pair of pairs) {\r\n                    const key = await pair.key;\r\n                    const value = await pair.value;\r\n                    if (key.status === \"aborted\" || value.status === \"aborted\") {\r\n                        return parseUtil_1.INVALID;\r\n                    }\r\n                    if (key.status === \"dirty\" || value.status === \"dirty\") {\r\n                        status.dirty();\r\n                    }\r\n                    finalMap.set(key.value, value.value);\r\n                }\r\n                return { status: status.value, value: finalMap };\r\n            });\r\n        }\r\n        else {\r\n            const finalMap = new Map();\r\n            for (const pair of pairs) {\r\n                const key = pair.key;\r\n                const value = pair.value;\r\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\r\n                    return parseUtil_1.INVALID;\r\n                }\r\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\r\n                    status.dirty();\r\n                }\r\n                finalMap.set(key.value, value.value);\r\n            }\r\n            return { status: status.value, value: finalMap };\r\n        }\r\n    }\r\n}\r\nexports.ZodMap = ZodMap;\r\nZodMap.create = (keyType, valueType, params) => {\r\n    return new ZodMap({\r\n        valueType,\r\n        keyType,\r\n        typeName: ZodFirstPartyTypeKind.ZodMap,\r\n        ...processCreateParams(params),\r\n    });\r\n};\r\nclass ZodSet extends ZodType {\r\n    _parse(input) {\r\n        const { status, ctx } = this._processInputParams(input);\r\n        if (ctx.parsedType !== util_1.ZodParsedType.set) {\r\n            (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                code: ZodError_1.ZodIssueCode.invalid_type,\r\n                expected: util_1.ZodParsedType.set,\r\n                received: ctx.parsedType,\r\n            });\r\n            return parseUtil_1.INVALID;\r\n        }\r\n        const def = this._def;\r\n        if (def.minSize !== null) {\r\n            if (ctx.data.size < def.minSize.value) {\r\n                (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                    code: ZodError_1.ZodIssueCode.too_small,\r\n                    minimum: def.minSize.value,\r\n                    type: \"set\",\r\n                    inclusive: true,\r\n                    exact: false,\r\n                    message: def.minSize.message,\r\n                });\r\n                status.dirty();\r\n            }\r\n        }\r\n        if (def.maxSize !== null) {\r\n            if (ctx.data.size > def.maxSize.value) {\r\n                (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                    code: ZodError_1.ZodIssueCode.too_big,\r\n                    maximum: def.maxSize.value,\r\n                    type: \"set\",\r\n                    inclusive: true,\r\n                    exact: false,\r\n                    message: def.maxSize.message,\r\n                });\r\n                status.dirty();\r\n            }\r\n        }\r\n        const valueType = this._def.valueType;\r\n        function finalizeSet(elements) {\r\n            const parsedSet = new Set();\r\n            for (const element of elements) {\r\n                if (element.status === \"aborted\")\r\n                    return parseUtil_1.INVALID;\r\n                if (element.status === \"dirty\")\r\n                    status.dirty();\r\n                parsedSet.add(element.value);\r\n            }\r\n            return { status: status.value, value: parsedSet };\r\n        }\r\n        const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\r\n        if (ctx.common.async) {\r\n            return Promise.all(elements).then((elements) => finalizeSet(elements));\r\n        }\r\n        else {\r\n            return finalizeSet(elements);\r\n        }\r\n    }\r\n    min(minSize, message) {\r\n        return new ZodSet({\r\n            ...this._def,\r\n            minSize: { value: minSize, message: errorUtil_1.errorUtil.toString(message) },\r\n        });\r\n    }\r\n    max(maxSize, message) {\r\n        return new ZodSet({\r\n            ...this._def,\r\n            maxSize: { value: maxSize, message: errorUtil_1.errorUtil.toString(message) },\r\n        });\r\n    }\r\n    size(size, message) {\r\n        return this.min(size, message).max(size, message);\r\n    }\r\n    nonempty(message) {\r\n        return this.min(1, message);\r\n    }\r\n}\r\nexports.ZodSet = ZodSet;\r\nZodSet.create = (valueType, params) => {\r\n    return new ZodSet({\r\n        valueType,\r\n        minSize: null,\r\n        maxSize: null,\r\n        typeName: ZodFirstPartyTypeKind.ZodSet,\r\n        ...processCreateParams(params),\r\n    });\r\n};\r\nclass ZodFunction extends ZodType {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.validate = this.implement;\r\n    }\r\n    _parse(input) {\r\n        const { ctx } = this._processInputParams(input);\r\n        if (ctx.parsedType !== util_1.ZodParsedType.function) {\r\n            (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                code: ZodError_1.ZodIssueCode.invalid_type,\r\n                expected: util_1.ZodParsedType.function,\r\n                received: ctx.parsedType,\r\n            });\r\n            return parseUtil_1.INVALID;\r\n        }\r\n        function makeArgsIssue(args, error) {\r\n            return (0, parseUtil_1.makeIssue)({\r\n                data: args,\r\n                path: ctx.path,\r\n                errorMaps: [\r\n                    ctx.common.contextualErrorMap,\r\n                    ctx.schemaErrorMap,\r\n                    (0, errors_1.getErrorMap)(),\r\n                    errors_1.defaultErrorMap,\r\n                ].filter((x) => !!x),\r\n                issueData: {\r\n                    code: ZodError_1.ZodIssueCode.invalid_arguments,\r\n                    argumentsError: error,\r\n                },\r\n            });\r\n        }\r\n        function makeReturnsIssue(returns, error) {\r\n            return (0, parseUtil_1.makeIssue)({\r\n                data: returns,\r\n                path: ctx.path,\r\n                errorMaps: [\r\n                    ctx.common.contextualErrorMap,\r\n                    ctx.schemaErrorMap,\r\n                    (0, errors_1.getErrorMap)(),\r\n                    errors_1.defaultErrorMap,\r\n                ].filter((x) => !!x),\r\n                issueData: {\r\n                    code: ZodError_1.ZodIssueCode.invalid_return_type,\r\n                    returnTypeError: error,\r\n                },\r\n            });\r\n        }\r\n        const params = { errorMap: ctx.common.contextualErrorMap };\r\n        const fn = ctx.data;\r\n        if (this._def.returns instanceof ZodPromise) {\r\n            const me = this;\r\n            return (0, parseUtil_1.OK)(async function (...args) {\r\n                const error = new ZodError_1.ZodError([]);\r\n                const parsedArgs = await me._def.args\r\n                    .parseAsync(args, params)\r\n                    .catch((e) => {\r\n                    error.addIssue(makeArgsIssue(args, e));\r\n                    throw error;\r\n                });\r\n                const result = await Reflect.apply(fn, this, parsedArgs);\r\n                const parsedReturns = await me._def.returns._def.type\r\n                    .parseAsync(result, params)\r\n                    .catch((e) => {\r\n                    error.addIssue(makeReturnsIssue(result, e));\r\n                    throw error;\r\n                });\r\n                return parsedReturns;\r\n            });\r\n        }\r\n        else {\r\n            const me = this;\r\n            return (0, parseUtil_1.OK)(function (...args) {\r\n                const parsedArgs = me._def.args.safeParse(args, params);\r\n                if (!parsedArgs.success) {\r\n                    throw new ZodError_1.ZodError([makeArgsIssue(args, parsedArgs.error)]);\r\n                }\r\n                const result = Reflect.apply(fn, this, parsedArgs.data);\r\n                const parsedReturns = me._def.returns.safeParse(result, params);\r\n                if (!parsedReturns.success) {\r\n                    throw new ZodError_1.ZodError([makeReturnsIssue(result, parsedReturns.error)]);\r\n                }\r\n                return parsedReturns.data;\r\n            });\r\n        }\r\n    }\r\n    parameters() {\r\n        return this._def.args;\r\n    }\r\n    returnType() {\r\n        return this._def.returns;\r\n    }\r\n    args(...items) {\r\n        return new ZodFunction({\r\n            ...this._def,\r\n            args: ZodTuple.create(items).rest(ZodUnknown.create()),\r\n        });\r\n    }\r\n    returns(returnType) {\r\n        return new ZodFunction({\r\n            ...this._def,\r\n            returns: returnType,\r\n        });\r\n    }\r\n    implement(func) {\r\n        const validatedFunc = this.parse(func);\r\n        return validatedFunc;\r\n    }\r\n    strictImplement(func) {\r\n        const validatedFunc = this.parse(func);\r\n        return validatedFunc;\r\n    }\r\n    static create(args, returns, params) {\r\n        return new ZodFunction({\r\n            args: (args\r\n                ? args\r\n                : ZodTuple.create([]).rest(ZodUnknown.create())),\r\n            returns: returns || ZodUnknown.create(),\r\n            typeName: ZodFirstPartyTypeKind.ZodFunction,\r\n            ...processCreateParams(params),\r\n        });\r\n    }\r\n}\r\nexports.ZodFunction = ZodFunction;\r\nclass ZodLazy extends ZodType {\r\n    get schema() {\r\n        return this._def.getter();\r\n    }\r\n    _parse(input) {\r\n        const { ctx } = this._processInputParams(input);\r\n        const lazySchema = this._def.getter();\r\n        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\r\n    }\r\n}\r\nexports.ZodLazy = ZodLazy;\r\nZodLazy.create = (getter, params) => {\r\n    return new ZodLazy({\r\n        getter: getter,\r\n        typeName: ZodFirstPartyTypeKind.ZodLazy,\r\n        ...processCreateParams(params),\r\n    });\r\n};\r\nclass ZodLiteral extends ZodType {\r\n    _parse(input) {\r\n        if (input.data !== this._def.value) {\r\n            const ctx = this._getOrReturnCtx(input);\r\n            (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                received: ctx.data,\r\n                code: ZodError_1.ZodIssueCode.invalid_literal,\r\n                expected: this._def.value,\r\n            });\r\n            return parseUtil_1.INVALID;\r\n        }\r\n        return { status: \"valid\", value: input.data };\r\n    }\r\n    get value() {\r\n        return this._def.value;\r\n    }\r\n}\r\nexports.ZodLiteral = ZodLiteral;\r\nZodLiteral.create = (value, params) => {\r\n    return new ZodLiteral({\r\n        value: value,\r\n        typeName: ZodFirstPartyTypeKind.ZodLiteral,\r\n        ...processCreateParams(params),\r\n    });\r\n};\r\nfunction createZodEnum(values, params) {\r\n    return new ZodEnum({\r\n        values,\r\n        typeName: ZodFirstPartyTypeKind.ZodEnum,\r\n        ...processCreateParams(params),\r\n    });\r\n}\r\nclass ZodEnum extends ZodType {\r\n    _parse(input) {\r\n        if (typeof input.data !== \"string\") {\r\n            const ctx = this._getOrReturnCtx(input);\r\n            const expectedValues = this._def.values;\r\n            (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                expected: util_1.util.joinValues(expectedValues),\r\n                received: ctx.parsedType,\r\n                code: ZodError_1.ZodIssueCode.invalid_type,\r\n            });\r\n            return parseUtil_1.INVALID;\r\n        }\r\n        if (this._def.values.indexOf(input.data) === -1) {\r\n            const ctx = this._getOrReturnCtx(input);\r\n            const expectedValues = this._def.values;\r\n            (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                received: ctx.data,\r\n                code: ZodError_1.ZodIssueCode.invalid_enum_value,\r\n                options: expectedValues,\r\n            });\r\n            return parseUtil_1.INVALID;\r\n        }\r\n        return (0, parseUtil_1.OK)(input.data);\r\n    }\r\n    get options() {\r\n        return this._def.values;\r\n    }\r\n    get enum() {\r\n        const enumValues = {};\r\n        for (const val of this._def.values) {\r\n            enumValues[val] = val;\r\n        }\r\n        return enumValues;\r\n    }\r\n    get Values() {\r\n        const enumValues = {};\r\n        for (const val of this._def.values) {\r\n            enumValues[val] = val;\r\n        }\r\n        return enumValues;\r\n    }\r\n    get Enum() {\r\n        const enumValues = {};\r\n        for (const val of this._def.values) {\r\n            enumValues[val] = val;\r\n        }\r\n        return enumValues;\r\n    }\r\n    extract(values) {\r\n        return ZodEnum.create(values);\r\n    }\r\n    exclude(values) {\r\n        return ZodEnum.create(this.options.filter((opt) => !values.includes(opt)));\r\n    }\r\n}\r\nexports.ZodEnum = ZodEnum;\r\nZodEnum.create = createZodEnum;\r\nclass ZodNativeEnum extends ZodType {\r\n    _parse(input) {\r\n        const nativeEnumValues = util_1.util.getValidEnumValues(this._def.values);\r\n        const ctx = this._getOrReturnCtx(input);\r\n        if (ctx.parsedType !== util_1.ZodParsedType.string &&\r\n            ctx.parsedType !== util_1.ZodParsedType.number) {\r\n            const expectedValues = util_1.util.objectValues(nativeEnumValues);\r\n            (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                expected: util_1.util.joinValues(expectedValues),\r\n                received: ctx.parsedType,\r\n                code: ZodError_1.ZodIssueCode.invalid_type,\r\n            });\r\n            return parseUtil_1.INVALID;\r\n        }\r\n        if (nativeEnumValues.indexOf(input.data) === -1) {\r\n            const expectedValues = util_1.util.objectValues(nativeEnumValues);\r\n            (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                received: ctx.data,\r\n                code: ZodError_1.ZodIssueCode.invalid_enum_value,\r\n                options: expectedValues,\r\n            });\r\n            return parseUtil_1.INVALID;\r\n        }\r\n        return (0, parseUtil_1.OK)(input.data);\r\n    }\r\n    get enum() {\r\n        return this._def.values;\r\n    }\r\n}\r\nexports.ZodNativeEnum = ZodNativeEnum;\r\nZodNativeEnum.create = (values, params) => {\r\n    return new ZodNativeEnum({\r\n        values: values,\r\n        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\r\n        ...processCreateParams(params),\r\n    });\r\n};\r\nclass ZodPromise extends ZodType {\r\n    unwrap() {\r\n        return this._def.type;\r\n    }\r\n    _parse(input) {\r\n        const { ctx } = this._processInputParams(input);\r\n        if (ctx.parsedType !== util_1.ZodParsedType.promise &&\r\n            ctx.common.async === false) {\r\n            (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                code: ZodError_1.ZodIssueCode.invalid_type,\r\n                expected: util_1.ZodParsedType.promise,\r\n                received: ctx.parsedType,\r\n            });\r\n            return parseUtil_1.INVALID;\r\n        }\r\n        const promisified = ctx.parsedType === util_1.ZodParsedType.promise\r\n            ? ctx.data\r\n            : Promise.resolve(ctx.data);\r\n        return (0, parseUtil_1.OK)(promisified.then((data) => {\r\n            return this._def.type.parseAsync(data, {\r\n                path: ctx.path,\r\n                errorMap: ctx.common.contextualErrorMap,\r\n            });\r\n        }));\r\n    }\r\n}\r\nexports.ZodPromise = ZodPromise;\r\nZodPromise.create = (schema, params) => {\r\n    return new ZodPromise({\r\n        type: schema,\r\n        typeName: ZodFirstPartyTypeKind.ZodPromise,\r\n        ...processCreateParams(params),\r\n    });\r\n};\r\nclass ZodEffects extends ZodType {\r\n    innerType() {\r\n        return this._def.schema;\r\n    }\r\n    sourceType() {\r\n        return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects\r\n            ? this._def.schema.sourceType()\r\n            : this._def.schema;\r\n    }\r\n    _parse(input) {\r\n        const { status, ctx } = this._processInputParams(input);\r\n        const effect = this._def.effect || null;\r\n        const checkCtx = {\r\n            addIssue: (arg) => {\r\n                (0, parseUtil_1.addIssueToContext)(ctx, arg);\r\n                if (arg.fatal) {\r\n                    status.abort();\r\n                }\r\n                else {\r\n                    status.dirty();\r\n                }\r\n            },\r\n            get path() {\r\n                return ctx.path;\r\n            },\r\n        };\r\n        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\r\n        if (effect.type === \"preprocess\") {\r\n            const processed = effect.transform(ctx.data, checkCtx);\r\n            if (ctx.common.issues.length) {\r\n                return {\r\n                    status: \"dirty\",\r\n                    value: ctx.data,\r\n                };\r\n            }\r\n            if (ctx.common.async) {\r\n                return Promise.resolve(processed).then((processed) => {\r\n                    return this._def.schema._parseAsync({\r\n                        data: processed,\r\n                        path: ctx.path,\r\n                        parent: ctx,\r\n                    });\r\n                });\r\n            }\r\n            else {\r\n                return this._def.schema._parseSync({\r\n                    data: processed,\r\n                    path: ctx.path,\r\n                    parent: ctx,\r\n                });\r\n            }\r\n        }\r\n        if (effect.type === \"refinement\") {\r\n            const executeRefinement = (acc) => {\r\n                const result = effect.refinement(acc, checkCtx);\r\n                if (ctx.common.async) {\r\n                    return Promise.resolve(result);\r\n                }\r\n                if (result instanceof Promise) {\r\n                    throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\r\n                }\r\n                return acc;\r\n            };\r\n            if (ctx.common.async === false) {\r\n                const inner = this._def.schema._parseSync({\r\n                    data: ctx.data,\r\n                    path: ctx.path,\r\n                    parent: ctx,\r\n                });\r\n                if (inner.status === \"aborted\")\r\n                    return parseUtil_1.INVALID;\r\n                if (inner.status === \"dirty\")\r\n                    status.dirty();\r\n                executeRefinement(inner.value);\r\n                return { status: status.value, value: inner.value };\r\n            }\r\n            else {\r\n                return this._def.schema\r\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\r\n                    .then((inner) => {\r\n                    if (inner.status === \"aborted\")\r\n                        return parseUtil_1.INVALID;\r\n                    if (inner.status === \"dirty\")\r\n                        status.dirty();\r\n                    return executeRefinement(inner.value).then(() => {\r\n                        return { status: status.value, value: inner.value };\r\n                    });\r\n                });\r\n            }\r\n        }\r\n        if (effect.type === \"transform\") {\r\n            if (ctx.common.async === false) {\r\n                const base = this._def.schema._parseSync({\r\n                    data: ctx.data,\r\n                    path: ctx.path,\r\n                    parent: ctx,\r\n                });\r\n                if (!(0, parseUtil_1.isValid)(base))\r\n                    return base;\r\n                const result = effect.transform(base.value, checkCtx);\r\n                if (result instanceof Promise) {\r\n                    throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\r\n                }\r\n                return { status: status.value, value: result };\r\n            }\r\n            else {\r\n                return this._def.schema\r\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\r\n                    .then((base) => {\r\n                    if (!(0, parseUtil_1.isValid)(base))\r\n                        return base;\r\n                    return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({ status: status.value, value: result }));\r\n                });\r\n            }\r\n        }\r\n        util_1.util.assertNever(effect);\r\n    }\r\n}\r\nexports.ZodEffects = ZodEffects;\r\nexports.ZodTransformer = ZodEffects;\r\nZodEffects.create = (schema, effect, params) => {\r\n    return new ZodEffects({\r\n        schema,\r\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\r\n        effect,\r\n        ...processCreateParams(params),\r\n    });\r\n};\r\nZodEffects.createWithPreprocess = (preprocess, schema, params) => {\r\n    return new ZodEffects({\r\n        schema,\r\n        effect: { type: \"preprocess\", transform: preprocess },\r\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\r\n        ...processCreateParams(params),\r\n    });\r\n};\r\nclass ZodOptional extends ZodType {\r\n    _parse(input) {\r\n        const parsedType = this._getType(input);\r\n        if (parsedType === util_1.ZodParsedType.undefined) {\r\n            return (0, parseUtil_1.OK)(undefined);\r\n        }\r\n        return this._def.innerType._parse(input);\r\n    }\r\n    unwrap() {\r\n        return this._def.innerType;\r\n    }\r\n}\r\nexports.ZodOptional = ZodOptional;\r\nZodOptional.create = (type, params) => {\r\n    return new ZodOptional({\r\n        innerType: type,\r\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\r\n        ...processCreateParams(params),\r\n    });\r\n};\r\nclass ZodNullable extends ZodType {\r\n    _parse(input) {\r\n        const parsedType = this._getType(input);\r\n        if (parsedType === util_1.ZodParsedType.null) {\r\n            return (0, parseUtil_1.OK)(null);\r\n        }\r\n        return this._def.innerType._parse(input);\r\n    }\r\n    unwrap() {\r\n        return this._def.innerType;\r\n    }\r\n}\r\nexports.ZodNullable = ZodNullable;\r\nZodNullable.create = (type, params) => {\r\n    return new ZodNullable({\r\n        innerType: type,\r\n        typeName: ZodFirstPartyTypeKind.ZodNullable,\r\n        ...processCreateParams(params),\r\n    });\r\n};\r\nclass ZodDefault extends ZodType {\r\n    _parse(input) {\r\n        const { ctx } = this._processInputParams(input);\r\n        let data = ctx.data;\r\n        if (ctx.parsedType === util_1.ZodParsedType.undefined) {\r\n            data = this._def.defaultValue();\r\n        }\r\n        return this._def.innerType._parse({\r\n            data,\r\n            path: ctx.path,\r\n            parent: ctx,\r\n        });\r\n    }\r\n    removeDefault() {\r\n        return this._def.innerType;\r\n    }\r\n}\r\nexports.ZodDefault = ZodDefault;\r\nZodDefault.create = (type, params) => {\r\n    return new ZodDefault({\r\n        innerType: type,\r\n        typeName: ZodFirstPartyTypeKind.ZodDefault,\r\n        defaultValue: typeof params.default === \"function\"\r\n            ? params.default\r\n            : () => params.default,\r\n        ...processCreateParams(params),\r\n    });\r\n};\r\nclass ZodCatch extends ZodType {\r\n    _parse(input) {\r\n        const { ctx } = this._processInputParams(input);\r\n        const newCtx = {\r\n            ...ctx,\r\n            common: {\r\n                ...ctx.common,\r\n                issues: [],\r\n            },\r\n        };\r\n        const result = this._def.innerType._parse({\r\n            data: newCtx.data,\r\n            path: newCtx.path,\r\n            parent: {\r\n                ...newCtx,\r\n            },\r\n        });\r\n        if ((0, parseUtil_1.isAsync)(result)) {\r\n            return result.then((result) => {\r\n                return {\r\n                    status: \"valid\",\r\n                    value: result.status === \"valid\"\r\n                        ? result.value\r\n                        : this._def.catchValue({\r\n                            get error() {\r\n                                return new ZodError_1.ZodError(newCtx.common.issues);\r\n                            },\r\n                            input: newCtx.data,\r\n                        }),\r\n                };\r\n            });\r\n        }\r\n        else {\r\n            return {\r\n                status: \"valid\",\r\n                value: result.status === \"valid\"\r\n                    ? result.value\r\n                    : this._def.catchValue({\r\n                        get error() {\r\n                            return new ZodError_1.ZodError(newCtx.common.issues);\r\n                        },\r\n                        input: newCtx.data,\r\n                    }),\r\n            };\r\n        }\r\n    }\r\n    removeCatch() {\r\n        return this._def.innerType;\r\n    }\r\n}\r\nexports.ZodCatch = ZodCatch;\r\nZodCatch.create = (type, params) => {\r\n    return new ZodCatch({\r\n        innerType: type,\r\n        typeName: ZodFirstPartyTypeKind.ZodCatch,\r\n        catchValue: typeof params.catch === \"function\" ? params.catch : () => params.catch,\r\n        ...processCreateParams(params),\r\n    });\r\n};\r\nclass ZodNaN extends ZodType {\r\n    _parse(input) {\r\n        const parsedType = this._getType(input);\r\n        if (parsedType !== util_1.ZodParsedType.nan) {\r\n            const ctx = this._getOrReturnCtx(input);\r\n            (0, parseUtil_1.addIssueToContext)(ctx, {\r\n                code: ZodError_1.ZodIssueCode.invalid_type,\r\n                expected: util_1.ZodParsedType.nan,\r\n                received: ctx.parsedType,\r\n            });\r\n            return parseUtil_1.INVALID;\r\n        }\r\n        return { status: \"valid\", value: input.data };\r\n    }\r\n}\r\nexports.ZodNaN = ZodNaN;\r\nZodNaN.create = (params) => {\r\n    return new ZodNaN({\r\n        typeName: ZodFirstPartyTypeKind.ZodNaN,\r\n        ...processCreateParams(params),\r\n    });\r\n};\r\nexports.BRAND = Symbol(\"zod_brand\");\r\nclass ZodBranded extends ZodType {\r\n    _parse(input) {\r\n        const { ctx } = this._processInputParams(input);\r\n        const data = ctx.data;\r\n        return this._def.type._parse({\r\n            data,\r\n            path: ctx.path,\r\n            parent: ctx,\r\n        });\r\n    }\r\n    unwrap() {\r\n        return this._def.type;\r\n    }\r\n}\r\nexports.ZodBranded = ZodBranded;\r\nclass ZodPipeline extends ZodType {\r\n    _parse(input) {\r\n        const { status, ctx } = this._processInputParams(input);\r\n        if (ctx.common.async) {\r\n            const handleAsync = async () => {\r\n                const inResult = await this._def.in._parseAsync({\r\n                    data: ctx.data,\r\n                    path: ctx.path,\r\n                    parent: ctx,\r\n                });\r\n                if (inResult.status === \"aborted\")\r\n                    return parseUtil_1.INVALID;\r\n                if (inResult.status === \"dirty\") {\r\n                    status.dirty();\r\n                    return (0, parseUtil_1.DIRTY)(inResult.value);\r\n                }\r\n                else {\r\n                    return this._def.out._parseAsync({\r\n                        data: inResult.value,\r\n                        path: ctx.path,\r\n                        parent: ctx,\r\n                    });\r\n                }\r\n            };\r\n            return handleAsync();\r\n        }\r\n        else {\r\n            const inResult = this._def.in._parseSync({\r\n                data: ctx.data,\r\n                path: ctx.path,\r\n                parent: ctx,\r\n            });\r\n            if (inResult.status === \"aborted\")\r\n                return parseUtil_1.INVALID;\r\n            if (inResult.status === \"dirty\") {\r\n                status.dirty();\r\n                return {\r\n                    status: \"dirty\",\r\n                    value: inResult.value,\r\n                };\r\n            }\r\n            else {\r\n                return this._def.out._parseSync({\r\n                    data: inResult.value,\r\n                    path: ctx.path,\r\n                    parent: ctx,\r\n                });\r\n            }\r\n        }\r\n    }\r\n    static create(a, b) {\r\n        return new ZodPipeline({\r\n            in: a,\r\n            out: b,\r\n            typeName: ZodFirstPartyTypeKind.ZodPipeline,\r\n        });\r\n    }\r\n}\r\nexports.ZodPipeline = ZodPipeline;\r\nclass ZodReadonly extends ZodType {\r\n    _parse(input) {\r\n        const result = this._def.innerType._parse(input);\r\n        if ((0, parseUtil_1.isValid)(result)) {\r\n            result.value = Object.freeze(result.value);\r\n        }\r\n        return result;\r\n    }\r\n}\r\nexports.ZodReadonly = ZodReadonly;\r\nZodReadonly.create = (type, params) => {\r\n    return new ZodReadonly({\r\n        innerType: type,\r\n        typeName: ZodFirstPartyTypeKind.ZodReadonly,\r\n        ...processCreateParams(params),\r\n    });\r\n};\r\nconst custom = (check, params = {}, fatal) => {\r\n    if (check)\r\n        return ZodAny.create().superRefine((data, ctx) => {\r\n            var _a, _b;\r\n            if (!check(data)) {\r\n                const p = typeof params === \"function\"\r\n                    ? params(data)\r\n                    : typeof params === \"string\"\r\n                        ? { message: params }\r\n                        : params;\r\n                const _fatal = (_b = (_a = p.fatal) !== null && _a !== void 0 ? _a : fatal) !== null && _b !== void 0 ? _b : true;\r\n                const p2 = typeof p === \"string\" ? { message: p } : p;\r\n                ctx.addIssue({ code: \"custom\", ...p2, fatal: _fatal });\r\n            }\r\n        });\r\n    return ZodAny.create();\r\n};\r\nexports.custom = custom;\r\nexports.late = {\r\n    object: ZodObject.lazycreate,\r\n};\r\nvar ZodFirstPartyTypeKind;\r\n(function (ZodFirstPartyTypeKind) {\r\n    ZodFirstPartyTypeKind[\"ZodString\"] = \"ZodString\";\r\n    ZodFirstPartyTypeKind[\"ZodNumber\"] = \"ZodNumber\";\r\n    ZodFirstPartyTypeKind[\"ZodNaN\"] = \"ZodNaN\";\r\n    ZodFirstPartyTypeKind[\"ZodBigInt\"] = \"ZodBigInt\";\r\n    ZodFirstPartyTypeKind[\"ZodBoolean\"] = \"ZodBoolean\";\r\n    ZodFirstPartyTypeKind[\"ZodDate\"] = \"ZodDate\";\r\n    ZodFirstPartyTypeKind[\"ZodSymbol\"] = \"ZodSymbol\";\r\n    ZodFirstPartyTypeKind[\"ZodUndefined\"] = \"ZodUndefined\";\r\n    ZodFirstPartyTypeKind[\"ZodNull\"] = \"ZodNull\";\r\n    ZodFirstPartyTypeKind[\"ZodAny\"] = \"ZodAny\";\r\n    ZodFirstPartyTypeKind[\"ZodUnknown\"] = \"ZodUnknown\";\r\n    ZodFirstPartyTypeKind[\"ZodNever\"] = \"ZodNever\";\r\n    ZodFirstPartyTypeKind[\"ZodVoid\"] = \"ZodVoid\";\r\n    ZodFirstPartyTypeKind[\"ZodArray\"] = \"ZodArray\";\r\n    ZodFirstPartyTypeKind[\"ZodObject\"] = \"ZodObject\";\r\n    ZodFirstPartyTypeKind[\"ZodUnion\"] = \"ZodUnion\";\r\n    ZodFirstPartyTypeKind[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\r\n    ZodFirstPartyTypeKind[\"ZodIntersection\"] = \"ZodIntersection\";\r\n    ZodFirstPartyTypeKind[\"ZodTuple\"] = \"ZodTuple\";\r\n    ZodFirstPartyTypeKind[\"ZodRecord\"] = \"ZodRecord\";\r\n    ZodFirstPartyTypeKind[\"ZodMap\"] = \"ZodMap\";\r\n    ZodFirstPartyTypeKind[\"ZodSet\"] = \"ZodSet\";\r\n    ZodFirstPartyTypeKind[\"ZodFunction\"] = \"ZodFunction\";\r\n    ZodFirstPartyTypeKind[\"ZodLazy\"] = \"ZodLazy\";\r\n    ZodFirstPartyTypeKind[\"ZodLiteral\"] = \"ZodLiteral\";\r\n    ZodFirstPartyTypeKind[\"ZodEnum\"] = \"ZodEnum\";\r\n    ZodFirstPartyTypeKind[\"ZodEffects\"] = \"ZodEffects\";\r\n    ZodFirstPartyTypeKind[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\r\n    ZodFirstPartyTypeKind[\"ZodOptional\"] = \"ZodOptional\";\r\n    ZodFirstPartyTypeKind[\"ZodNullable\"] = \"ZodNullable\";\r\n    ZodFirstPartyTypeKind[\"ZodDefault\"] = \"ZodDefault\";\r\n    ZodFirstPartyTypeKind[\"ZodCatch\"] = \"ZodCatch\";\r\n    ZodFirstPartyTypeKind[\"ZodPromise\"] = \"ZodPromise\";\r\n    ZodFirstPartyTypeKind[\"ZodBranded\"] = \"ZodBranded\";\r\n    ZodFirstPartyTypeKind[\"ZodPipeline\"] = \"ZodPipeline\";\r\n    ZodFirstPartyTypeKind[\"ZodReadonly\"] = \"ZodReadonly\";\r\n})(ZodFirstPartyTypeKind = exports.ZodFirstPartyTypeKind || (exports.ZodFirstPartyTypeKind = {}));\r\nclass Class {\r\n    constructor(..._) { }\r\n}\r\nconst instanceOfType = (cls, params = {\r\n    message: `Input not instance of ${cls.name}`,\r\n}) => (0, exports.custom)((data) => data instanceof cls, params);\r\nexports.instanceof = instanceOfType;\r\nconst stringType = ZodString.create;\r\nexports.string = stringType;\r\nconst numberType = ZodNumber.create;\r\nexports.number = numberType;\r\nconst nanType = ZodNaN.create;\r\nexports.nan = nanType;\r\nconst bigIntType = ZodBigInt.create;\r\nexports.bigint = bigIntType;\r\nconst booleanType = ZodBoolean.create;\r\nexports.boolean = booleanType;\r\nconst dateType = ZodDate.create;\r\nexports.date = dateType;\r\nconst symbolType = ZodSymbol.create;\r\nexports.symbol = symbolType;\r\nconst undefinedType = ZodUndefined.create;\r\nexports.undefined = undefinedType;\r\nconst nullType = ZodNull.create;\r\nexports.null = nullType;\r\nconst anyType = ZodAny.create;\r\nexports.any = anyType;\r\nconst unknownType = ZodUnknown.create;\r\nexports.unknown = unknownType;\r\nconst neverType = ZodNever.create;\r\nexports.never = neverType;\r\nconst voidType = ZodVoid.create;\r\nexports.void = voidType;\r\nconst arrayType = ZodArray.create;\r\nexports.array = arrayType;\r\nconst objectType = ZodObject.create;\r\nexports.object = objectType;\r\nconst strictObjectType = ZodObject.strictCreate;\r\nexports.strictObject = strictObjectType;\r\nconst unionType = ZodUnion.create;\r\nexports.union = unionType;\r\nconst discriminatedUnionType = ZodDiscriminatedUnion.create;\r\nexports.discriminatedUnion = discriminatedUnionType;\r\nconst intersectionType = ZodIntersection.create;\r\nexports.intersection = intersectionType;\r\nconst tupleType = ZodTuple.create;\r\nexports.tuple = tupleType;\r\nconst recordType = ZodRecord.create;\r\nexports.record = recordType;\r\nconst mapType = ZodMap.create;\r\nexports.map = mapType;\r\nconst setType = ZodSet.create;\r\nexports.set = setType;\r\nconst functionType = ZodFunction.create;\r\nexports.function = functionType;\r\nconst lazyType = ZodLazy.create;\r\nexports.lazy = lazyType;\r\nconst literalType = ZodLiteral.create;\r\nexports.literal = literalType;\r\nconst enumType = ZodEnum.create;\r\nexports.enum = enumType;\r\nconst nativeEnumType = ZodNativeEnum.create;\r\nexports.nativeEnum = nativeEnumType;\r\nconst promiseType = ZodPromise.create;\r\nexports.promise = promiseType;\r\nconst effectsType = ZodEffects.create;\r\nexports.effect = effectsType;\r\nexports.transformer = effectsType;\r\nconst optionalType = ZodOptional.create;\r\nexports.optional = optionalType;\r\nconst nullableType = ZodNullable.create;\r\nexports.nullable = nullableType;\r\nconst preprocessType = ZodEffects.createWithPreprocess;\r\nexports.preprocess = preprocessType;\r\nconst pipelineType = ZodPipeline.create;\r\nexports.pipeline = pipelineType;\r\nconst ostring = () => stringType().optional();\r\nexports.ostring = ostring;\r\nconst onumber = () => numberType().optional();\r\nexports.onumber = onumber;\r\nconst oboolean = () => booleanType().optional();\r\nexports.oboolean = oboolean;\r\nexports.coerce = {\r\n    string: ((arg) => ZodString.create({ ...arg, coerce: true })),\r\n    number: ((arg) => ZodNumber.create({ ...arg, coerce: true })),\r\n    boolean: ((arg) => ZodBoolean.create({\r\n        ...arg,\r\n        coerce: true,\r\n    })),\r\n    bigint: ((arg) => ZodBigInt.create({ ...arg, coerce: true })),\r\n    date: ((arg) => ZodDate.create({ ...arg, coerce: true })),\r\n};\r\nexports.NEVER = parseUtil_1.INVALID;\r\n", "\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__exportStar(require(\"./errors\"), exports);\r\n__exportStar(require(\"./helpers/parseUtil\"), exports);\r\n__exportStar(require(\"./helpers/typeAliases\"), exports);\r\n__exportStar(require(\"./helpers/util\"), exports);\r\n__exportStar(require(\"./types\"), exports);\r\n__exportStar(require(\"./ZodError\"), exports);\r\n", "\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.z = void 0;\r\nconst z = __importStar(require(\"./external\"));\r\nexports.z = z;\r\n__exportStar(require(\"./external\"), exports);\r\nexports.default = z;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseAnyDef = void 0;\r\nfunction parseAnyDef() {\r\n    return {};\r\n}\r\nexports.parseAnyDef = parseAnyDef;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.setResponseValueAndErrors = exports.addErrorMessage = void 0;\r\nfunction addErrorMessage(res, key, errorMessage, refs) {\r\n    if (!(refs === null || refs === void 0 ? void 0 : refs.errorMessages))\r\n        return;\r\n    if (errorMessage) {\r\n        res.errorMessage = Object.assign(Object.assign({}, res.errorMessage), { [key]: errorMessage });\r\n    }\r\n}\r\nexports.addErrorMessage = addErrorMessage;\r\nfunction setResponseValueAndErrors(res, key, value, errorMessage, refs) {\r\n    res[key] = value;\r\n    addErrorMessage(res, key, errorMessage, refs);\r\n}\r\nexports.setResponseValueAndErrors = setResponseValueAndErrors;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseArrayDef = void 0;\r\nconst zod_1 = require(\"zod\");\r\nconst errorMessages_1 = require(\"../errorMessages\");\r\nconst parseDef_1 = require(\"../parseDef\");\r\nfunction parseArrayDef(def, refs) {\r\n    var _a, _b;\r\n    const res = {\r\n        type: \"array\",\r\n    };\r\n    if (((_b = (_a = def.type) === null || _a === void 0 ? void 0 : _a._def) === null || _b === void 0 ? void 0 : _b.typeName) !== zod_1.ZodFirstPartyTypeKind.ZodAny) {\r\n        res.items = (0, parseDef_1.parseDef)(def.type._def, Object.assign(Object.assign({}, refs), { currentPath: [...refs.currentPath, \"items\"] }));\r\n    }\r\n    if (def.minLength) {\r\n        (0, errorMessages_1.setResponseValueAndErrors)(res, \"minItems\", def.minLength.value, def.minLength.message, refs);\r\n    }\r\n    if (def.maxLength) {\r\n        (0, errorMessages_1.setResponseValueAndErrors)(res, \"maxItems\", def.maxLength.value, def.maxLength.message, refs);\r\n    }\r\n    if (def.exactLength) {\r\n        (0, errorMessages_1.setResponseValueAndErrors)(res, \"minItems\", def.exactLength.value, def.exactLength.message, refs);\r\n        (0, errorMessages_1.setResponseValueAndErrors)(res, \"maxItems\", def.exactLength.value, def.exactLength.message, refs);\r\n    }\r\n    return res;\r\n}\r\nexports.parseArrayDef = parseArrayDef;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseBigintDef = void 0;\r\nconst errorMessages_1 = require(\"../errorMessages\");\r\nfunction parseBigintDef(def, refs) {\r\n    const res = {\r\n        type: \"integer\",\r\n        format: \"int64\",\r\n    };\r\n    if (!def.checks)\r\n        return res;\r\n    for (const check of def.checks) {\r\n        switch (check.kind) {\r\n            case \"min\":\r\n                if (refs.target === \"jsonSchema7\") {\r\n                    if (check.inclusive) {\r\n                        (0, errorMessages_1.setResponseValueAndErrors)(res, \"minimum\", check.value, check.message, refs);\r\n                    }\r\n                    else {\r\n                        (0, errorMessages_1.setResponseValueAndErrors)(res, \"exclusiveMinimum\", check.value, check.message, refs);\r\n                    }\r\n                }\r\n                else {\r\n                    if (!check.inclusive) {\r\n                        res.exclusiveMinimum = true;\r\n                    }\r\n                    (0, errorMessages_1.setResponseValueAndErrors)(res, \"minimum\", check.value, check.message, refs);\r\n                }\r\n                break;\r\n            case \"max\":\r\n                if (refs.target === \"jsonSchema7\") {\r\n                    if (check.inclusive) {\r\n                        (0, errorMessages_1.setResponseValueAndErrors)(res, \"maximum\", check.value, check.message, refs);\r\n                    }\r\n                    else {\r\n                        (0, errorMessages_1.setResponseValueAndErrors)(res, \"exclusiveMaximum\", check.value, check.message, refs);\r\n                    }\r\n                }\r\n                else {\r\n                    if (!check.inclusive) {\r\n                        res.exclusiveMaximum = true;\r\n                    }\r\n                    (0, errorMessages_1.setResponseValueAndErrors)(res, \"maximum\", check.value, check.message, refs);\r\n                }\r\n                break;\r\n            case \"multipleOf\":\r\n                (0, errorMessages_1.setResponseValueAndErrors)(res, \"multipleOf\", check.value, check.message, refs);\r\n                break;\r\n        }\r\n    }\r\n    return res;\r\n}\r\nexports.parseBigintDef = parseBigintDef;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseBooleanDef = void 0;\r\nfunction parseBooleanDef() {\r\n    return {\r\n        type: \"boolean\",\r\n    };\r\n}\r\nexports.parseBooleanDef = parseBooleanDef;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseBrandedDef = void 0;\r\nconst parseDef_1 = require(\"../parseDef\");\r\nfunction parseBrandedDef(_def, refs) {\r\n    return (0, parseDef_1.parseDef)(_def.type._def, refs);\r\n}\r\nexports.parseBrandedDef = parseBrandedDef;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseCatchDef = void 0;\r\nconst parseDef_1 = require(\"../parseDef\");\r\nconst parseCatchDef = (def, refs) => {\r\n    return (0, parseDef_1.parseDef)(def.innerType._def, refs);\r\n};\r\nexports.parseCatchDef = parseCatchDef;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseDateDef = void 0;\r\nconst errorMessages_1 = require(\"../errorMessages\");\r\nfunction parseDateDef(def, refs) {\r\n    if (refs.dateStrategy == \"integer\") {\r\n        return integerDateParser(def, refs);\r\n    }\r\n    else {\r\n        return {\r\n            type: \"string\",\r\n            format: \"date-time\",\r\n        };\r\n    }\r\n}\r\nexports.parseDateDef = parseDateDef;\r\nconst integerDateParser = (def, refs) => {\r\n    const res = {\r\n        type: \"integer\",\r\n        format: \"unix-time\",\r\n    };\r\n    for (const check of def.checks) {\r\n        switch (check.kind) {\r\n            case \"min\":\r\n                if (refs.target === \"jsonSchema7\") {\r\n                    (0, errorMessages_1.setResponseValueAndErrors)(res, \"minimum\", check.value, // This is in milliseconds\r\n                    check.message, refs);\r\n                }\r\n                break;\r\n            case \"max\":\r\n                if (refs.target === \"jsonSchema7\") {\r\n                    (0, errorMessages_1.setResponseValueAndErrors)(res, \"maximum\", check.value, // This is in milliseconds\r\n                    check.message, refs);\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    return res;\r\n};\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseDefaultDef = void 0;\r\nconst parseDef_1 = require(\"../parseDef\");\r\nfunction parseDefaultDef(_def, refs) {\r\n    return Object.assign(Object.assign({}, (0, parseDef_1.parseDef)(_def.innerType._def, refs)), { default: _def.defaultValue() });\r\n}\r\nexports.parseDefaultDef = parseDefaultDef;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseEffectsDef = void 0;\r\nconst parseDef_1 = require(\"../parseDef\");\r\nfunction parseEffectsDef(_def, refs) {\r\n    return refs.effectStrategy === \"input\"\r\n        ? (0, parseDef_1.parseDef)(_def.schema._def, refs)\r\n        : {};\r\n}\r\nexports.parseEffectsDef = parseEffectsDef;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseEnumDef = void 0;\r\nfunction parseEnumDef(def) {\r\n    return {\r\n        type: \"string\",\r\n        enum: def.values,\r\n    };\r\n}\r\nexports.parseEnumDef = parseEnumDef;\r\n", "\"use strict\";\r\nvar __rest = (this && this.__rest) || function (s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseIntersectionDef = void 0;\r\nconst parseDef_1 = require(\"../parseDef\");\r\nconst isJsonSchema7AllOfType = (type) => {\r\n    if (\"type\" in type && type.type === \"string\")\r\n        return false;\r\n    return \"allOf\" in type;\r\n};\r\nfunction parseIntersectionDef(def, refs) {\r\n    const allOf = [\r\n        (0, parseDef_1.parseDef)(def.left._def, Object.assign(Object.assign({}, refs), { currentPath: [...refs.currentPath, \"allOf\", \"0\"] })),\r\n        (0, parseDef_1.parseDef)(def.right._def, Object.assign(Object.assign({}, refs), { currentPath: [...refs.currentPath, \"allOf\", \"1\"] })),\r\n    ].filter((x) => !!x);\r\n    let unevaluatedProperties = refs.target === \"jsonSchema2019-09\"\r\n        ? { unevaluatedProperties: false }\r\n        : undefined;\r\n    const mergedAllOf = [];\r\n    // If either of the schemas is an allOf, merge them into a single allOf\r\n    allOf.forEach((schema) => {\r\n        if (isJsonSchema7AllOfType(schema)) {\r\n            mergedAllOf.push(...schema.allOf);\r\n            if (schema.unevaluatedProperties === undefined) {\r\n                // If one of the schemas has no unevaluatedProperties set,\r\n                // the merged schema should also have no unevaluatedProperties set\r\n                unevaluatedProperties = undefined;\r\n            }\r\n        }\r\n        else {\r\n            let nestedSchema = schema;\r\n            if (\"additionalProperties\" in schema &&\r\n                schema.additionalProperties === false) {\r\n                const { additionalProperties } = schema, rest = __rest(schema, [\"additionalProperties\"]);\r\n                nestedSchema = rest;\r\n            }\r\n            else {\r\n                // As soon as one of the schemas has additionalProperties set not to false, we allow unevaluatedProperties\r\n                unevaluatedProperties = undefined;\r\n            }\r\n            mergedAllOf.push(nestedSchema);\r\n        }\r\n    });\r\n    return mergedAllOf.length\r\n        ? Object.assign({ allOf: mergedAllOf }, unevaluatedProperties) : undefined;\r\n}\r\nexports.parseIntersectionDef = parseIntersectionDef;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseLiteralDef = void 0;\r\nfunction parseLiteralDef(def, refs) {\r\n    const parsedType = typeof def.value;\r\n    if (parsedType !== \"bigint\" &&\r\n        parsedType !== \"number\" &&\r\n        parsedType !== \"boolean\" &&\r\n        parsedType !== \"string\") {\r\n        return {\r\n            type: Array.isArray(def.value) ? \"array\" : \"object\",\r\n        };\r\n    }\r\n    if (refs.target === \"openApi3\") {\r\n        return {\r\n            type: parsedType === \"bigint\" ? \"integer\" : parsedType,\r\n            enum: [def.value],\r\n        };\r\n    }\r\n    return {\r\n        type: parsedType === \"bigint\" ? \"integer\" : parsedType,\r\n        const: def.value,\r\n    };\r\n}\r\nexports.parseLiteralDef = parseLiteralDef;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseMapDef = void 0;\r\nconst parseDef_1 = require(\"../parseDef\");\r\nfunction parseMapDef(def, refs) {\r\n    const keys = (0, parseDef_1.parseDef)(def.keyType._def, Object.assign(Object.assign({}, refs), { currentPath: [...refs.currentPath, \"items\", \"items\", \"0\"] })) || {};\r\n    const values = (0, parseDef_1.parseDef)(def.valueType._def, Object.assign(Object.assign({}, refs), { currentPath: [...refs.currentPath, \"items\", \"items\", \"1\"] })) || {};\r\n    return {\r\n        type: \"array\",\r\n        maxItems: 125,\r\n        items: {\r\n            type: \"array\",\r\n            items: [keys, values],\r\n            minItems: 2,\r\n            maxItems: 2,\r\n        },\r\n    };\r\n}\r\nexports.parseMapDef = parseMapDef;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseNativeEnumDef = void 0;\r\nfunction parseNativeEnumDef(def) {\r\n    const object = def.values;\r\n    const actualKeys = Object.keys(def.values).filter((key) => {\r\n        return typeof object[object[key]] !== \"number\";\r\n    });\r\n    const actualValues = actualKeys.map((key) => object[key]);\r\n    const parsedTypes = Array.from(new Set(actualValues.map((values) => typeof values)));\r\n    return {\r\n        type: parsedTypes.length === 1\r\n            ? parsedTypes[0] === \"string\"\r\n                ? \"string\"\r\n                : \"number\"\r\n            : [\"string\", \"number\"],\r\n        enum: actualValues,\r\n    };\r\n}\r\nexports.parseNativeEnumDef = parseNativeEnumDef;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseNeverDef = void 0;\r\nfunction parseNeverDef() {\r\n    return {\r\n        not: {},\r\n    };\r\n}\r\nexports.parseNeverDef = parseNeverDef;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseNullDef = void 0;\r\nfunction parseNullDef(refs) {\r\n    return refs.target === \"openApi3\"\r\n        ? {\r\n            enum: [\"null\"],\r\n            nullable: true,\r\n        }\r\n        : {\r\n            type: \"null\",\r\n        };\r\n}\r\nexports.parseNullDef = parseNullDef;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseUnionDef = exports.primitiveMappings = void 0;\r\nconst parseDef_1 = require(\"../parseDef\");\r\nexports.primitiveMappings = {\r\n    ZodString: \"string\",\r\n    ZodNumber: \"number\",\r\n    ZodBigInt: \"integer\",\r\n    ZodBoolean: \"boolean\",\r\n    ZodNull: \"null\",\r\n};\r\nfunction parseUnionDef(def, refs) {\r\n    if (refs.target === \"openApi3\")\r\n        return asAnyOf(def, refs);\r\n    const options = def.options instanceof Map ? Array.from(def.options.values()) : def.options;\r\n    // This blocks tries to look ahead a bit to produce nicer looking schemas with type array instead of anyOf.\r\n    if (options.every((x) => x._def.typeName in exports.primitiveMappings &&\r\n        (!x._def.checks || !x._def.checks.length))) {\r\n        // all types in union are primitive and lack checks, so might as well squash into {type: [...]}\r\n        const types = options.reduce((types, x) => {\r\n            const type = exports.primitiveMappings[x._def.typeName]; //Can be safely casted due to row 43\r\n            return type && !types.includes(type) ? [...types, type] : types;\r\n        }, []);\r\n        return {\r\n            type: types.length > 1 ? types : types[0],\r\n        };\r\n    }\r\n    else if (options.every((x) => x._def.typeName === \"ZodLiteral\" && !x.description)) {\r\n        // all options literals\r\n        const types = options.reduce((acc, x) => {\r\n            const type = typeof x._def.value;\r\n            switch (type) {\r\n                case \"string\":\r\n                case \"number\":\r\n                case \"boolean\":\r\n                    return [...acc, type];\r\n                case \"bigint\":\r\n                    return [...acc, \"integer\"];\r\n                case \"object\":\r\n                    if (x._def.value === null)\r\n                        return [...acc, \"null\"];\r\n                case \"symbol\":\r\n                case \"undefined\":\r\n                case \"function\":\r\n                default:\r\n                    return acc;\r\n            }\r\n        }, []);\r\n        if (types.length === options.length) {\r\n            // all the literals are primitive, as far as null can be considered primitive\r\n            const uniqueTypes = types.filter((x, i, a) => a.indexOf(x) === i);\r\n            return {\r\n                type: uniqueTypes.length > 1 ? uniqueTypes : uniqueTypes[0],\r\n                enum: options.reduce((acc, x) => {\r\n                    return acc.includes(x._def.value) ? acc : [...acc, x._def.value];\r\n                }, []),\r\n            };\r\n        }\r\n    }\r\n    else if (options.every((x) => x._def.typeName === \"ZodEnum\")) {\r\n        return {\r\n            type: \"string\",\r\n            enum: options.reduce((acc, x) => [\r\n                ...acc,\r\n                ...x._def.values.filter((x) => !acc.includes(x)),\r\n            ], []),\r\n        };\r\n    }\r\n    return asAnyOf(def, refs);\r\n}\r\nexports.parseUnionDef = parseUnionDef;\r\nconst asAnyOf = (def, refs) => {\r\n    const anyOf = (def.options instanceof Map\r\n        ? Array.from(def.options.values())\r\n        : def.options)\r\n        .map((x, i) => (0, parseDef_1.parseDef)(x._def, Object.assign(Object.assign({}, refs), { currentPath: [...refs.currentPath, \"anyOf\", `${i}`] })))\r\n        .filter((x) => !!x &&\r\n        (!refs.strictUnions ||\r\n            (typeof x === \"object\" && Object.keys(x).length > 0)));\r\n    return anyOf.length ? { anyOf } : undefined;\r\n};\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseNullableDef = void 0;\r\nconst parseDef_1 = require(\"../parseDef\");\r\nconst union_1 = require(\"./union\");\r\nfunction parseNullableDef(def, refs) {\r\n    if ([\"ZodString\", \"ZodNumber\", \"ZodBigInt\", \"ZodBoolean\", \"ZodNull\"].includes(def.innerType._def.typeName) &&\r\n        (!def.innerType._def.checks || !def.innerType._def.checks.length)) {\r\n        if (refs.target === \"openApi3\") {\r\n            return {\r\n                type: union_1.primitiveMappings[def.innerType._def.typeName],\r\n                nullable: true,\r\n            };\r\n        }\r\n        return {\r\n            type: [\r\n                union_1.primitiveMappings[def.innerType._def.typeName],\r\n                \"null\",\r\n            ],\r\n        };\r\n    }\r\n    if (refs.target === \"openApi3\") {\r\n        const base = (0, parseDef_1.parseDef)(def.innerType._def, Object.assign(Object.assign({}, refs), { currentPath: [...refs.currentPath] }));\r\n        return base && Object.assign(Object.assign({}, base), { nullable: true });\r\n    }\r\n    const base = (0, parseDef_1.parseDef)(def.innerType._def, Object.assign(Object.assign({}, refs), { currentPath: [...refs.currentPath, \"anyOf\", \"0\"] }));\r\n    return base && { anyOf: [base, { type: \"null\" }] };\r\n}\r\nexports.parseNullableDef = parseNullableDef;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseNumberDef = void 0;\r\nconst errorMessages_1 = require(\"../errorMessages\");\r\nfunction parseNumberDef(def, refs) {\r\n    const res = {\r\n        type: \"number\",\r\n    };\r\n    if (!def.checks)\r\n        return res;\r\n    for (const check of def.checks) {\r\n        switch (check.kind) {\r\n            case \"int\":\r\n                res.type = \"integer\";\r\n                (0, errorMessages_1.addErrorMessage)(res, \"type\", check.message, refs);\r\n                break;\r\n            case \"min\":\r\n                if (refs.target === \"jsonSchema7\") {\r\n                    if (check.inclusive) {\r\n                        (0, errorMessages_1.setResponseValueAndErrors)(res, \"minimum\", check.value, check.message, refs);\r\n                    }\r\n                    else {\r\n                        (0, errorMessages_1.setResponseValueAndErrors)(res, \"exclusiveMinimum\", check.value, check.message, refs);\r\n                    }\r\n                }\r\n                else {\r\n                    if (!check.inclusive) {\r\n                        res.exclusiveMinimum = true;\r\n                    }\r\n                    (0, errorMessages_1.setResponseValueAndErrors)(res, \"minimum\", check.value, check.message, refs);\r\n                }\r\n                break;\r\n            case \"max\":\r\n                if (refs.target === \"jsonSchema7\") {\r\n                    if (check.inclusive) {\r\n                        (0, errorMessages_1.setResponseValueAndErrors)(res, \"maximum\", check.value, check.message, refs);\r\n                    }\r\n                    else {\r\n                        (0, errorMessages_1.setResponseValueAndErrors)(res, \"exclusiveMaximum\", check.value, check.message, refs);\r\n                    }\r\n                }\r\n                else {\r\n                    if (!check.inclusive) {\r\n                        res.exclusiveMaximum = true;\r\n                    }\r\n                    (0, errorMessages_1.setResponseValueAndErrors)(res, \"maximum\", check.value, check.message, refs);\r\n                }\r\n                break;\r\n            case \"multipleOf\":\r\n                (0, errorMessages_1.setResponseValueAndErrors)(res, \"multipleOf\", check.value, check.message, refs);\r\n                break;\r\n        }\r\n    }\r\n    return res;\r\n}\r\nexports.parseNumberDef = parseNumberDef;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseObjectDef = exports.parseObjectDefX = void 0;\r\nconst parseDef_1 = require(\"../parseDef\");\r\nfunction parseObjectDefX(def, refs) {\r\n    var _a, _b;\r\n    Object.keys(def.shape()).reduce((schema, key) => {\r\n        let prop = def.shape()[key];\r\n        const isOptional = prop.isOptional();\r\n        if (!isOptional) {\r\n            prop = Object.assign({}, prop._def.innerSchema);\r\n        }\r\n        const propSchema = (0, parseDef_1.parseDef)(prop._def, Object.assign(Object.assign({}, refs), { currentPath: [...refs.currentPath, \"properties\", key], propertyPath: [...refs.currentPath, \"properties\", key] }));\r\n        if (propSchema !== undefined) {\r\n            schema.properties[key] = propSchema;\r\n            if (!isOptional) {\r\n                if (!schema.required) {\r\n                    schema.required = [];\r\n                }\r\n                schema.required.push(key);\r\n            }\r\n        }\r\n        return schema;\r\n    }, {\r\n        type: \"object\",\r\n        properties: {},\r\n        additionalProperties: def.catchall._def.typeName === \"ZodNever\"\r\n            ? def.unknownKeys === \"passthrough\"\r\n            : (_a = (0, parseDef_1.parseDef)(def.catchall._def, Object.assign(Object.assign({}, refs), { currentPath: [...refs.currentPath, \"additionalProperties\"] }))) !== null && _a !== void 0 ? _a : true,\r\n    });\r\n    const result = Object.assign(Object.assign({ type: \"object\" }, Object.entries(def.shape()).reduce((acc, [propName, propDef]) => {\r\n        if (propDef === undefined || propDef._def === undefined)\r\n            return acc;\r\n        const parsedDef = (0, parseDef_1.parseDef)(propDef._def, Object.assign(Object.assign({}, refs), { currentPath: [...refs.currentPath, \"properties\", propName], propertyPath: [...refs.currentPath, \"properties\", propName] }));\r\n        if (parsedDef === undefined)\r\n            return acc;\r\n        return {\r\n            properties: Object.assign(Object.assign({}, acc.properties), { [propName]: parsedDef }),\r\n            required: propDef.isOptional()\r\n                ? acc.required\r\n                : [...acc.required, propName],\r\n        };\r\n    }, { properties: {}, required: [] })), { additionalProperties: def.catchall._def.typeName === \"ZodNever\"\r\n            ? def.unknownKeys === \"passthrough\"\r\n            : (_b = (0, parseDef_1.parseDef)(def.catchall._def, Object.assign(Object.assign({}, refs), { currentPath: [...refs.currentPath, \"additionalProperties\"] }))) !== null && _b !== void 0 ? _b : true });\r\n    if (!result.required.length)\r\n        delete result.required;\r\n    return result;\r\n}\r\nexports.parseObjectDefX = parseObjectDefX;\r\nfunction parseObjectDef(def, refs) {\r\n    var _a;\r\n    const result = Object.assign(Object.assign({ type: \"object\" }, Object.entries(def.shape()).reduce((acc, [propName, propDef]) => {\r\n        if (propDef === undefined || propDef._def === undefined)\r\n            return acc;\r\n        const parsedDef = (0, parseDef_1.parseDef)(propDef._def, Object.assign(Object.assign({}, refs), { currentPath: [...refs.currentPath, \"properties\", propName], propertyPath: [...refs.currentPath, \"properties\", propName] }));\r\n        if (parsedDef === undefined)\r\n            return acc;\r\n        return {\r\n            properties: Object.assign(Object.assign({}, acc.properties), { [propName]: parsedDef }),\r\n            required: propDef.isOptional()\r\n                ? acc.required\r\n                : [...acc.required, propName],\r\n        };\r\n    }, { properties: {}, required: [] })), { additionalProperties: def.catchall._def.typeName === \"ZodNever\"\r\n            ? def.unknownKeys === \"passthrough\"\r\n            : (_a = (0, parseDef_1.parseDef)(def.catchall._def, Object.assign(Object.assign({}, refs), { currentPath: [...refs.currentPath, \"additionalProperties\"] }))) !== null && _a !== void 0 ? _a : true });\r\n    if (!result.required.length)\r\n        delete result.required;\r\n    return result;\r\n}\r\nexports.parseObjectDef = parseObjectDef;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseOptionalDef = void 0;\r\nconst parseDef_1 = require(\"../parseDef\");\r\nconst parseOptionalDef = (def, refs) => {\r\n    var _a;\r\n    if (refs.currentPath.toString() === ((_a = refs.propertyPath) === null || _a === void 0 ? void 0 : _a.toString())) {\r\n        return (0, parseDef_1.parseDef)(def.innerType._def, refs);\r\n    }\r\n    const innerSchema = (0, parseDef_1.parseDef)(def.innerType._def, Object.assign(Object.assign({}, refs), { currentPath: [...refs.currentPath, \"anyOf\", \"1\"] }));\r\n    return innerSchema\r\n        ? {\r\n            anyOf: [\r\n                {\r\n                    not: {},\r\n                },\r\n                innerSchema,\r\n            ],\r\n        }\r\n        : {};\r\n};\r\nexports.parseOptionalDef = parseOptionalDef;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parsePipelineDef = void 0;\r\nconst parseDef_1 = require(\"../parseDef\");\r\nconst parsePipelineDef = (def, refs) => {\r\n    if (refs.pipeStrategy === \"input\") {\r\n        return (0, parseDef_1.parseDef)(def.in._def, refs);\r\n    }\r\n    const a = (0, parseDef_1.parseDef)(def.in._def, Object.assign(Object.assign({}, refs), { currentPath: [...refs.currentPath, \"allOf\", \"0\"] }));\r\n    const b = (0, parseDef_1.parseDef)(def.out._def, Object.assign(Object.assign({}, refs), { currentPath: [...refs.currentPath, \"allOf\", a ? \"1\" : \"0\"] }));\r\n    return {\r\n        allOf: [a, b].filter((x) => x !== undefined),\r\n    };\r\n};\r\nexports.parsePipelineDef = parsePipelineDef;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parsePromiseDef = void 0;\r\nconst parseDef_1 = require(\"../parseDef\");\r\nfunction parsePromiseDef(def, refs) {\r\n    return (0, parseDef_1.parseDef)(def.type._def, refs);\r\n}\r\nexports.parsePromiseDef = parsePromiseDef;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseStringDef = exports.emojiPattern = exports.ulidPattern = exports.cuid2Pattern = exports.cuidPattern = exports.emailPattern = void 0;\r\nconst errorMessages_1 = require(\"../errorMessages\");\r\nexports.emailPattern = '^(([^<>()[\\\\]\\\\\\\\.,;:\\\\s@\\\\\"]+(\\\\.[^<>()[\\\\]\\\\\\\\.,;:\\\\s@\\\\\"]+)*)|(\\\\\".+\\\\\"))@((\\\\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\\\])|(\\\\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\\\\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\\\\.[A-Za-z]{2,})+))$';\r\nexports.cuidPattern = \"^c[^\\\\s-]{8,}$\";\r\nexports.cuid2Pattern = \"^[a-z][a-z0-9]*$\";\r\nexports.ulidPattern = \"/[0-9A-HJKMNP-TV-Z]{26}/\";\r\nexports.emojiPattern = \"/^(p{Extended_Pictographic}|p{Emoji_Component})+$/u\";\r\nfunction parseStringDef(def, refs) {\r\n    const res = {\r\n        type: \"string\",\r\n    };\r\n    if (def.checks) {\r\n        for (const check of def.checks) {\r\n            switch (check.kind) {\r\n                case \"min\":\r\n                    (0, errorMessages_1.setResponseValueAndErrors)(res, \"minLength\", typeof res.minLength === \"number\"\r\n                        ? Math.max(res.minLength, check.value)\r\n                        : check.value, check.message, refs);\r\n                    break;\r\n                case \"max\":\r\n                    (0, errorMessages_1.setResponseValueAndErrors)(res, \"maxLength\", typeof res.maxLength === \"number\"\r\n                        ? Math.min(res.maxLength, check.value)\r\n                        : check.value, check.message, refs);\r\n                    break;\r\n                case \"email\":\r\n                    switch (refs.emailStrategy) {\r\n                        case \"format:email\":\r\n                            addFormat(res, \"email\", check.message, refs);\r\n                            break;\r\n                        case \"format:idn-email\":\r\n                            addFormat(res, \"idn-email\", check.message, refs);\r\n                            break;\r\n                        case \"pattern:zod\":\r\n                            addPattern(res, exports.emailPattern, check.message, refs);\r\n                            break;\r\n                    }\r\n                    break;\r\n                case \"url\":\r\n                    addFormat(res, \"uri\", check.message, refs);\r\n                    break;\r\n                case \"uuid\":\r\n                    addFormat(res, \"uuid\", check.message, refs);\r\n                    break;\r\n                case \"regex\":\r\n                    addPattern(res, check.regex.source, check.message, refs);\r\n                    break;\r\n                case \"cuid\":\r\n                    addPattern(res, exports.cuidPattern, check.message, refs);\r\n                    break;\r\n                case \"cuid2\":\r\n                    addPattern(res, exports.cuid2Pattern, check.message, refs);\r\n                    break;\r\n                case \"startsWith\":\r\n                    addPattern(res, \"^\" + escapeNonAlphaNumeric(check.value), check.message, refs);\r\n                    break;\r\n                case \"endsWith\":\r\n                    addPattern(res, escapeNonAlphaNumeric(check.value) + \"$\", check.message, refs);\r\n                    break;\r\n                case \"datetime\":\r\n                    addFormat(res, \"date-time\", check.message, refs);\r\n                    break;\r\n                case \"length\":\r\n                    (0, errorMessages_1.setResponseValueAndErrors)(res, \"minLength\", typeof res.minLength === \"number\"\r\n                        ? Math.max(res.minLength, check.value)\r\n                        : check.value, check.message, refs);\r\n                    (0, errorMessages_1.setResponseValueAndErrors)(res, \"maxLength\", typeof res.maxLength === \"number\"\r\n                        ? Math.min(res.maxLength, check.value)\r\n                        : check.value, check.message, refs);\r\n                    break;\r\n                case \"includes\": {\r\n                    addPattern(res, escapeNonAlphaNumeric(check.value), check.message, refs);\r\n                    break;\r\n                }\r\n                case \"ip\": {\r\n                    if (check.version !== \"v6\") {\r\n                        addFormat(res, \"ipv4\", check.message, refs);\r\n                    }\r\n                    if (check.version !== \"v4\") {\r\n                        addFormat(res, \"ipv6\", check.message, refs);\r\n                    }\r\n                    break;\r\n                }\r\n                case \"emoji\":\r\n                    addPattern(res, exports.emojiPattern, check.message, refs);\r\n                    break;\r\n                case \"ulid\": {\r\n                    addPattern(res, exports.ulidPattern, check.message, refs);\r\n                    break;\r\n                }\r\n                case \"toLowerCase\":\r\n                case \"toUpperCase\":\r\n                case \"trim\":\r\n                    // I have no idea why these are checks in Zod 🤷\r\n                    break;\r\n                default:\r\n                    ((_) => { })(check);\r\n            }\r\n        }\r\n    }\r\n    return res;\r\n}\r\nexports.parseStringDef = parseStringDef;\r\nconst escapeNonAlphaNumeric = (value) => Array.from(value)\r\n    .map((c) => (/[a-zA-Z0-9]/.test(c) ? c : `\\\\${c}`))\r\n    .join(\"\");\r\nconst addFormat = (schema, value, message, refs) => {\r\n    var _a;\r\n    if (schema.format || ((_a = schema.anyOf) === null || _a === void 0 ? void 0 : _a.some((x) => x.format))) {\r\n        if (!schema.anyOf) {\r\n            schema.anyOf = [];\r\n        }\r\n        if (schema.format) {\r\n            schema.anyOf.push(Object.assign({ format: schema.format }, (schema.errorMessage &&\r\n                refs.errorMessages && {\r\n                errorMessage: { format: schema.errorMessage.format },\r\n            })));\r\n            delete schema.format;\r\n            if (schema.errorMessage) {\r\n                delete schema.errorMessage.format;\r\n                if (Object.keys(schema.errorMessage).length === 0) {\r\n                    delete schema.errorMessage;\r\n                }\r\n            }\r\n        }\r\n        schema.anyOf.push(Object.assign({ format: value }, (message &&\r\n            refs.errorMessages && { errorMessage: { format: message } })));\r\n    }\r\n    else {\r\n        (0, errorMessages_1.setResponseValueAndErrors)(schema, \"format\", value, message, refs);\r\n    }\r\n};\r\nconst addPattern = (schema, value, message, refs) => {\r\n    var _a;\r\n    if (schema.pattern || ((_a = schema.allOf) === null || _a === void 0 ? void 0 : _a.some((x) => x.pattern))) {\r\n        if (!schema.allOf) {\r\n            schema.allOf = [];\r\n        }\r\n        if (schema.pattern) {\r\n            schema.allOf.push(Object.assign({ pattern: schema.pattern }, (schema.errorMessage &&\r\n                refs.errorMessages && {\r\n                errorMessage: { pattern: schema.errorMessage.pattern },\r\n            })));\r\n            delete schema.pattern;\r\n            if (schema.errorMessage) {\r\n                delete schema.errorMessage.pattern;\r\n                if (Object.keys(schema.errorMessage).length === 0) {\r\n                    delete schema.errorMessage;\r\n                }\r\n            }\r\n        }\r\n        schema.allOf.push(Object.assign({ pattern: value }, (message &&\r\n            refs.errorMessages && { errorMessage: { pattern: message } })));\r\n    }\r\n    else {\r\n        (0, errorMessages_1.setResponseValueAndErrors)(schema, \"pattern\", value, message, refs);\r\n    }\r\n};\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseRecordDef = void 0;\r\nconst zod_1 = require(\"zod\");\r\nconst parseDef_1 = require(\"../parseDef\");\r\nconst string_1 = require(\"./string\");\r\nfunction parseRecordDef(def, refs) {\r\n    var _a, _b, _c, _d, _e;\r\n    if (refs.target === \"openApi3\" &&\r\n        ((_a = def.keyType) === null || _a === void 0 ? void 0 : _a._def.typeName) === zod_1.ZodFirstPartyTypeKind.ZodEnum) {\r\n        return {\r\n            type: \"object\",\r\n            required: def.keyType._def.values,\r\n            properties: def.keyType._def.values.reduce((acc, key) => {\r\n                var _a;\r\n                return (Object.assign(Object.assign({}, acc), { [key]: (_a = (0, parseDef_1.parseDef)(def.valueType._def, Object.assign(Object.assign({}, refs), { currentPath: [...refs.currentPath, \"properties\", key] }))) !== null && _a !== void 0 ? _a : {} }));\r\n            }, {}),\r\n            additionalProperties: false,\r\n        };\r\n    }\r\n    const schema = {\r\n        type: \"object\",\r\n        additionalProperties: (_b = (0, parseDef_1.parseDef)(def.valueType._def, Object.assign(Object.assign({}, refs), { currentPath: [...refs.currentPath, \"additionalProperties\"] }))) !== null && _b !== void 0 ? _b : {},\r\n    };\r\n    if (refs.target === \"openApi3\") {\r\n        return schema;\r\n    }\r\n    if (((_c = def.keyType) === null || _c === void 0 ? void 0 : _c._def.typeName) === zod_1.ZodFirstPartyTypeKind.ZodString &&\r\n        ((_d = def.keyType._def.checks) === null || _d === void 0 ? void 0 : _d.length)) {\r\n        const keyType = Object.entries((0, string_1.parseStringDef)(def.keyType._def, refs)).reduce((acc, [key, value]) => (key === \"type\" ? acc : Object.assign(Object.assign({}, acc), { [key]: value })), {});\r\n        return Object.assign(Object.assign({}, schema), { propertyNames: keyType });\r\n    }\r\n    else if (((_e = def.keyType) === null || _e === void 0 ? void 0 : _e._def.typeName) === zod_1.ZodFirstPartyTypeKind.ZodEnum) {\r\n        return Object.assign(Object.assign({}, schema), { propertyNames: {\r\n                enum: def.keyType._def.values,\r\n            } });\r\n    }\r\n    return schema;\r\n}\r\nexports.parseRecordDef = parseRecordDef;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseSetDef = void 0;\r\nconst errorMessages_1 = require(\"../errorMessages\");\r\nconst parseDef_1 = require(\"../parseDef\");\r\nfunction parseSetDef(def, refs) {\r\n    const items = (0, parseDef_1.parseDef)(def.valueType._def, Object.assign(Object.assign({}, refs), { currentPath: [...refs.currentPath, \"items\"] }));\r\n    const schema = {\r\n        type: \"array\",\r\n        uniqueItems: true,\r\n        items,\r\n    };\r\n    if (def.minSize) {\r\n        (0, errorMessages_1.setResponseValueAndErrors)(schema, \"minItems\", def.minSize.value, def.minSize.message, refs);\r\n    }\r\n    if (def.maxSize) {\r\n        (0, errorMessages_1.setResponseValueAndErrors)(schema, \"maxItems\", def.maxSize.value, def.maxSize.message, refs);\r\n    }\r\n    return schema;\r\n}\r\nexports.parseSetDef = parseSetDef;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseTupleDef = void 0;\r\nconst parseDef_1 = require(\"../parseDef\");\r\nfunction parseTupleDef(def, refs) {\r\n    if (def.rest) {\r\n        return {\r\n            type: \"array\",\r\n            minItems: def.items.length,\r\n            items: def.items\r\n                .map((x, i) => (0, parseDef_1.parseDef)(x._def, Object.assign(Object.assign({}, refs), { currentPath: [...refs.currentPath, \"items\", `${i}`] })))\r\n                .reduce((acc, x) => (x === undefined ? acc : [...acc, x]), []),\r\n            additionalItems: (0, parseDef_1.parseDef)(def.rest._def, Object.assign(Object.assign({}, refs), { currentPath: [...refs.currentPath, \"additionalItems\"] })),\r\n        };\r\n    }\r\n    else {\r\n        return {\r\n            type: \"array\",\r\n            minItems: def.items.length,\r\n            maxItems: def.items.length,\r\n            items: def.items\r\n                .map((x, i) => (0, parseDef_1.parseDef)(x._def, Object.assign(Object.assign({}, refs), { currentPath: [...refs.currentPath, \"items\", `${i}`] })))\r\n                .reduce((acc, x) => (x === undefined ? acc : [...acc, x]), []),\r\n        };\r\n    }\r\n}\r\nexports.parseTupleDef = parseTupleDef;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseUndefinedDef = void 0;\r\nfunction parseUndefinedDef() {\r\n    return {\r\n        not: {},\r\n    };\r\n}\r\nexports.parseUndefinedDef = parseUndefinedDef;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseUnknownDef = void 0;\r\nfunction parseUnknownDef() {\r\n    return {};\r\n}\r\nexports.parseUnknownDef = parseUnknownDef;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseDef = void 0;\r\nconst zod_1 = require(\"zod\");\r\nconst any_1 = require(\"./parsers/any\");\r\nconst array_1 = require(\"./parsers/array\");\r\nconst bigint_1 = require(\"./parsers/bigint\");\r\nconst boolean_1 = require(\"./parsers/boolean\");\r\nconst branded_1 = require(\"./parsers/branded\");\r\nconst catch_1 = require(\"./parsers/catch\");\r\nconst date_1 = require(\"./parsers/date\");\r\nconst default_1 = require(\"./parsers/default\");\r\nconst effects_1 = require(\"./parsers/effects\");\r\nconst enum_1 = require(\"./parsers/enum\");\r\nconst intersection_1 = require(\"./parsers/intersection\");\r\nconst literal_1 = require(\"./parsers/literal\");\r\nconst map_1 = require(\"./parsers/map\");\r\nconst nativeEnum_1 = require(\"./parsers/nativeEnum\");\r\nconst never_1 = require(\"./parsers/never\");\r\nconst null_1 = require(\"./parsers/null\");\r\nconst nullable_1 = require(\"./parsers/nullable\");\r\nconst number_1 = require(\"./parsers/number\");\r\nconst object_1 = require(\"./parsers/object\");\r\nconst optional_1 = require(\"./parsers/optional\");\r\nconst pipeline_1 = require(\"./parsers/pipeline\");\r\nconst promise_1 = require(\"./parsers/promise\");\r\nconst record_1 = require(\"./parsers/record\");\r\nconst set_1 = require(\"./parsers/set\");\r\nconst string_1 = require(\"./parsers/string\");\r\nconst tuple_1 = require(\"./parsers/tuple\");\r\nconst undefined_1 = require(\"./parsers/undefined\");\r\nconst union_1 = require(\"./parsers/union\");\r\nconst unknown_1 = require(\"./parsers/unknown\");\r\nfunction parseDef(def, refs, forceResolution = false // Forces a new schema to be instantiated even though its def has been seen. Used for improving refs in definitions. See https://github.com/StefanTerdell/zod-to-json-schema/pull/61.\r\n) {\r\n    const seenItem = refs.seen.get(def);\r\n    if (seenItem && !forceResolution) {\r\n        const seenSchema = get$ref(seenItem, refs);\r\n        if (seenSchema !== undefined) {\r\n            return seenSchema;\r\n        }\r\n    }\r\n    const newItem = { def, path: refs.currentPath, jsonSchema: undefined };\r\n    refs.seen.set(def, newItem);\r\n    const jsonSchema = selectParser(def, def.typeName, refs);\r\n    if (jsonSchema) {\r\n        addMeta(def, refs, jsonSchema);\r\n    }\r\n    newItem.jsonSchema = jsonSchema;\r\n    return jsonSchema;\r\n}\r\nexports.parseDef = parseDef;\r\nconst get$ref = (item, refs) => {\r\n    switch (refs.$refStrategy) {\r\n        case \"root\":\r\n            return {\r\n                $ref: item.path.length === 0\r\n                    ? \"\"\r\n                    : item.path.length === 1\r\n                        ? `${item.path[0]}/`\r\n                        : item.path.join(\"/\"),\r\n            };\r\n        case \"relative\":\r\n            return { $ref: getRelativePath(refs.currentPath, item.path) };\r\n        case \"none\": {\r\n            if (item.path.length < refs.currentPath.length &&\r\n                item.path.every((value, index) => refs.currentPath[index] === value)) {\r\n                console.warn(`Recursive reference detected at ${refs.currentPath.join(\"/\")}! Defaulting to any`);\r\n                return {};\r\n            }\r\n            return undefined;\r\n        }\r\n        case \"seen\": {\r\n            if (item.path.length < refs.currentPath.length &&\r\n                item.path.every((value, index) => refs.currentPath[index] === value)) {\r\n                console.warn(`Recursive reference detected at ${refs.currentPath.join(\"/\")}! Defaulting to any`);\r\n                return {};\r\n            }\r\n            else {\r\n                return item.jsonSchema;\r\n            }\r\n        }\r\n    }\r\n};\r\nconst getRelativePath = (pathA, pathB) => {\r\n    let i = 0;\r\n    for (; i < pathA.length && i < pathB.length; i++) {\r\n        if (pathA[i] !== pathB[i])\r\n            break;\r\n    }\r\n    return [(pathA.length - i).toString(), ...pathB.slice(i)].join(\"/\");\r\n};\r\nconst selectParser = (def, typeName, refs) => {\r\n    switch (typeName) {\r\n        case zod_1.ZodFirstPartyTypeKind.ZodString:\r\n            return (0, string_1.parseStringDef)(def, refs);\r\n        case zod_1.ZodFirstPartyTypeKind.ZodNumber:\r\n            return (0, number_1.parseNumberDef)(def, refs);\r\n        case zod_1.ZodFirstPartyTypeKind.ZodObject:\r\n            return (0, object_1.parseObjectDef)(def, refs);\r\n        case zod_1.ZodFirstPartyTypeKind.ZodBigInt:\r\n            return (0, bigint_1.parseBigintDef)(def, refs);\r\n        case zod_1.ZodFirstPartyTypeKind.ZodBoolean:\r\n            return (0, boolean_1.parseBooleanDef)();\r\n        case zod_1.ZodFirstPartyTypeKind.ZodDate:\r\n            return (0, date_1.parseDateDef)(def, refs);\r\n        case zod_1.ZodFirstPartyTypeKind.ZodUndefined:\r\n            return (0, undefined_1.parseUndefinedDef)();\r\n        case zod_1.ZodFirstPartyTypeKind.ZodNull:\r\n            return (0, null_1.parseNullDef)(refs);\r\n        case zod_1.ZodFirstPartyTypeKind.ZodArray:\r\n            return (0, array_1.parseArrayDef)(def, refs);\r\n        case zod_1.ZodFirstPartyTypeKind.ZodUnion:\r\n        case zod_1.ZodFirstPartyTypeKind.ZodDiscriminatedUnion:\r\n            return (0, union_1.parseUnionDef)(def, refs);\r\n        case zod_1.ZodFirstPartyTypeKind.ZodIntersection:\r\n            return (0, intersection_1.parseIntersectionDef)(def, refs);\r\n        case zod_1.ZodFirstPartyTypeKind.ZodTuple:\r\n            return (0, tuple_1.parseTupleDef)(def, refs);\r\n        case zod_1.ZodFirstPartyTypeKind.ZodRecord:\r\n            return (0, record_1.parseRecordDef)(def, refs);\r\n        case zod_1.ZodFirstPartyTypeKind.ZodLiteral:\r\n            return (0, literal_1.parseLiteralDef)(def, refs);\r\n        case zod_1.ZodFirstPartyTypeKind.ZodEnum:\r\n            return (0, enum_1.parseEnumDef)(def);\r\n        case zod_1.ZodFirstPartyTypeKind.ZodNativeEnum:\r\n            return (0, nativeEnum_1.parseNativeEnumDef)(def);\r\n        case zod_1.ZodFirstPartyTypeKind.ZodNullable:\r\n            return (0, nullable_1.parseNullableDef)(def, refs);\r\n        case zod_1.ZodFirstPartyTypeKind.ZodOptional:\r\n            return (0, optional_1.parseOptionalDef)(def, refs);\r\n        case zod_1.ZodFirstPartyTypeKind.ZodMap:\r\n            return (0, map_1.parseMapDef)(def, refs);\r\n        case zod_1.ZodFirstPartyTypeKind.ZodSet:\r\n            return (0, set_1.parseSetDef)(def, refs);\r\n        case zod_1.ZodFirstPartyTypeKind.ZodLazy:\r\n            return parseDef(def.getter()._def, refs);\r\n        case zod_1.ZodFirstPartyTypeKind.ZodPromise:\r\n            return (0, promise_1.parsePromiseDef)(def, refs);\r\n        case zod_1.ZodFirstPartyTypeKind.ZodNaN:\r\n        case zod_1.ZodFirstPartyTypeKind.ZodNever:\r\n            return (0, never_1.parseNeverDef)();\r\n        case zod_1.ZodFirstPartyTypeKind.ZodEffects:\r\n            return (0, effects_1.parseEffectsDef)(def, refs);\r\n        case zod_1.ZodFirstPartyTypeKind.ZodAny:\r\n            return (0, any_1.parseAnyDef)();\r\n        case zod_1.ZodFirstPartyTypeKind.ZodUnknown:\r\n            return (0, unknown_1.parseUnknownDef)();\r\n        case zod_1.ZodFirstPartyTypeKind.ZodDefault:\r\n            return (0, default_1.parseDefaultDef)(def, refs);\r\n        case zod_1.ZodFirstPartyTypeKind.ZodBranded:\r\n            return (0, branded_1.parseBrandedDef)(def, refs);\r\n        case zod_1.ZodFirstPartyTypeKind.ZodCatch:\r\n            return (0, catch_1.parseCatchDef)(def, refs);\r\n        case zod_1.ZodFirstPartyTypeKind.ZodPipeline:\r\n            return (0, pipeline_1.parsePipelineDef)(def, refs);\r\n        case zod_1.ZodFirstPartyTypeKind.ZodFunction:\r\n        case zod_1.ZodFirstPartyTypeKind.ZodVoid:\r\n        case zod_1.ZodFirstPartyTypeKind.ZodSymbol:\r\n            return undefined;\r\n        default:\r\n            return ((_) => undefined)(typeName);\r\n    }\r\n};\r\nconst addMeta = (def, refs, jsonSchema) => {\r\n    if (def.description) {\r\n        jsonSchema.description = def.description;\r\n        if (refs.markdownDescription) {\r\n            jsonSchema.markdownDescription = def.description;\r\n        }\r\n    }\r\n    return jsonSchema;\r\n};\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getDefaultOptions = exports.defaultOptions = void 0;\r\nexports.defaultOptions = {\r\n    name: undefined,\r\n    $refStrategy: \"root\",\r\n    basePath: [\"#\"],\r\n    effectStrategy: \"input\",\r\n    pipeStrategy: \"all\",\r\n    dateStrategy: \"string\",\r\n    definitionPath: \"definitions\",\r\n    target: \"jsonSchema7\",\r\n    strictUnions: false,\r\n    definitions: {},\r\n    errorMessages: false,\r\n    markdownDescription: false,\r\n    emailStrategy: \"format:email\",\r\n};\r\nconst getDefaultOptions = (options) => (typeof options === \"string\"\r\n    ? Object.assign(Object.assign({}, exports.defaultOptions), { name: options }) : Object.assign(Object.assign({}, exports.defaultOptions), options));\r\nexports.getDefaultOptions = getDefaultOptions;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getRefs = void 0;\r\nconst Options_1 = require(\"./Options\");\r\nconst getRefs = (options) => {\r\n    const _options = (0, Options_1.getDefaultOptions)(options);\r\n    const currentPath = _options.name !== undefined\r\n        ? [..._options.basePath, _options.definitionPath, _options.name]\r\n        : _options.basePath;\r\n    return Object.assign(Object.assign({}, _options), { currentPath: currentPath, propertyPath: undefined, seen: new Map(Object.entries(_options.definitions).map(([name, def]) => [\r\n            def._def,\r\n            {\r\n                def: def._def,\r\n                path: [..._options.basePath, _options.definitionPath, name],\r\n                // Resolution of references will be forced even though seen, so it's ok that the schema is undefined here for now.\r\n                jsonSchema: undefined,\r\n            },\r\n        ])) });\r\n};\r\nexports.getRefs = getRefs;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.zodToJsonSchema = void 0;\r\nconst parseDef_1 = require(\"./parseDef\");\r\nconst Refs_1 = require(\"./Refs\");\r\nconst zodToJsonSchema = (schema, options) => {\r\n    var _a;\r\n    const refs = (0, Refs_1.getRefs)(options);\r\n    const definitions = typeof options === \"object\" && options.definitions\r\n        ? Object.entries(options.definitions).reduce((acc, [name, schema]) => {\r\n            var _a;\r\n            return (Object.assign(Object.assign({}, acc), { [name]: (_a = (0, parseDef_1.parseDef)(schema._def, Object.assign(Object.assign({}, refs), { currentPath: [...refs.basePath, refs.definitionPath, name] }), true)) !== null && _a !== void 0 ? _a : {} }));\r\n        }, {})\r\n        : undefined;\r\n    const name = typeof options === \"string\" ? options : options === null || options === void 0 ? void 0 : options.name;\r\n    const main = (_a = (0, parseDef_1.parseDef)(schema._def, name === undefined\r\n        ? refs\r\n        : Object.assign(Object.assign({}, refs), { currentPath: [...refs.basePath, refs.definitionPath, name] }), false)) !== null && _a !== void 0 ? _a : {};\r\n    const combined = name === undefined\r\n        ? definitions\r\n            ? Object.assign(Object.assign({}, main), { [refs.definitionPath]: definitions }) : main\r\n        : {\r\n            $ref: [\r\n                ...(refs.$refStrategy === \"relative\" ? [] : refs.basePath),\r\n                refs.definitionPath,\r\n                name,\r\n            ].join(\"/\"),\r\n            [refs.definitionPath]: Object.assign(Object.assign({}, definitions), { [name]: main }),\r\n        };\r\n    if (refs.target === \"jsonSchema7\") {\r\n        combined.$schema = \"http://json-schema.org/draft-07/schema#\";\r\n    }\r\n    else if (refs.target === \"jsonSchema2019-09\") {\r\n        combined.$schema = \"https://json-schema.org/draft/2019-09/schema#\";\r\n    }\r\n    return combined;\r\n};\r\nexports.zodToJsonSchema = zodToJsonSchema;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.zodToJsonSchema = void 0;\r\nconst zodToJsonSchema_1 = require(\"./src/zodToJsonSchema\");\r\nObject.defineProperty(exports, \"zodToJsonSchema\", { enumerable: true, get: function () { return zodToJsonSchema_1.zodToJsonSchema; } });\r\nexports.default = zodToJsonSchema_1.zodToJsonSchema;\r\n", "export const VERSION = '4.4.0'; // x-release-please-version\r\n", "import type { Response } from './_shims/fetch.js';\r\n\r\ntype Bytes = string | ArrayBuffer | Uint8Array | Buffer | null | undefined;\r\n\r\ntype ServerSentEvent = {\r\n  event: string | null;\r\n  data: string;\r\n  raw: string[];\r\n};\r\n\r\nexport class Stream<Item> implements AsyncIterable<Item> {\r\n  controller: AbortController;\r\n\r\n  private response: Response;\r\n  private decoder: SSEDecoder;\r\n\r\n  constructor(response: Response, controller: AbortController) {\r\n    this.response = response;\r\n    this.controller = controller;\r\n    this.decoder = new SSEDecoder();\r\n  }\r\n\r\n  private async *iterMessages(): AsyncGenerator<ServerSentEvent, void, unknown> {\r\n    if (!this.response.body) {\r\n      this.controller.abort();\r\n      throw new Error(`Attempted to iterate over a response with no body`);\r\n    }\r\n    const lineDecoder = new LineDecoder();\r\n\r\n    const iter = readableStreamAsyncIterable<Bytes>(this.response.body);\r\n    for await (const chunk of iter) {\r\n      for (const line of lineDecoder.decode(chunk)) {\r\n        const sse = this.decoder.decode(line);\r\n        if (sse) yield sse;\r\n      }\r\n    }\r\n\r\n    for (const line of lineDecoder.flush()) {\r\n      const sse = this.decoder.decode(line);\r\n      if (sse) yield sse;\r\n    }\r\n  }\r\n\r\n  async *[Symbol.asyncIterator](): AsyncIterator<Item, any, undefined> {\r\n    let done = false;\r\n    try {\r\n      for await (const sse of this.iterMessages()) {\r\n        if (done) continue;\r\n\r\n        if (sse.data.startsWith('[DONE]')) {\r\n          done = true;\r\n          continue;\r\n        }\r\n\r\n        if (sse.event === null) {\r\n          try {\r\n            yield JSON.parse(sse.data);\r\n          } catch (e) {\r\n            console.error(`Could not parse message into JSON:`, sse.data);\r\n            console.error(`From chunk:`, sse.raw);\r\n            throw e;\r\n          }\r\n        }\r\n      }\r\n      done = true;\r\n    } catch (e) {\r\n      // If the user calls `stream.controller.abort()`, we should exit without throwing.\r\n      if (e instanceof Error && e.name === 'AbortError') return;\r\n      throw e;\r\n    } finally {\r\n      // If the user `break`s, abort the ongoing request.\r\n      if (!done) this.controller.abort();\r\n    }\r\n  }\r\n}\r\n\r\nclass SSEDecoder {\r\n  private data: string[];\r\n  private event: string | null;\r\n  private chunks: string[];\r\n\r\n  constructor() {\r\n    this.event = null;\r\n    this.data = [];\r\n    this.chunks = [];\r\n  }\r\n\r\n  decode(line: string) {\r\n    if (line.endsWith('\\r')) {\r\n      line = line.substring(0, line.length - 1);\r\n    }\r\n\r\n    if (!line) {\r\n      // empty line and we didn't previously encounter any messages\r\n      if (!this.event && !this.data.length) return null;\r\n\r\n      const sse: ServerSentEvent = {\r\n        event: this.event,\r\n        data: this.data.join('\\n'),\r\n        raw: this.chunks,\r\n      };\r\n\r\n      this.event = null;\r\n      this.data = [];\r\n      this.chunks = [];\r\n\r\n      return sse;\r\n    }\r\n\r\n    this.chunks.push(line);\r\n\r\n    if (line.startsWith(':')) {\r\n      return null;\r\n    }\r\n\r\n    let [fieldname, _, value] = partition(line, ':');\r\n\r\n    if (value.startsWith(' ')) {\r\n      value = value.substring(1);\r\n    }\r\n\r\n    if (fieldname === 'event') {\r\n      this.event = value;\r\n    } else if (fieldname === 'data') {\r\n      this.data.push(value);\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * A re-implementation of httpx's `LineDecoder` in Python that handles incrementally\r\n * reading lines from text.\r\n *\r\n * https://github.com/encode/httpx/blob/920333ea98118e9cf617f246905d7b202510941c/httpx/_decoders.py#L258\r\n */\r\nclass LineDecoder {\r\n  // prettier-ignore\r\n  static NEWLINE_CHARS = new Set(['\\n', '\\r', '\\x0b', '\\x0c', '\\x1c', '\\x1d', '\\x1e', '\\x85', '\\u2028', '\\u2029']);\r\n  static NEWLINE_REGEXP = /\\r\\n|[\\n\\r\\x0b\\x0c\\x1c\\x1d\\x1e\\x85\\u2028\\u2029]/g;\r\n\r\n  buffer: string[];\r\n  trailingCR: boolean;\r\n  textDecoder: any; // TextDecoder found in browsers; not typed to avoid pulling in either \"dom\" or \"node\" types.\r\n\r\n  constructor() {\r\n    this.buffer = [];\r\n    this.trailingCR = false;\r\n  }\r\n\r\n  decode(chunk: Bytes): string[] {\r\n    let text = this.decodeText(chunk);\r\n\r\n    if (this.trailingCR) {\r\n      text = '\\r' + text;\r\n      this.trailingCR = false;\r\n    }\r\n    if (text.endsWith('\\r')) {\r\n      this.trailingCR = true;\r\n      text = text.slice(0, -1);\r\n    }\r\n\r\n    if (!text) {\r\n      return [];\r\n    }\r\n\r\n    const trailingNewline = LineDecoder.NEWLINE_CHARS.has(text[text.length - 1] || '');\r\n    let lines = text.split(LineDecoder.NEWLINE_REGEXP);\r\n\r\n    if (lines.length === 1 && !trailingNewline) {\r\n      this.buffer.push(lines[0]!);\r\n      return [];\r\n    }\r\n\r\n    if (this.buffer.length > 0) {\r\n      lines = [this.buffer.join('') + lines[0], ...lines.slice(1)];\r\n      this.buffer = [];\r\n    }\r\n\r\n    if (!trailingNewline) {\r\n      this.buffer = [lines.pop() || ''];\r\n    }\r\n\r\n    return lines;\r\n  }\r\n\r\n  decodeText(bytes: Bytes): string {\r\n    if (bytes == null) return '';\r\n    if (typeof bytes === 'string') return bytes;\r\n\r\n    // Node:\r\n    if (typeof Buffer !== 'undefined') {\r\n      if (bytes instanceof Buffer) {\r\n        return bytes.toString();\r\n      }\r\n      if (bytes instanceof Uint8Array) {\r\n        return Buffer.from(bytes).toString();\r\n      }\r\n\r\n      throw new Error(\r\n        `Unexpected: received non-Uint8Array (${bytes.constructor.name}) stream chunk in an environment with a global \"Buffer\" defined, which this library assumes to be Node. Please report this error.`,\r\n      );\r\n    }\r\n\r\n    // Browser\r\n    if (typeof TextDecoder !== 'undefined') {\r\n      if (bytes instanceof Uint8Array || bytes instanceof ArrayBuffer) {\r\n        this.textDecoder ??= new TextDecoder('utf8');\r\n        return this.textDecoder.decode(bytes);\r\n      }\r\n\r\n      throw new Error(\r\n        `Unexpected: received non-Uint8Array/ArrayBuffer (${\r\n          (bytes as any).constructor.name\r\n        }) in a web platform. Please report this error.`,\r\n      );\r\n    }\r\n\r\n    throw new Error(\r\n      `Unexpected: neither Buffer nor TextDecoder are available as globals. Please report this error.`,\r\n    );\r\n  }\r\n\r\n  flush(): string[] {\r\n    if (!this.buffer.length && !this.trailingCR) {\r\n      return [];\r\n    }\r\n\r\n    const lines = [this.buffer.join('')];\r\n    this.buffer = [];\r\n    this.trailingCR = false;\r\n    return lines;\r\n  }\r\n}\r\n\r\nfunction partition(str: string, delimiter: string): [string, string, string] {\r\n  const index = str.indexOf(delimiter);\r\n  if (index !== -1) {\r\n    return [str.substring(0, index), delimiter, str.substring(index + delimiter.length)];\r\n  }\r\n\r\n  return [str, '', ''];\r\n}\r\n\r\n/**\r\n * Most browsers don't yet have async iterable support for ReadableStream,\r\n * and Node has a very different way of reading bytes from its \"ReadableStream\".\r\n *\r\n * This polyfill was pulled from https://github.com/MattiasBuelens/web-streams-polyfill/pull/122#issuecomment-1627354490\r\n */\r\nfunction readableStreamAsyncIterable<T>(stream: any): AsyncIterableIterator<T> {\r\n  if (stream[Symbol.asyncIterator]) return stream;\r\n\r\n  const reader = stream.getReader();\r\n  return {\r\n    async next() {\r\n      try {\r\n        const result = await reader.read();\r\n        if (result?.done) reader.releaseLock(); // release lock when stream becomes closed\r\n        return result;\r\n      } catch (e) {\r\n        reader.releaseLock(); // release lock when stream becomes errored\r\n        throw e;\r\n      }\r\n    },\r\n    async return() {\r\n      const cancelPromise = reader.cancel();\r\n      reader.releaseLock();\r\n      await cancelPromise;\r\n      return { done: true, value: undefined };\r\n    },\r\n    [Symbol.asyncIterator]() {\r\n      return this;\r\n    },\r\n  };\r\n}\r\n", "// File generated from our OpenAPI spec by Stainless.\r\n\r\nimport { castToError, Headers } from './core';\r\n\r\nexport class APIError extends Error {\r\n  readonly status: number | undefined;\r\n  readonly headers: Headers | undefined;\r\n  readonly error: Object | undefined;\r\n\r\n  readonly code: string | null | undefined;\r\n  readonly param: string | null | undefined;\r\n  readonly type: string | undefined;\r\n\r\n  constructor(\r\n    status: number | undefined,\r\n    error: Object | undefined,\r\n    message: string | undefined,\r\n    headers: Headers | undefined,\r\n  ) {\r\n    super(APIError.makeMessage(error, message));\r\n    this.status = status;\r\n    this.headers = headers;\r\n\r\n    const data = error as Record<string, any>;\r\n    this.error = data;\r\n    this.code = data?.['code'];\r\n    this.param = data?.['param'];\r\n    this.type = data?.['type'];\r\n  }\r\n\r\n  private static makeMessage(error: any, message: string | undefined) {\r\n    return (\r\n      error?.message ?\r\n        typeof error.message === 'string' ? error.message\r\n        : JSON.stringify(error.message)\r\n      : error ? JSON.stringify(error)\r\n      : message || 'Unknown error occurred'\r\n    );\r\n  }\r\n\r\n  static generate(\r\n    status: number | undefined,\r\n    errorResponse: Object | undefined,\r\n    message: string | undefined,\r\n    headers: Headers | undefined,\r\n  ) {\r\n    if (!status) {\r\n      return new APIConnectionError({ cause: castToError(errorResponse) });\r\n    }\r\n\r\n    const error = (errorResponse as Record<string, any>)?.['error'];\r\n\r\n    if (status === 400) {\r\n      return new BadRequestError(status, error, message, headers);\r\n    }\r\n\r\n    if (status === 401) {\r\n      return new AuthenticationError(status, error, message, headers);\r\n    }\r\n\r\n    if (status === 403) {\r\n      return new PermissionDeniedError(status, error, message, headers);\r\n    }\r\n\r\n    if (status === 404) {\r\n      return new NotFoundError(status, error, message, headers);\r\n    }\r\n\r\n    if (status === 409) {\r\n      return new ConflictError(status, error, message, headers);\r\n    }\r\n\r\n    if (status === 422) {\r\n      return new UnprocessableEntityError(status, error, message, headers);\r\n    }\r\n\r\n    if (status === 429) {\r\n      return new RateLimitError(status, error, message, headers);\r\n    }\r\n\r\n    if (status >= 500) {\r\n      return new InternalServerError(status, error, message, headers);\r\n    }\r\n\r\n    return new APIError(status, error, message, headers);\r\n  }\r\n}\r\n\r\nexport class APIUserAbortError extends APIError {\r\n  override readonly status: undefined = undefined;\r\n\r\n  constructor({ message }: { message?: string } = {}) {\r\n    super(undefined, undefined, message || 'Request was aborted.', undefined);\r\n  }\r\n}\r\n\r\nexport class APIConnectionError extends APIError {\r\n  override readonly status: undefined = undefined;\r\n\r\n  constructor({ message, cause }: { message?: string; cause?: Error | undefined }) {\r\n    super(undefined, undefined, message || 'Connection error.', undefined);\r\n    // in some environments the 'cause' property is already declared\r\n    // @ts-ignore\r\n    if (cause) this.cause = cause;\r\n  }\r\n}\r\n\r\nexport class APIConnectionTimeoutError extends APIConnectionError {\r\n  constructor() {\r\n    super({ message: 'Request timed out.' });\r\n  }\r\n}\r\n\r\nexport class BadRequestError extends APIError {\r\n  override readonly status: 400 = 400;\r\n}\r\n\r\nexport class AuthenticationError extends APIError {\r\n  override readonly status: 401 = 401;\r\n}\r\n\r\nexport class PermissionDeniedError extends APIError {\r\n  override readonly status: 403 = 403;\r\n}\r\n\r\nexport class NotFoundError extends APIError {\r\n  override readonly status: 404 = 404;\r\n}\r\n\r\nexport class ConflictError extends APIError {\r\n  override readonly status: 409 = 409;\r\n}\r\n\r\nexport class UnprocessableEntityError extends APIError {\r\n  override readonly status: 422 = 422;\r\n}\r\n\r\nexport class RateLimitError extends APIError {\r\n  override readonly status: 429 = 429;\r\n}\r\n\r\nexport class InternalServerError extends APIError {}\r\n", "/**\r\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\r\n *\r\n * This is a stub for non-node environments.\r\n * In node environments, it gets replaced agent.node.ts by the package export map\r\n */\r\n\r\nexport type Agent = any;\r\n\r\nexport const getDefaultAgent = (url: string): any => {\r\n  return undefined;\r\n};\r\n", "/**\r\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\r\n */\r\n\r\n// If we accidentally call fetch with the wrong this binding,\r\n// in the browser it would throw:\r\n//   TypeError: Failed to execute 'fetch' on 'Window': Illegal invocation\r\nconst _fetch = fetch.bind(undefined);\r\nconst _Request = Request;\r\nconst _Response = Response;\r\nconst _Headers = Headers;\r\n\r\nexport const isPolyfilled = false;\r\n\r\nexport { _fetch as fetch, _Request as Request, _Response as Response, _Headers as Headers };\r\n", "/**\r\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\r\n */\r\n\r\nconst _FormData = FormData;\r\nconst _Blob = Blob;\r\n\r\nconst _File =\r\n  typeof File !== 'undefined' ? File : (\r\n    // Bun doesn't implement File yet, so just make a shim that throws a helpful error message\r\n    class File extends Blob {\r\n      constructor() {\r\n        throw new Error(`file uploads aren't supported in this environment yet as 'File' is not defined`);\r\n      }\r\n    }\r\n  );\r\n\r\nexport { _FormData as FormData, _File as File, _Blob as Blob };\r\n\r\nexport const isPolyfilled = false;\r\n", "/**\r\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\r\n */\r\n\r\nimport { FormData } from './formdata.js';\r\nimport type { RequestOptions } from '../core';\r\nimport { MultipartBody } from '../uploads';\r\n\r\nexport async function getMultipartRequestOptions<T extends {} = Record<string, unknown>>(\r\n  form: FormData,\r\n  opts: RequestOptions<T>,\r\n): Promise<RequestOptions<T>> {\r\n  return { ...opts, body: new MultipartBody(form) as any };\r\n}\r\n", "/**\r\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\r\n *\r\n * This is a stub that gets replaced by fileFromPath.node.js for node environments\r\n * in the package export map\r\n */\r\n\r\nimport type { FilePropertyBag, File } from './formdata.js';\r\n\r\nexport type FileFromPathOptions = Omit<FilePropertyBag, 'lastModified'>;\r\n\r\n/**\r\n * This is a stub for non-node environments that just throws an error.\r\n * In node environments, this module will be replaced by util/node/fileFromPath by the\r\n * package import map.\r\n */\r\nexport async function fileFromPath(path: string): Promise<File>;\r\nexport async function fileFromPath(path: string, filename?: string): Promise<File>;\r\nexport async function fileFromPath(path: string, options?: FileFromPathOptions): Promise<File>;\r\nexport async function fileFromPath(\r\n  path: string,\r\n  filename?: string,\r\n  options?: FileFromPathOptions,\r\n): Promise<File>;\r\nexport async function fileFromPath(): Promise<File> {\r\n  throw new Error(\r\n    'The `fileFromPath` function is only supported in Node. See the README for more details: https://www.github.com/openai/openai-node#file-uploads',\r\n  );\r\n}\r\n", "/**\r\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\r\n */\r\n\r\n// shim these Node types to avoid importing @types/node and polluting the user's\r\n// type environment in non-node projects\r\n\r\nexport declare class Readable {\r\n  readable: boolean;\r\n  readonly readableEnded: boolean;\r\n  readonly readableFlowing: boolean | null;\r\n  readonly readableHighWaterMark: number;\r\n  readonly readableLength: number;\r\n  readonly readableObjectMode: boolean;\r\n  destroyed: boolean;\r\n  read(size?: number): any;\r\n  pause(): this;\r\n  resume(): this;\r\n  isPaused(): boolean;\r\n  destroy(error?: Error): this;\r\n  [Symbol.asyncIterator](): AsyncIterableIterator<any>;\r\n}\r\n\r\nexport declare class FsReadStream extends Readable {\r\n  path: {}; // node type is string | Buffer\r\n}\r\n\r\nexport function isFsReadStream(value: any): value is FsReadStream {\r\n  return false;\r\n}\r\n", "import { type RequestOptions } from './core';\r\nimport { type Readable } from './_shims/node-readable';\r\nimport { type BodyInit } from './_shims/fetch.js';\r\nimport { FormData, File, type Blob, type FilePropertyBag } from './_shims/formdata.js';\r\nimport { getMultipartRequestOptions } from './_shims/getMultipartRequestOptions';\r\nimport { fileFromPath } from './_shims/fileFromPath';\r\nimport { type FsReadStream, isFsReadStream } from './_shims/node-readable';\r\n\r\nexport { fileFromPath };\r\n\r\ntype BlobLikePart = string | ArrayBuffer | ArrayBufferView | BlobLike | Uint8Array | DataView;\r\nexport type BlobPart = string | ArrayBuffer | ArrayBufferView | Blob | Uint8Array | DataView;\r\n\r\n/**\r\n * Typically, this is a native \"File\" class.\r\n *\r\n * We provide the {@link toFile} utility to convert a variety of objects\r\n * into the File class.\r\n *\r\n * For convenience, you can also pass a fetch Response, or in Node,\r\n * the result of fs.createReadStream().\r\n */\r\nexport type Uploadable = FileLike | ResponseLike | FsReadStream;\r\n\r\n/**\r\n * Intended to match web.Blob, node.Blob, node-fetch.Blob, etc.\r\n */\r\nexport interface BlobLike {\r\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/size) */\r\n  readonly size: number;\r\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/type) */\r\n  readonly type: string;\r\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/text) */\r\n  text(): Promise<string>;\r\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/slice) */\r\n  slice(start?: number, end?: number): BlobLike;\r\n  // unfortunately @types/node-fetch@^2.6.4 doesn't type the arrayBuffer method\r\n}\r\n\r\n/**\r\n * Intended to match web.File, node.File, node-fetch.File, etc.\r\n */\r\nexport interface FileLike extends BlobLike {\r\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/File/lastModified) */\r\n  readonly lastModified: number;\r\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/File/name) */\r\n  readonly name: string;\r\n}\r\n\r\n/**\r\n * Intended to match web.Response, node.Response, node-fetch.Response, etc.\r\n */\r\nexport interface ResponseLike {\r\n  url: string;\r\n  blob(): Promise<BlobLike>;\r\n}\r\n\r\nexport const isResponseLike = (value: any): value is ResponseLike =>\r\n  value != null &&\r\n  typeof value === 'object' &&\r\n  typeof value.url === 'string' &&\r\n  typeof value.blob === 'function';\r\n\r\nexport const isFileLike = (value: any): value is FileLike =>\r\n  value != null &&\r\n  typeof value === 'object' &&\r\n  typeof value.name === 'string' &&\r\n  typeof value.lastModified === 'number' &&\r\n  isBlobLike(value);\r\n\r\n/**\r\n * The BlobLike type omits arrayBuffer() because @types/node-fetch@^2.6.4 lacks it; but this check\r\n * adds the arrayBuffer() method type because it is available and used at runtime\r\n */\r\nexport const isBlobLike = (value: any): value is BlobLike & { arrayBuffer(): Promise<ArrayBuffer> } =>\r\n  value != null &&\r\n  typeof value === 'object' &&\r\n  typeof value.size === 'number' &&\r\n  typeof value.type === 'string' &&\r\n  typeof value.text === 'function' &&\r\n  typeof value.slice === 'function' &&\r\n  typeof value.arrayBuffer === 'function';\r\n\r\nexport const isUploadable = (value: any): value is Uploadable => {\r\n  return isFileLike(value) || isResponseLike(value) || isFsReadStream(value);\r\n};\r\n\r\nexport type ToFileInput = Uploadable | Exclude<BlobLikePart, string> | AsyncIterable<BlobLikePart>;\r\n\r\n/**\r\n * Helper for creating a {@link File} to pass to an SDK upload method from a variety of different data formats\r\n * @param value the raw content of the file.  Can be an {@link Uploadable}, {@link BlobLikePart}, or {@link AsyncIterable} of {@link BlobLikePart}s\r\n * @param {string=} name the name of the file. If omitted, toFile will try to determine a file name from bits if possible\r\n * @param {Object=} options additional properties\r\n * @param {string=} options.type the MIME type of the content\r\n * @param {number=} options.lastModified the last modified timestamp\r\n * @returns a {@link File} with the given properties\r\n */\r\nexport async function toFile(\r\n  value: ToFileInput | PromiseLike<ToFileInput>,\r\n  name?: string | null | undefined,\r\n  options: FilePropertyBag | undefined = {},\r\n): Promise<FileLike> {\r\n  // If it's a promise, resolve it.\r\n  value = await value;\r\n\r\n  if (isResponseLike(value)) {\r\n    const blob = await value.blob();\r\n    name ||= new URL(value.url).pathname.split(/[\\\\/]/).pop() ?? 'unknown_file';\r\n\r\n    return new File([blob as any], name, options);\r\n  }\r\n\r\n  const bits = await getBytes(value);\r\n\r\n  name ||= getName(value) ?? 'unknown_file';\r\n\r\n  if (!options.type) {\r\n    const type = (bits[0] as any)?.type;\r\n    if (typeof type === 'string') {\r\n      options = { ...options, type };\r\n    }\r\n  }\r\n\r\n  return new File(bits, name, options);\r\n}\r\n\r\nasync function getBytes(value: ToFileInput): Promise<Array<BlobPart>> {\r\n  let parts: Array<BlobPart> = [];\r\n  if (\r\n    typeof value === 'string' ||\r\n    ArrayBuffer.isView(value) || // includes Uint8Array, Buffer, etc.\r\n    value instanceof ArrayBuffer\r\n  ) {\r\n    parts.push(value);\r\n  } else if (isBlobLike(value)) {\r\n    parts.push(await value.arrayBuffer());\r\n  } else if (\r\n    isAsyncIterableIterator(value) // includes Readable, ReadableStream, etc.\r\n  ) {\r\n    for await (const chunk of value) {\r\n      parts.push(chunk as BlobPart); // TODO, consider validating?\r\n    }\r\n  } else {\r\n    throw new Error(\r\n      `Unexpected data type: ${typeof value}; constructor: ${\r\n        value?.constructor?.name\r\n      }; props: ${propsForError(value)}`,\r\n    );\r\n  }\r\n\r\n  return parts;\r\n}\r\n\r\nfunction propsForError(value: any): string {\r\n  const props = Object.getOwnPropertyNames(value);\r\n  return `[${props.map((p) => `\"${p}\"`).join(', ')}]`;\r\n}\r\n\r\nfunction getName(value: any): string | undefined {\r\n  return (\r\n    getStringFromMaybeBuffer(value.name) ||\r\n    getStringFromMaybeBuffer(value.filename) ||\r\n    // For fs.ReadStream\r\n    getStringFromMaybeBuffer(value.path)?.split(/[\\\\/]/).pop()\r\n  );\r\n}\r\n\r\nconst getStringFromMaybeBuffer = (x: string | Buffer | unknown): string | undefined => {\r\n  if (typeof x === 'string') return x;\r\n  if (typeof Buffer !== 'undefined' && x instanceof Buffer) return String(x);\r\n  return undefined;\r\n};\r\n\r\nconst isAsyncIterableIterator = (value: any): value is AsyncIterableIterator<unknown> =>\r\n  value != null && typeof value === 'object' && typeof value[Symbol.asyncIterator] === 'function';\r\n\r\nexport class MultipartBody {\r\n  constructor(public body: Readable | BodyInit) {}\r\n  get [Symbol.toStringTag](): string {\r\n    return 'MultipartBody';\r\n  }\r\n}\r\n\r\nexport const isMultipartBody = (body: any): body is MultipartBody =>\r\n  body && typeof body === 'object' && body.body && body[Symbol.toStringTag] === 'MultipartBody';\r\n\r\n/**\r\n * Returns a multipart/form-data request if any part of the given request body contains a File / Blob value.\r\n * Otherwise returns the request as is.\r\n */\r\nexport const maybeMultipartFormRequestOptions = async <T extends {} = Record<string, unknown>>(\r\n  opts: RequestOptions<T>,\r\n): Promise<RequestOptions<T | MultipartBody>> => {\r\n  if (!hasUploadableValue(opts.body)) return opts;\r\n\r\n  const form = await createForm(opts.body);\r\n  return getMultipartRequestOptions(form, opts);\r\n};\r\n\r\nexport const multipartFormRequestOptions = async <T extends {} = Record<string, unknown>>(\r\n  opts: RequestOptions<T>,\r\n): Promise<RequestOptions<T | MultipartBody>> => {\r\n  const form = await createForm(opts.body);\r\n  return getMultipartRequestOptions(form, opts);\r\n};\r\n\r\nexport const createForm = async <T = Record<string, unknown>>(body: T | undefined): Promise<FormData> => {\r\n  const form = new FormData();\r\n  await Promise.all(Object.entries(body || {}).map(([key, value]) => addFormValue(form, key, value)));\r\n  return form;\r\n};\r\n\r\nconst hasUploadableValue = (value: unknown): boolean => {\r\n  if (isUploadable(value)) return true;\r\n  if (Array.isArray(value)) return value.some(hasUploadableValue);\r\n  if (value && typeof value === 'object') {\r\n    for (const k in value) {\r\n      if (hasUploadableValue((value as any)[k])) return true;\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nconst addFormValue = async (form: FormData, key: string, value: unknown): Promise<void> => {\r\n  if (value === undefined) return;\r\n  if (value == null) {\r\n    throw new TypeError(\r\n      `Received null for \"${key}\"; to pass null in FormData, you must use the string 'null'`,\r\n    );\r\n  }\r\n\r\n  // TODO: make nested formats configurable\r\n  if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\r\n    form.append(key, String(value));\r\n  } else if (isUploadable(value)) {\r\n    const file = await toFile(value);\r\n    form.append(key, file as File);\r\n  } else if (Array.isArray(value)) {\r\n    await Promise.all(value.map((entry) => addFormValue(form, key + '[]', entry)));\r\n  } else if (typeof value === 'object') {\r\n    await Promise.all(\r\n      Object.entries(value).map(([name, prop]) => addFormValue(form, `${key}[${name}]`, prop)),\r\n    );\r\n  } else {\r\n    throw new TypeError(\r\n      `Invalid value given to form, expected a string, number, boolean, object, Array, File or Blob but got ${value} instead`,\r\n    );\r\n  }\r\n};\r\n", "import { VERSION } from './version';\r\nimport { Stream } from './streaming';\r\nimport { APIError, APIConnectionError, APIConnectionTimeoutError, APIUserAbortError } from './error';\r\nimport type { Readable } from './_shims/node-readable';\r\nimport { getDefaultAgent, type Agent } from './_shims/agent';\r\nimport {\r\n  fetch,\r\n  isPolyfilled as fetchIsPolyfilled,\r\n  type RequestInfo,\r\n  type RequestInit,\r\n  type Response,\r\n  type HeadersInit,\r\n} from './_shims/fetch.js';\r\nexport { type Response };\r\nimport { isMultipartBody } from './uploads';\r\nexport {\r\n  maybeMultipartFormRequestOptions,\r\n  multipartFormRequestOptions,\r\n  createForm,\r\n  type Uploadable,\r\n} from './uploads';\r\n\r\nconst MAX_RETRIES = 2;\r\n\r\nexport type Fetch = (url: RequestInfo, init?: RequestInit) => Promise<Response>;\r\n\r\ntype PromiseOrValue<T> = T | Promise<T>;\r\n\r\ntype APIResponseProps = {\r\n  response: Response;\r\n  options: FinalRequestOptions;\r\n  controller: AbortController;\r\n};\r\n\r\nasync function defaultParseResponse<T>(props: APIResponseProps): Promise<T> {\r\n  const { response } = props;\r\n  if (props.options.stream) {\r\n    // Note: there is an invariant here that isn't represented in the type system\r\n    // that if you set `stream: true` the response type must also be `Stream<T>`\r\n    return new Stream(response, props.controller) as any;\r\n  }\r\n\r\n  const contentType = response.headers.get('content-type');\r\n  if (contentType?.includes('application/json')) {\r\n    const json = await response.json();\r\n\r\n    debug('response', response.status, response.url, response.headers, json);\r\n\r\n    return json as T;\r\n  }\r\n\r\n  // TODO handle blob, arraybuffer, other content types, etc.\r\n  const text = await response.text();\r\n  debug('response', response.status, response.url, response.headers, text);\r\n  return text as T;\r\n}\r\n\r\n/**\r\n * A subclass of `Promise` providing additional helper methods\r\n * for interacting with the SDK.\r\n */\r\nexport class APIPromise<T> extends Promise<T> {\r\n  private parsedPromise: Promise<T> | undefined;\r\n\r\n  constructor(\r\n    private responsePromise: Promise<APIResponseProps>,\r\n    private parseResponse: (props: APIResponseProps) => PromiseOrValue<T> = defaultParseResponse,\r\n  ) {\r\n    super((resolve) => {\r\n      // this is maybe a bit weird but this has to be a no-op to not implicitly\r\n      // parse the response body; instead .then, .catch, .finally are overridden\r\n      // to parse the response\r\n      resolve(null as any);\r\n    });\r\n  }\r\n\r\n  _thenUnwrap<U>(transform: (data: T) => U): APIPromise<U> {\r\n    return new APIPromise(this.responsePromise, async (props) => transform(await this.parseResponse(props)));\r\n  }\r\n\r\n  /**\r\n   * Gets the raw `Response` instance instead of parsing the response\r\n   * data.\r\n   *\r\n   * If you want to parse the response body but still get the `Response`\r\n   * instance, you can use {@link withResponse()}.\r\n   */\r\n  asResponse(): Promise<Response> {\r\n    return this.responsePromise.then((p) => p.response);\r\n  }\r\n  /**\r\n   * Gets the parsed response data and the raw `Response` instance.\r\n   *\r\n   * If you just want to get the raw `Response` instance without parsing it,\r\n   * you can use {@link asResponse()}.\r\n   */\r\n  async withResponse(): Promise<{ data: T; response: Response }> {\r\n    const [data, response] = await Promise.all([this.parse(), this.asResponse()]);\r\n    return { data, response };\r\n  }\r\n\r\n  private parse(): Promise<T> {\r\n    if (!this.parsedPromise) {\r\n      this.parsedPromise = this.responsePromise.then(this.parseResponse);\r\n    }\r\n    return this.parsedPromise;\r\n  }\r\n\r\n  override then<TResult1 = T, TResult2 = never>(\r\n    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,\r\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,\r\n  ): Promise<TResult1 | TResult2> {\r\n    return this.parse().then(onfulfilled, onrejected);\r\n  }\r\n\r\n  override catch<TResult = never>(\r\n    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,\r\n  ): Promise<T | TResult> {\r\n    return this.parse().catch(onrejected);\r\n  }\r\n\r\n  override finally(onfinally?: (() => void) | undefined | null): Promise<T> {\r\n    return this.parse().finally(onfinally);\r\n  }\r\n}\r\n\r\nexport abstract class APIClient {\r\n  baseURL: string;\r\n  maxRetries: number;\r\n  timeout: number;\r\n  httpAgent: Agent | undefined;\r\n\r\n  private fetch: Fetch;\r\n  protected idempotencyHeader?: string;\r\n\r\n  constructor({\r\n    baseURL,\r\n    maxRetries,\r\n    timeout = 600000, // 10 minutes\r\n    httpAgent,\r\n    fetch: overridenFetch,\r\n  }: {\r\n    baseURL: string;\r\n    maxRetries?: number | undefined;\r\n    timeout: number | undefined;\r\n    httpAgent: Agent | undefined;\r\n    fetch: Fetch | undefined;\r\n  }) {\r\n    this.baseURL = baseURL;\r\n    this.maxRetries = validatePositiveInteger('maxRetries', maxRetries ?? MAX_RETRIES);\r\n    this.timeout = validatePositiveInteger('timeout', timeout);\r\n    this.httpAgent = httpAgent;\r\n\r\n    this.fetch = overridenFetch ?? fetch;\r\n  }\r\n\r\n  protected authHeaders(opts: FinalRequestOptions): Headers {\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * Override this to add your own default headers, for example:\r\n   *\r\n   *  {\r\n   *    ...super.defaultHeaders(),\r\n   *    Authorization: 'Bearer 123',\r\n   *  }\r\n   */\r\n  protected defaultHeaders(opts: FinalRequestOptions): Headers {\r\n    return {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n      'User-Agent': this.getUserAgent(),\r\n      ...getPlatformHeaders(),\r\n      ...this.authHeaders(opts),\r\n    };\r\n  }\r\n\r\n  protected abstract defaultQuery(): DefaultQuery | undefined;\r\n\r\n  /**\r\n   * Override this to add your own headers validation:\r\n   */\r\n  protected validateHeaders(headers: Headers, customHeaders: Headers) {}\r\n\r\n  protected defaultIdempotencyKey(): string {\r\n    return `stainless-node-retry-${uuid4()}`;\r\n  }\r\n\r\n  get<Req extends {}, Rsp>(path: string, opts?: PromiseOrValue<RequestOptions<Req>>): APIPromise<Rsp> {\r\n    return this.methodRequest('get', path, opts);\r\n  }\r\n\r\n  post<Req extends {}, Rsp>(path: string, opts?: PromiseOrValue<RequestOptions<Req>>): APIPromise<Rsp> {\r\n    return this.methodRequest('post', path, opts);\r\n  }\r\n\r\n  patch<Req extends {}, Rsp>(path: string, opts?: PromiseOrValue<RequestOptions<Req>>): APIPromise<Rsp> {\r\n    return this.methodRequest('patch', path, opts);\r\n  }\r\n\r\n  put<Req extends {}, Rsp>(path: string, opts?: PromiseOrValue<RequestOptions<Req>>): APIPromise<Rsp> {\r\n    return this.methodRequest('put', path, opts);\r\n  }\r\n\r\n  delete<Req extends {}, Rsp>(path: string, opts?: PromiseOrValue<RequestOptions<Req>>): APIPromise<Rsp> {\r\n    return this.methodRequest('delete', path, opts);\r\n  }\r\n\r\n  private methodRequest<Req extends {}, Rsp>(\r\n    method: HTTPMethod,\r\n    path: string,\r\n    opts?: PromiseOrValue<RequestOptions<Req>>,\r\n  ): APIPromise<Rsp> {\r\n    return this.request(Promise.resolve(opts).then((opts) => ({ method, path, ...opts })));\r\n  }\r\n\r\n  getAPIList<Item, PageClass extends AbstractPage<Item> = AbstractPage<Item>>(\r\n    path: string,\r\n    Page: new (...args: any[]) => PageClass,\r\n    opts?: RequestOptions<any>,\r\n  ): PagePromise<PageClass, Item> {\r\n    return this.requestAPIList(Page, { method: 'get', path, ...opts });\r\n  }\r\n\r\n  private calculateContentLength(body: unknown): string | null {\r\n    if (typeof body === 'string') {\r\n      if (typeof Buffer !== 'undefined') {\r\n        return Buffer.byteLength(body, 'utf8').toString();\r\n      }\r\n\r\n      if (typeof TextEncoder !== 'undefined') {\r\n        const encoder = new TextEncoder();\r\n        const encoded = encoder.encode(body);\r\n        return encoded.length.toString();\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  buildRequest<Req extends {}>(\r\n    options: FinalRequestOptions<Req>,\r\n  ): { req: RequestInit; url: string; timeout: number } {\r\n    const { method, path, query, headers: headers = {} } = options;\r\n\r\n    const body =\r\n      isMultipartBody(options.body) ? options.body.body\r\n      : options.body ? JSON.stringify(options.body, null, 2)\r\n      : null;\r\n    const contentLength = this.calculateContentLength(body);\r\n\r\n    const url = this.buildURL(path!, query);\r\n    if ('timeout' in options) validatePositiveInteger('timeout', options.timeout);\r\n    const timeout = options.timeout ?? this.timeout;\r\n    const httpAgent = options.httpAgent ?? this.httpAgent ?? getDefaultAgent(url);\r\n    const minAgentTimeout = timeout + 1000;\r\n    if (\r\n      typeof (httpAgent as any)?.options?.timeout === 'number' &&\r\n      minAgentTimeout > ((httpAgent as any).options.timeout ?? 0)\r\n    ) {\r\n      // Allow any given request to bump our agent active socket timeout.\r\n      // This may seem strange, but leaking active sockets should be rare and not particularly problematic,\r\n      // and without mutating agent we would need to create more of them.\r\n      // This tradeoff optimizes for performance.\r\n      (httpAgent as any).options.timeout = minAgentTimeout;\r\n    }\r\n\r\n    if (this.idempotencyHeader && method !== 'get') {\r\n      if (!options.idempotencyKey) options.idempotencyKey = this.defaultIdempotencyKey();\r\n      headers[this.idempotencyHeader] = options.idempotencyKey;\r\n    }\r\n\r\n    const reqHeaders: Record<string, string> = {\r\n      ...(contentLength && { 'Content-Length': contentLength }),\r\n      ...this.defaultHeaders(options),\r\n      ...headers,\r\n    };\r\n    // let builtin fetch set the Content-Type for multipart bodies\r\n    if (isMultipartBody(options.body) && !fetchIsPolyfilled) {\r\n      delete reqHeaders['Content-Type'];\r\n    }\r\n\r\n    // Strip any headers being explicitly omitted with null\r\n    Object.keys(reqHeaders).forEach((key) => reqHeaders[key] === null && delete reqHeaders[key]);\r\n\r\n    const req: RequestInit = {\r\n      method,\r\n      ...(body && { body: body as any }),\r\n      headers: reqHeaders,\r\n      ...(httpAgent && { agent: httpAgent }),\r\n      // @ts-ignore node-fetch uses a custom AbortSignal type that is\r\n      // not compatible with standard web types\r\n      signal: options.signal ?? null,\r\n    };\r\n\r\n    this.validateHeaders(reqHeaders, headers);\r\n\r\n    return { req, url, timeout };\r\n  }\r\n\r\n  /**\r\n   * Used as a callback for mutating the given `RequestInit` object.\r\n   *\r\n   * This is useful for cases where you want to add certain headers based off of\r\n   * the request properties, e.g. `method` or `url`.\r\n   */\r\n  protected async prepareRequest(\r\n    request: RequestInit,\r\n    { url, options }: { url: string; options: FinalRequestOptions },\r\n  ): Promise<void> {}\r\n\r\n  protected parseHeaders(headers: HeadersInit | null | undefined): Record<string, string> {\r\n    return (\r\n      !headers ? {}\r\n      : Symbol.iterator in headers ? Object.fromEntries(Array.from(headers).map((header) => [...header]))\r\n      : { ...headers }\r\n    );\r\n  }\r\n\r\n  protected makeStatusError(\r\n    status: number | undefined,\r\n    error: Object | undefined,\r\n    message: string | undefined,\r\n    headers: Headers | undefined,\r\n  ) {\r\n    return APIError.generate(status, error, message, headers);\r\n  }\r\n\r\n  request<Req extends {}, Rsp>(\r\n    options: PromiseOrValue<FinalRequestOptions<Req>>,\r\n    remainingRetries: number | null = null,\r\n  ): APIPromise<Rsp> {\r\n    return new APIPromise(this.makeRequest(options, remainingRetries));\r\n  }\r\n\r\n  private async makeRequest(\r\n    optionsInput: PromiseOrValue<FinalRequestOptions>,\r\n    retriesRemaining: number | null,\r\n  ): Promise<APIResponseProps> {\r\n    const options = await optionsInput;\r\n    if (retriesRemaining == null) {\r\n      retriesRemaining = options.maxRetries ?? this.maxRetries;\r\n    }\r\n\r\n    const { req, url, timeout } = this.buildRequest(options);\r\n\r\n    await this.prepareRequest(req, { url, options });\r\n\r\n    debug('request', url, options, req.headers);\r\n\r\n    if (options.signal?.aborted) {\r\n      throw new APIUserAbortError();\r\n    }\r\n\r\n    const controller = new AbortController();\r\n    const response = await this.fetchWithTimeout(url, req, timeout, controller).catch(castToError);\r\n\r\n    if (response instanceof Error) {\r\n      if (options.signal?.aborted) {\r\n        throw new APIUserAbortError();\r\n      }\r\n      if (retriesRemaining) {\r\n        return this.retryRequest(options, retriesRemaining);\r\n      }\r\n      if (response.name === 'AbortError') {\r\n        throw new APIConnectionTimeoutError();\r\n      }\r\n      throw new APIConnectionError({ cause: response });\r\n    }\r\n\r\n    const responseHeaders = createResponseHeaders(response.headers);\r\n\r\n    if (!response.ok) {\r\n      if (retriesRemaining && this.shouldRetry(response)) {\r\n        return this.retryRequest(options, retriesRemaining, responseHeaders);\r\n      }\r\n\r\n      const errText = await response.text().catch(() => 'Unknown');\r\n      const errJSON = safeJSON(errText);\r\n      const errMessage = errJSON ? undefined : errText;\r\n\r\n      debug('response', response.status, url, responseHeaders, errMessage);\r\n\r\n      const err = this.makeStatusError(response.status, errJSON, errMessage, responseHeaders);\r\n      throw err;\r\n    }\r\n\r\n    return { response, options, controller };\r\n  }\r\n\r\n  requestAPIList<Item = unknown, PageClass extends AbstractPage<Item> = AbstractPage<Item>>(\r\n    Page: new (...args: ConstructorParameters<typeof AbstractPage>) => PageClass,\r\n    options: FinalRequestOptions,\r\n  ): PagePromise<PageClass, Item> {\r\n    const request = this.makeRequest(options, null);\r\n    return new PagePromise<PageClass, Item>(this, request, Page);\r\n  }\r\n\r\n  buildURL<Req>(path: string, query: Req | undefined): string {\r\n    const url =\r\n      isAbsoluteURL(path) ?\r\n        new URL(path)\r\n      : new URL(this.baseURL + (this.baseURL.endsWith('/') && path.startsWith('/') ? path.slice(1) : path));\r\n\r\n    const defaultQuery = this.defaultQuery();\r\n    if (!isEmptyObj(defaultQuery)) {\r\n      query = { ...defaultQuery, ...query } as Req;\r\n    }\r\n\r\n    if (query) {\r\n      url.search = this.stringifyQuery(query);\r\n    }\r\n\r\n    return url.toString();\r\n  }\r\n\r\n  protected stringifyQuery(query: Record<string, unknown>): string {\r\n    return Object.entries(query)\r\n      .filter(([_, value]) => typeof value !== 'undefined')\r\n      .map(([key, value]) => {\r\n        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\r\n          return `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\r\n        }\r\n        if (value === null) {\r\n          return `${encodeURIComponent(key)}=`;\r\n        }\r\n        throw new Error(\r\n          `Cannot stringify type ${typeof value}; Expected string, number, boolean, or null. If you need to pass nested query parameters, you can manually encode them, e.g. { query: { 'foo[key1]': value1, 'foo[key2]': value2 } }, and please open a GitHub issue requesting better support for your use case.`,\r\n        );\r\n      })\r\n      .join('&');\r\n  }\r\n\r\n  async fetchWithTimeout(\r\n    url: RequestInfo,\r\n    init: RequestInit | undefined,\r\n    ms: number,\r\n    controller: AbortController,\r\n  ): Promise<Response> {\r\n    const { signal, ...options } = init || {};\r\n    if (signal) signal.addEventListener('abort', () => controller.abort());\r\n\r\n    const timeout = setTimeout(() => controller.abort(), ms);\r\n\r\n    return this.getRequestClient()\r\n      .fetch(url, { signal: controller.signal as any, ...options })\r\n      .finally(() => {\r\n        clearTimeout(timeout);\r\n      });\r\n  }\r\n\r\n  protected getRequestClient(): RequestClient {\r\n    return { fetch: this.fetch };\r\n  }\r\n\r\n  private shouldRetry(response: Response): boolean {\r\n    // Note this is not a standard header.\r\n    const shouldRetryHeader = response.headers.get('x-should-retry');\r\n\r\n    // If the server explicitly says whether or not to retry, obey.\r\n    if (shouldRetryHeader === 'true') return true;\r\n    if (shouldRetryHeader === 'false') return false;\r\n\r\n    // Retry on lock timeouts.\r\n    if (response.status === 409) return true;\r\n\r\n    // Retry on rate limits.\r\n    if (response.status === 429) return true;\r\n\r\n    // Retry internal errors.\r\n    if (response.status >= 500) return true;\r\n\r\n    return false;\r\n  }\r\n\r\n  private async retryRequest(\r\n    options: FinalRequestOptions,\r\n    retriesRemaining: number,\r\n    responseHeaders?: Headers | undefined,\r\n  ): Promise<APIResponseProps> {\r\n    retriesRemaining -= 1;\r\n\r\n    // About the Retry-After header: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After\r\n    //\r\n    // TODO: we may want to handle the case where the header is using the http-date syntax: \"Retry-After: <http-date>\".\r\n    // See https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After#syntax for details.\r\n    const retryAfter = parseInt(responseHeaders?.['retry-after'] || '');\r\n\r\n    const maxRetries = options.maxRetries ?? this.maxRetries;\r\n    const timeout = this.calculateRetryTimeoutSeconds(retriesRemaining, retryAfter, maxRetries) * 1000;\r\n    await sleep(timeout);\r\n\r\n    return this.makeRequest(options, retriesRemaining);\r\n  }\r\n\r\n  private calculateRetryTimeoutSeconds(\r\n    retriesRemaining: number,\r\n    retryAfter: number,\r\n    maxRetries: number,\r\n  ): number {\r\n    const initialRetryDelay = 0.5;\r\n    const maxRetryDelay = 2;\r\n\r\n    // If the API asks us to wait a certain amount of time (and it's a reasonable amount),\r\n    // just do what it says.\r\n    if (Number.isInteger(retryAfter) && retryAfter <= 60) {\r\n      return retryAfter;\r\n    }\r\n\r\n    const numRetries = maxRetries - retriesRemaining;\r\n\r\n    // Apply exponential backoff, but not more than the max.\r\n    const sleepSeconds = Math.min(initialRetryDelay * Math.pow(numRetries - 1, 2), maxRetryDelay);\r\n\r\n    // Apply some jitter, plus-or-minus half a second.\r\n    const jitter = Math.random() - 0.5;\r\n\r\n    return sleepSeconds + jitter;\r\n  }\r\n\r\n  private getUserAgent(): string {\r\n    return `${this.constructor.name}/JS ${VERSION}`;\r\n  }\r\n}\r\n\r\nexport class APIResource {\r\n  protected client: APIClient;\r\n  constructor(client: APIClient) {\r\n    this.client = client;\r\n\r\n    this.get = client.get.bind(client);\r\n    this.post = client.post.bind(client);\r\n    this.patch = client.patch.bind(client);\r\n    this.put = client.put.bind(client);\r\n    this.delete = client.delete.bind(client);\r\n    this.getAPIList = client.getAPIList.bind(client);\r\n  }\r\n\r\n  protected get: APIClient['get'];\r\n  protected post: APIClient['post'];\r\n  protected patch: APIClient['patch'];\r\n  protected put: APIClient['put'];\r\n  protected delete: APIClient['delete'];\r\n  protected getAPIList: APIClient['getAPIList'];\r\n}\r\n\r\nexport type PageInfo = { url: URL } | { params: Record<string, unknown> | null };\r\n\r\nexport abstract class AbstractPage<Item> implements AsyncIterable<Item> {\r\n  #client: APIClient;\r\n  protected options: FinalRequestOptions;\r\n\r\n  protected response: Response;\r\n  protected body: unknown;\r\n\r\n  constructor(client: APIClient, response: Response, body: unknown, options: FinalRequestOptions) {\r\n    this.#client = client;\r\n    this.options = options;\r\n    this.response = response;\r\n    this.body = body;\r\n  }\r\n\r\n  /**\r\n   * @deprecated Use nextPageInfo instead\r\n   */\r\n  abstract nextPageParams(): Partial<Record<string, unknown>> | null;\r\n  abstract nextPageInfo(): PageInfo | null;\r\n\r\n  abstract getPaginatedItems(): Item[];\r\n\r\n  hasNextPage(): boolean {\r\n    const items = this.getPaginatedItems();\r\n    if (!items.length) return false;\r\n    return this.nextPageInfo() != null;\r\n  }\r\n\r\n  async getNextPage(): Promise<this> {\r\n    const nextInfo = this.nextPageInfo();\r\n    if (!nextInfo) {\r\n      throw new Error(\r\n        'No next page expected; please check `.hasNextPage()` before calling `.getNextPage()`.',\r\n      );\r\n    }\r\n    const nextOptions = { ...this.options };\r\n    if ('params' in nextInfo) {\r\n      nextOptions.query = { ...nextOptions.query, ...nextInfo.params };\r\n    } else if ('url' in nextInfo) {\r\n      const params = [...Object.entries(nextOptions.query || {}), ...nextInfo.url.searchParams.entries()];\r\n      for (const [key, value] of params) {\r\n        nextInfo.url.searchParams.set(key, value);\r\n      }\r\n      nextOptions.query = undefined;\r\n      nextOptions.path = nextInfo.url.toString();\r\n    }\r\n    return await this.#client.requestAPIList(this.constructor as any, nextOptions);\r\n  }\r\n\r\n  async *iterPages() {\r\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n    let page: AbstractPage<Item> = this;\r\n    yield page;\r\n    while (page.hasNextPage()) {\r\n      page = await page.getNextPage();\r\n      yield page;\r\n    }\r\n  }\r\n\r\n  async *[Symbol.asyncIterator]() {\r\n    for await (const page of this.iterPages()) {\r\n      for (const item of page.getPaginatedItems()) {\r\n        yield item;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * This subclass of Promise will resolve to an instantiated Page once the request completes.\r\n *\r\n * It also implements AsyncIterable to allow auto-paginating iteration on an unawaited list call, eg:\r\n *\r\n *    for await (const item of client.items.list()) {\r\n *      console.log(item)\r\n *    }\r\n */\r\nexport class PagePromise<\r\n    PageClass extends AbstractPage<Item>,\r\n    Item = ReturnType<PageClass['getPaginatedItems']>[number],\r\n  >\r\n  extends APIPromise<PageClass>\r\n  implements AsyncIterable<Item>\r\n{\r\n  constructor(\r\n    client: APIClient,\r\n    request: Promise<APIResponseProps>,\r\n    Page: new (...args: ConstructorParameters<typeof AbstractPage>) => PageClass,\r\n  ) {\r\n    super(\r\n      request,\r\n      async (props) => new Page(client, props.response, await defaultParseResponse(props), props.options),\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Allow auto-paginating iteration on an unawaited list call, eg:\r\n   *\r\n   *    for await (const item of client.items.list()) {\r\n   *      console.log(item)\r\n   *    }\r\n   */\r\n  async *[Symbol.asyncIterator]() {\r\n    const page = await this;\r\n    for await (const item of page) {\r\n      yield item;\r\n    }\r\n  }\r\n}\r\n\r\nexport const createResponseHeaders = (\r\n  headers: Awaited<ReturnType<Fetch>>['headers'],\r\n): Record<string, string> => {\r\n  return new Proxy(\r\n    Object.fromEntries(\r\n      // @ts-ignore\r\n      headers.entries(),\r\n    ),\r\n    {\r\n      get(target, name) {\r\n        const key = name.toString();\r\n        return target[key.toLowerCase()] || target[key];\r\n      },\r\n    },\r\n  );\r\n};\r\n\r\ntype HTTPMethod = 'get' | 'post' | 'put' | 'patch' | 'delete';\r\n\r\nexport type RequestClient = { fetch: Fetch };\r\nexport type Headers = Record<string, string | null | undefined>;\r\nexport type DefaultQuery = Record<string, string | undefined>;\r\nexport type KeysEnum<T> = { [P in keyof Required<T>]: true };\r\n\r\nexport type RequestOptions<Req extends {} = Record<string, unknown> | Readable> = {\r\n  method?: HTTPMethod;\r\n  path?: string;\r\n  query?: Req | undefined;\r\n  body?: Req | undefined;\r\n  headers?: Headers | undefined;\r\n\r\n  maxRetries?: number;\r\n  stream?: boolean | undefined;\r\n  timeout?: number;\r\n  httpAgent?: Agent;\r\n  signal?: AbortSignal | undefined | null;\r\n  idempotencyKey?: string;\r\n};\r\n\r\n// This is required so that we can determine if a given object matches the RequestOptions\r\n// type at runtime. While this requires duplication, it is enforced by the TypeScript\r\n// compiler such that any missing / extraneous keys will cause an error.\r\nconst requestOptionsKeys: KeysEnum<RequestOptions> = {\r\n  method: true,\r\n  path: true,\r\n  query: true,\r\n  body: true,\r\n  headers: true,\r\n\r\n  maxRetries: true,\r\n  stream: true,\r\n  timeout: true,\r\n  httpAgent: true,\r\n  signal: true,\r\n  idempotencyKey: true,\r\n};\r\n\r\nexport const isRequestOptions = (obj: unknown): obj is RequestOptions => {\r\n  return (\r\n    typeof obj === 'object' &&\r\n    obj !== null &&\r\n    !isEmptyObj(obj) &&\r\n    Object.keys(obj).every((k) => hasOwn(requestOptionsKeys, k))\r\n  );\r\n};\r\n\r\nexport type FinalRequestOptions<Req extends {} = Record<string, unknown> | Readable> = RequestOptions<Req> & {\r\n  method: HTTPMethod;\r\n  path: string;\r\n};\r\n\r\ndeclare const Deno: any;\r\ndeclare const EdgeRuntime: any;\r\ntype Arch = 'x32' | 'x64' | 'arm' | 'arm64' | `other:${string}` | 'unknown';\r\ntype PlatformName =\r\n  | 'MacOS'\r\n  | 'Linux'\r\n  | 'Windows'\r\n  | 'FreeBSD'\r\n  | 'OpenBSD'\r\n  | 'iOS'\r\n  | 'Android'\r\n  | `Other:${string}`\r\n  | 'Unknown';\r\ntype Browser = 'ie' | 'edge' | 'chrome' | 'firefox' | 'safari';\r\ntype PlatformProperties = {\r\n  'X-Stainless-Lang': 'js';\r\n  'X-Stainless-Package-Version': string;\r\n  'X-Stainless-OS': PlatformName;\r\n  'X-Stainless-Arch': Arch;\r\n  'X-Stainless-Runtime': 'node' | 'deno' | 'edge' | `browser:${Browser}` | 'unknown';\r\n  'X-Stainless-Runtime-Version': string;\r\n};\r\nconst getPlatformProperties = (): PlatformProperties => {\r\n  if (typeof Deno !== 'undefined' && Deno.build != null) {\r\n    return {\r\n      'X-Stainless-Lang': 'js',\r\n      'X-Stainless-Package-Version': VERSION,\r\n      'X-Stainless-OS': normalizePlatform(Deno.build.os),\r\n      'X-Stainless-Arch': normalizeArch(Deno.build.arch),\r\n      'X-Stainless-Runtime': 'deno',\r\n      'X-Stainless-Runtime-Version': Deno.version,\r\n    };\r\n  }\r\n  if (typeof EdgeRuntime !== 'undefined') {\r\n    return {\r\n      'X-Stainless-Lang': 'js',\r\n      'X-Stainless-Package-Version': VERSION,\r\n      'X-Stainless-OS': 'Unknown',\r\n      'X-Stainless-Arch': `other:${EdgeRuntime}`,\r\n      'X-Stainless-Runtime': 'edge',\r\n      'X-Stainless-Runtime-Version': process.version,\r\n    };\r\n  }\r\n  // Check if Node.js\r\n  if (Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]') {\r\n    return {\r\n      'X-Stainless-Lang': 'js',\r\n      'X-Stainless-Package-Version': VERSION,\r\n      'X-Stainless-OS': normalizePlatform(process.platform),\r\n      'X-Stainless-Arch': normalizeArch(process.arch),\r\n      'X-Stainless-Runtime': 'node',\r\n      'X-Stainless-Runtime-Version': process.version,\r\n    };\r\n  }\r\n\r\n  const browserInfo = getBrowserInfo();\r\n  if (browserInfo) {\r\n    return {\r\n      'X-Stainless-Lang': 'js',\r\n      'X-Stainless-Package-Version': VERSION,\r\n      'X-Stainless-OS': 'Unknown',\r\n      'X-Stainless-Arch': 'unknown',\r\n      'X-Stainless-Runtime': `browser:${browserInfo.browser}`,\r\n      'X-Stainless-Runtime-Version': browserInfo.version,\r\n    };\r\n  }\r\n\r\n  // TODO add support for Cloudflare workers, etc.\r\n  return {\r\n    'X-Stainless-Lang': 'js',\r\n    'X-Stainless-Package-Version': VERSION,\r\n    'X-Stainless-OS': 'Unknown',\r\n    'X-Stainless-Arch': 'unknown',\r\n    'X-Stainless-Runtime': 'unknown',\r\n    'X-Stainless-Runtime-Version': 'unknown',\r\n  };\r\n};\r\n\r\ntype BrowserInfo = {\r\n  browser: Browser;\r\n  version: string;\r\n};\r\n\r\ndeclare const navigator: { userAgent: string } | undefined;\r\n\r\n// Note: modified from https://github.com/JS-DevTools/host-environment/blob/b1ab79ecde37db5d6e163c050e54fe7d287d7c92/src/isomorphic.browser.ts\r\nfunction getBrowserInfo(): BrowserInfo | null {\r\n  if (typeof navigator === 'undefined' || !navigator) {\r\n    return null;\r\n  }\r\n\r\n  // NOTE: The order matters here!\r\n  const browserPatterns = [\r\n    { key: 'edge' as const, pattern: /Edge(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\r\n    { key: 'ie' as const, pattern: /MSIE(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\r\n    { key: 'ie' as const, pattern: /Trident(?:.*rv\\:(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\r\n    { key: 'chrome' as const, pattern: /Chrome(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\r\n    { key: 'firefox' as const, pattern: /Firefox(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\r\n    { key: 'safari' as const, pattern: /(?:Version\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?(?:\\W+Mobile\\S*)?\\W+Safari/ },\r\n  ];\r\n\r\n  // Find the FIRST matching browser\r\n  for (const { key, pattern } of browserPatterns) {\r\n    const match = pattern.exec(navigator.userAgent);\r\n    if (match) {\r\n      const major = match[1] || 0;\r\n      const minor = match[2] || 0;\r\n      const patch = match[3] || 0;\r\n\r\n      return { browser: key, version: `${major}.${minor}.${patch}` };\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nconst normalizeArch = (arch: string): Arch => {\r\n  // Node docs:\r\n  // - https://nodejs.org/api/process.html#processarch\r\n  // Deno docs:\r\n  // - https://doc.deno.land/deno/stable/~/Deno.build\r\n  if (arch === 'x32') return 'x32';\r\n  if (arch === 'x86_64' || arch === 'x64') return 'x64';\r\n  if (arch === 'arm') return 'arm';\r\n  if (arch === 'aarch64' || arch === 'arm64') return 'arm64';\r\n  if (arch) return `other:${arch}`;\r\n  return 'unknown';\r\n};\r\n\r\nconst normalizePlatform = (platform: string): PlatformName => {\r\n  // Node platforms:\r\n  // - https://nodejs.org/api/process.html#processplatform\r\n  // Deno platforms:\r\n  // - https://doc.deno.land/deno/stable/~/Deno.build\r\n  // - https://github.com/denoland/deno/issues/14799\r\n\r\n  platform = platform.toLowerCase();\r\n\r\n  // NOTE: this iOS check is untested and may not work\r\n  // Node does not work natively on IOS, there is a fork at\r\n  // https://github.com/nodejs-mobile/nodejs-mobile\r\n  // however it is unknown at the time of writing how to detect if it is running\r\n  if (platform.includes('ios')) return 'iOS';\r\n  if (platform === 'android') return 'Android';\r\n  if (platform === 'darwin') return 'MacOS';\r\n  if (platform === 'win32') return 'Windows';\r\n  if (platform === 'freebsd') return 'FreeBSD';\r\n  if (platform === 'openbsd') return 'OpenBSD';\r\n  if (platform === 'linux') return 'Linux';\r\n  if (platform) return `Other:${platform}`;\r\n  return 'Unknown';\r\n};\r\n\r\nlet _platformHeaders: PlatformProperties;\r\nconst getPlatformHeaders = () => {\r\n  return (_platformHeaders ??= getPlatformProperties());\r\n};\r\n\r\nexport const safeJSON = (text: string) => {\r\n  try {\r\n    return JSON.parse(text);\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\n// https://stackoverflow.com/a/19709846\r\nconst startsWithSchemeRegexp = new RegExp('^(?:[a-z]+:)?//', 'i');\r\nconst isAbsoluteURL = (url: string): boolean => {\r\n  return startsWithSchemeRegexp.test(url);\r\n};\r\n\r\nconst sleep = (ms: number) => new Promise((resolve) => setTimeout(resolve, ms));\r\n\r\nconst validatePositiveInteger = (name: string, n: unknown): number => {\r\n  if (typeof n !== 'number' || !Number.isInteger(n)) {\r\n    throw new Error(`${name} must be an integer`);\r\n  }\r\n  if (n < 0) {\r\n    throw new Error(`${name} must be a positive integer`);\r\n  }\r\n  return n;\r\n};\r\n\r\nexport const castToError = (err: any): Error => {\r\n  if (err instanceof Error) return err;\r\n  return new Error(err);\r\n};\r\n\r\nexport const ensurePresent = <T>(value: T | null | undefined): T => {\r\n  if (value == null) throw new Error(`Expected a value to be given but received ${value} instead.`);\r\n  return value;\r\n};\r\n\r\n/**\r\n * Read an environment variable.\r\n *\r\n * Will return undefined if the environment variable doesn't exist or cannot be accessed.\r\n */\r\nexport const readEnv = (env: string): string | undefined => {\r\n  if (typeof process !== 'undefined') {\r\n    return process.env?.[env] ?? undefined;\r\n  }\r\n  if (typeof Deno !== 'undefined') {\r\n    return Deno.env?.get?.(env);\r\n  }\r\n  return undefined;\r\n};\r\n\r\nexport const coerceInteger = (value: unknown): number => {\r\n  if (typeof value === 'number') return Math.round(value);\r\n  if (typeof value === 'string') return parseInt(value, 10);\r\n\r\n  throw new Error(`Could not coerce ${value} (type: ${typeof value}) into a number`);\r\n};\r\n\r\nexport const coerceFloat = (value: unknown): number => {\r\n  if (typeof value === 'number') return value;\r\n  if (typeof value === 'string') return parseFloat(value);\r\n\r\n  throw new Error(`Could not coerce ${value} (type: ${typeof value}) into a number`);\r\n};\r\n\r\nexport const coerceBoolean = (value: unknown): boolean => {\r\n  if (typeof value === 'boolean') return value;\r\n  if (typeof value === 'string') return value === 'true';\r\n  return Boolean(value);\r\n};\r\n\r\nexport const maybeCoerceInteger = (value: unknown): number | undefined => {\r\n  if (value === undefined) {\r\n    return undefined;\r\n  }\r\n  return coerceInteger(value);\r\n};\r\n\r\nexport const maybeCoerceFloat = (value: unknown): number | undefined => {\r\n  if (value === undefined) {\r\n    return undefined;\r\n  }\r\n  return coerceFloat(value);\r\n};\r\n\r\nexport const maybeCoerceBoolean = (value: unknown): boolean | undefined => {\r\n  if (value === undefined) {\r\n    return undefined;\r\n  }\r\n  return coerceBoolean(value);\r\n};\r\n\r\n// https://stackoverflow.com/a/34491287\r\nexport function isEmptyObj(obj: Object | null | undefined): boolean {\r\n  if (!obj) return true;\r\n  for (const _k in obj) return false;\r\n  return true;\r\n}\r\n\r\n// https://eslint.org/docs/latest/rules/no-prototype-builtins\r\nexport function hasOwn(obj: Object, key: string): boolean {\r\n  return Object.prototype.hasOwnProperty.call(obj, key);\r\n}\r\n\r\nexport function debug(action: string, ...args: any[]) {\r\n  if (typeof process !== 'undefined' && process.env['DEBUG'] === 'true') {\r\n    console.log(`OpenAI:DEBUG:${action}`, ...args);\r\n  }\r\n}\r\n\r\n/**\r\n * https://stackoverflow.com/a/2117523\r\n */\r\nconst uuid4 = () => {\r\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\r\n    const r = (Math.random() * 16) | 0;\r\n    const v = c === 'x' ? r : (r & 0x3) | 0x8;\r\n    return v.toString(16);\r\n  });\r\n};\r\n\r\nexport const isRunningInBrowser = () => {\r\n  return (\r\n    // @ts-ignore\r\n    typeof window !== 'undefined' &&\r\n    // @ts-ignore\r\n    typeof window.document !== 'undefined' &&\r\n    // @ts-ignore\r\n    typeof navigator !== 'undefined'\r\n  );\r\n};\r\n\r\nexport interface HeadersProtocol {\r\n  get: (header: string) => string | null | undefined;\r\n}\r\nexport type HeadersLike = Record<string, string | string[] | undefined> | HeadersProtocol;\r\n\r\nexport const isHeadersProtocol = (headers: any): headers is HeadersProtocol => {\r\n  return typeof headers?.get === 'function';\r\n};\r\n\r\nexport const getHeader = (headers: HeadersLike, key: string): string | null | undefined => {\r\n  const lowerKey = key.toLowerCase();\r\n  if (isHeadersProtocol(headers)) return headers.get(key) || headers.get(lowerKey);\r\n  const value = headers[key] || headers[lowerKey];\r\n  if (Array.isArray(value)) {\r\n    if (value.length <= 1) return value[0];\r\n    console.warn(`Received ${value.length} entries for the ${key} header, using the first entry.`);\r\n    return value[0];\r\n  }\r\n  return value;\r\n};\r\n\r\n/**\r\n * Encodes a string to Base64 format.\r\n */\r\nexport const toBase64 = (str: string | null | undefined): string => {\r\n  if (!str) return '';\r\n  if (typeof Buffer !== 'undefined') {\r\n    return Buffer.from(str).toString('base64');\r\n  }\r\n\r\n  if (typeof btoa !== 'undefined') {\r\n    return btoa(str);\r\n  }\r\n\r\n  throw new Error('Cannot generate b64 string; Expected `Buffer` or `btoa` to be defined');\r\n};\r\n", "// File generated from our OpenAPI spec by Stainless.\r\n\r\nimport { AbstractPage, Response, APIClient, FinalRequestOptions, PageInfo } from './core';\r\n\r\nexport interface PageResponse<Item> {\r\n  data: Array<Item>;\r\n\r\n  object: string;\r\n}\r\n\r\n/**\r\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\r\n */\r\nexport class Page<Item> extends AbstractPage<Item> implements PageResponse<Item> {\r\n  object: string;\r\n\r\n  data: Array<Item>;\r\n\r\n  constructor(client: APIClient, response: Response, body: PageResponse<Item>, options: FinalRequestOptions) {\r\n    super(client, response, body, options);\r\n\r\n    this.object = body.object;\r\n    this.data = body.data;\r\n  }\r\n\r\n  getPaginatedItems(): Item[] {\r\n    return this.data;\r\n  }\r\n\r\n  // @deprecated Please use `nextPageInfo()` instead\r\n  /**\r\n   * This page represents a response that isn't actually paginated at the API level\r\n   * so there will never be any next page params.\r\n   */\r\n  nextPageParams(): null {\r\n    return null;\r\n  }\r\n\r\n  nextPageInfo(): null {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport interface CursorPageResponse<Item> {\r\n  data: Array<Item>;\r\n}\r\n\r\nexport interface CursorPageParams {\r\n  /**\r\n   * Identifier for the last job from the previous pagination request.\r\n   */\r\n  after?: string;\r\n\r\n  /**\r\n   * Number of fine-tuning jobs to retrieve.\r\n   */\r\n  limit?: number;\r\n}\r\n\r\nexport class CursorPage<Item extends { id: string }>\r\n  extends AbstractPage<Item>\r\n  implements CursorPageResponse<Item>\r\n{\r\n  data: Array<Item>;\r\n\r\n  constructor(\r\n    client: APIClient,\r\n    response: Response,\r\n    body: CursorPageResponse<Item>,\r\n    options: FinalRequestOptions,\r\n  ) {\r\n    super(client, response, body, options);\r\n\r\n    this.data = body.data;\r\n  }\r\n\r\n  getPaginatedItems(): Item[] {\r\n    return this.data;\r\n  }\r\n\r\n  // @deprecated Please use `nextPageInfo()` instead\r\n  nextPageParams(): Partial<CursorPageParams> | null {\r\n    const info = this.nextPageInfo();\r\n    if (!info) return null;\r\n    if ('params' in info) return info.params;\r\n    const params = Object.fromEntries(info.url.searchParams);\r\n    if (!Object.keys(params).length) return null;\r\n    return params;\r\n  }\r\n\r\n  nextPageInfo(): PageInfo | null {\r\n    if (!this.data?.length) {\r\n      return null;\r\n    }\r\n\r\n    const next = this.data[this.data.length - 1]?.id;\r\n    if (!next) return null;\r\n    return { params: { after: next } };\r\n  }\r\n}\r\n", "// File generated from our OpenAPI spec by Stainless.\r\n\r\nimport type { OpenAI } from './index';\r\n\r\nexport class APIResource {\r\n  protected client: OpenAI;\r\n  constructor(client: OpenAI) {\r\n    this.client = client;\r\n\r\n    this.get = client.get.bind(client);\r\n    this.post = client.post.bind(client);\r\n    this.patch = client.patch.bind(client);\r\n    this.put = client.put.bind(client);\r\n    this.delete = client.delete.bind(client);\r\n    this.getAPIList = client.getAPIList.bind(client);\r\n  }\r\n\r\n  protected get: OpenAI['get'];\r\n  protected post: OpenAI['post'];\r\n  protected patch: OpenAI['patch'];\r\n  protected put: OpenAI['put'];\r\n  protected delete: OpenAI['delete'];\r\n  protected getAPIList: OpenAI['getAPIList'];\r\n}\r\n", "// File generated from our OpenAPI spec by Stainless.\r\n\r\nimport * as Core from '../../core';\r\nimport { APIResource } from '../../resource';\r\nimport * as API from './index';\r\nimport { type Uploadable, multipartFormRequestOptions } from '../../core';\r\n\r\nexport class Transcriptions extends APIResource {\r\n  /**\r\n   * Transcribes audio into the input language.\r\n   */\r\n  create(body: TranscriptionCreateParams, options?: Core.RequestOptions): Core.APIPromise<Transcription> {\r\n    return this.post('/audio/transcriptions', multipartFormRequestOptions({ body, ...options }));\r\n  }\r\n}\r\n\r\nexport interface Transcription {\r\n  text: string;\r\n}\r\n\r\nexport interface TranscriptionCreateParams {\r\n  /**\r\n   * The audio file object (not file name) to transcribe, in one of these formats:\r\n   * flac, mp3, mp4, mpeg, mpga, m4a, ogg, wav, or webm.\r\n   */\r\n  file: Uploadable;\r\n\r\n  /**\r\n   * ID of the model to use. Only `whisper-1` is currently available.\r\n   */\r\n  model: (string & {}) | 'whisper-1';\r\n\r\n  /**\r\n   * The language of the input audio. Supplying the input language in\r\n   * [ISO-639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) format will\r\n   * improve accuracy and latency.\r\n   */\r\n  language?: string;\r\n\r\n  /**\r\n   * An optional text to guide the model's style or continue a previous audio\r\n   * segment. The [prompt](/docs/guides/speech-to-text/prompting) should match the\r\n   * audio language.\r\n   */\r\n  prompt?: string;\r\n\r\n  /**\r\n   * The format of the transcript output, in one of these options: json, text, srt,\r\n   * verbose_json, or vtt.\r\n   */\r\n  response_format?: 'json' | 'text' | 'srt' | 'verbose_json' | 'vtt';\r\n\r\n  /**\r\n   * The sampling temperature, between 0 and 1. Higher values like 0.8 will make the\r\n   * output more random, while lower values like 0.2 will make it more focused and\r\n   * deterministic. If set to 0, the model will use\r\n   * [log probability](https://en.wikipedia.org/wiki/Log_probability) to\r\n   * automatically increase the temperature until certain thresholds are hit.\r\n   */\r\n  temperature?: number;\r\n}\r\n\r\nexport namespace Transcriptions {\r\n  export import Transcription = API.Transcription;\r\n  export import TranscriptionCreateParams = API.TranscriptionCreateParams;\r\n}\r\n", "// File generated from our OpenAPI spec by Stainless.\r\n\r\nimport * as Core from '../../core';\r\nimport { APIResource } from '../../resource';\r\nimport * as API from './index';\r\nimport { type Uploadable, multipartFormRequestOptions } from '../../core';\r\n\r\nexport class Translations extends APIResource {\r\n  /**\r\n   * Translates audio into English.\r\n   */\r\n  create(body: TranslationCreateParams, options?: Core.RequestOptions): Core.APIPromise<Translation> {\r\n    return this.post('/audio/translations', multipartFormRequestOptions({ body, ...options }));\r\n  }\r\n}\r\n\r\nexport interface Translation {\r\n  text: string;\r\n}\r\n\r\nexport interface TranslationCreateParams {\r\n  /**\r\n   * The audio file object (not file name) translate, in one of these formats: flac,\r\n   * mp3, mp4, mpeg, mpga, m4a, ogg, wav, or webm.\r\n   */\r\n  file: Uploadable;\r\n\r\n  /**\r\n   * ID of the model to use. Only `whisper-1` is currently available.\r\n   */\r\n  model: (string & {}) | 'whisper-1';\r\n\r\n  /**\r\n   * An optional text to guide the model's style or continue a previous audio\r\n   * segment. The [prompt](/docs/guides/speech-to-text/prompting) should be in\r\n   * English.\r\n   */\r\n  prompt?: string;\r\n\r\n  /**\r\n   * The format of the transcript output, in one of these options: json, text, srt,\r\n   * verbose_json, or vtt.\r\n   */\r\n  response_format?: string;\r\n\r\n  /**\r\n   * The sampling temperature, between 0 and 1. Higher values like 0.8 will make the\r\n   * output more random, while lower values like 0.2 will make it more focused and\r\n   * deterministic. If set to 0, the model will use\r\n   * [log probability](https://en.wikipedia.org/wiki/Log_probability) to\r\n   * automatically increase the temperature until certain thresholds are hit.\r\n   */\r\n  temperature?: number;\r\n}\r\n\r\nexport namespace Translations {\r\n  export import Translation = API.Translation;\r\n  export import TranslationCreateParams = API.TranslationCreateParams;\r\n}\r\n", "// File generated from our OpenAPI spec by Stainless.\r\n\r\nimport { APIResource } from '../../resource';\r\nimport { Transcriptions } from './transcriptions';\r\nimport { Translations } from './translations';\r\nimport * as API from './index';\r\n\r\nexport class Audio extends APIResource {\r\n  transcriptions: Transcriptions = new Transcriptions(this.client);\r\n  translations: Translations = new Translations(this.client);\r\n}\r\n\r\nexport namespace Audio {\r\n  export import Transcriptions = API.Transcriptions;\r\n  export import Transcription = API.Transcription;\r\n  export import TranscriptionCreateParams = API.TranscriptionCreateParams;\r\n\r\n  export import Translations = API.Translations;\r\n  export import Translation = API.Translation;\r\n  export import TranslationCreateParams = API.TranslationCreateParams;\r\n}\r\n", "// File generated from our OpenAPI spec by Stainless.\r\n\r\nimport * as Core from '../../core';\r\nimport { APIPromise } from '../../core';\r\nimport { APIResource } from '../../resource';\r\nimport * as Completions_ from '../completions';\r\nimport * as API from './index';\r\nimport { Stream } from '../../streaming';\r\n\r\nexport class Completions extends APIResource {\r\n  /**\r\n   * Creates a model response for the given chat conversation.\r\n   */\r\n  create(\r\n    body: ChatCompletionCreateParamsNonStreaming,\r\n    options?: Core.RequestOptions,\r\n  ): APIPromise<ChatCompletion>;\r\n  create(\r\n    body: ChatCompletionCreateParamsStreaming,\r\n    options?: Core.RequestOptions,\r\n  ): APIPromise<Stream<ChatCompletionChunk>>;\r\n  create(\r\n    body: ChatCompletionCreateParamsBase,\r\n    options?: Core.RequestOptions,\r\n  ): APIPromise<Stream<ChatCompletionChunk> | ChatCompletion>;\r\n  create(\r\n    body: ChatCompletionCreateParams,\r\n    options?: Core.RequestOptions,\r\n  ): APIPromise<ChatCompletion> | APIPromise<Stream<ChatCompletionChunk>> {\r\n    return this.post('/chat/completions', { body, ...options, stream: body.stream ?? false }) as\r\n      | APIPromise<ChatCompletion>\r\n      | APIPromise<Stream<ChatCompletionChunk>>;\r\n  }\r\n}\r\n\r\n/**\r\n * Represents a chat completion response returned by model, based on the provided\r\n * input.\r\n */\r\nexport interface ChatCompletion {\r\n  /**\r\n   * A unique identifier for the chat completion.\r\n   */\r\n  id: string;\r\n\r\n  /**\r\n   * A list of chat completion choices. Can be more than one if `n` is greater\r\n   * than 1.\r\n   */\r\n  choices: Array<ChatCompletion.Choice>;\r\n\r\n  /**\r\n   * A unix timestamp of when the chat completion was created.\r\n   */\r\n  created: number;\r\n\r\n  /**\r\n   * The model used for the chat completion.\r\n   */\r\n  model: string;\r\n\r\n  /**\r\n   * The object type, which is always `chat.completion`.\r\n   */\r\n  object: string;\r\n\r\n  /**\r\n   * Usage statistics for the completion request.\r\n   */\r\n  usage?: Completions_.CompletionUsage;\r\n}\r\n\r\nexport namespace ChatCompletion {\r\n  export interface Choice {\r\n    /**\r\n     * The reason the model stopped generating tokens. This will be `stop` if the model\r\n     * hit a natural stop point or a provided stop sequence, `length` if the maximum\r\n     * number of tokens specified in the request was reached, or `function_call` if the\r\n     * model called a function.\r\n     */\r\n    finish_reason: 'stop' | 'length' | 'function_call';\r\n\r\n    /**\r\n     * The index of the choice in the list of choices.\r\n     */\r\n    index: number;\r\n\r\n    /**\r\n     * A chat completion message generated by the model.\r\n     */\r\n    message: ChatCompletionMessage;\r\n  }\r\n}\r\n\r\n/**\r\n * Represents a streamed chunk of a chat completion response returned by model,\r\n * based on the provided input.\r\n */\r\nexport interface ChatCompletionChunk {\r\n  /**\r\n   * A unique identifier for the chat completion chunk.\r\n   */\r\n  id: string;\r\n\r\n  /**\r\n   * A list of chat completion choices. Can be more than one if `n` is greater\r\n   * than 1.\r\n   */\r\n  choices: Array<ChatCompletionChunk.Choice>;\r\n\r\n  /**\r\n   * A unix timestamp of when the chat completion chunk was created.\r\n   */\r\n  created: number;\r\n\r\n  /**\r\n   * The model to generate the completion.\r\n   */\r\n  model: string;\r\n\r\n  /**\r\n   * The object type, which is always `chat.completion.chunk`.\r\n   */\r\n  object: string;\r\n}\r\n\r\nexport namespace ChatCompletionChunk {\r\n  export interface Choice {\r\n    /**\r\n     * A chat completion delta generated by streamed model responses.\r\n     */\r\n    delta: Choice.Delta;\r\n\r\n    /**\r\n     * The reason the model stopped generating tokens. This will be `stop` if the model\r\n     * hit a natural stop point or a provided stop sequence, `length` if the maximum\r\n     * number of tokens specified in the request was reached, or `function_call` if the\r\n     * model called a function.\r\n     */\r\n    finish_reason: 'stop' | 'length' | 'function_call' | null;\r\n\r\n    /**\r\n     * The index of the choice in the list of choices.\r\n     */\r\n    index: number;\r\n  }\r\n\r\n  export namespace Choice {\r\n    /**\r\n     * A chat completion delta generated by streamed model responses.\r\n     */\r\n    export interface Delta {\r\n      /**\r\n       * The contents of the chunk message.\r\n       */\r\n      content?: string | null;\r\n\r\n      /**\r\n       * The name and arguments of a function that should be called, as generated by the\r\n       * model.\r\n       */\r\n      function_call?: Delta.FunctionCall;\r\n\r\n      /**\r\n       * The role of the author of this message.\r\n       */\r\n      role?: 'system' | 'user' | 'assistant' | 'function';\r\n    }\r\n\r\n    export namespace Delta {\r\n      /**\r\n       * The name and arguments of a function that should be called, as generated by the\r\n       * model.\r\n       */\r\n      export interface FunctionCall {\r\n        /**\r\n         * The arguments to call the function with, as generated by the model in JSON\r\n         * format. Note that the model does not always generate valid JSON, and may\r\n         * hallucinate parameters not defined by your function schema. Validate the\r\n         * arguments in your code before calling your function.\r\n         */\r\n        arguments?: string;\r\n\r\n        /**\r\n         * The name of the function to call.\r\n         */\r\n        name?: string;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * A chat completion message generated by the model.\r\n */\r\nexport interface ChatCompletionMessage {\r\n  /**\r\n   * The contents of the message.\r\n   */\r\n  content: string | null;\r\n\r\n  /**\r\n   * The role of the author of this message.\r\n   */\r\n  role: 'system' | 'user' | 'assistant' | 'function';\r\n\r\n  /**\r\n   * The name and arguments of a function that should be called, as generated by the\r\n   * model.\r\n   */\r\n  function_call?: ChatCompletionMessage.FunctionCall;\r\n}\r\n\r\nexport namespace ChatCompletionMessage {\r\n  /**\r\n   * The name and arguments of a function that should be called, as generated by the\r\n   * model.\r\n   */\r\n  export interface FunctionCall {\r\n    /**\r\n     * The arguments to call the function with, as generated by the model in JSON\r\n     * format. Note that the model does not always generate valid JSON, and may\r\n     * hallucinate parameters not defined by your function schema. Validate the\r\n     * arguments in your code before calling your function.\r\n     */\r\n    arguments: string;\r\n\r\n    /**\r\n     * The name of the function to call.\r\n     */\r\n    name: string;\r\n  }\r\n}\r\n\r\nexport interface ChatCompletionMessageParam {\r\n  /**\r\n   * The contents of the message. `content` is required for all messages, and may be\r\n   * null for assistant messages with function calls.\r\n   */\r\n  content: string | null;\r\n\r\n  /**\r\n   * The role of the messages author. One of `system`, `user`, `assistant`, or\r\n   * `function`.\r\n   */\r\n  role: 'system' | 'user' | 'assistant' | 'function';\r\n\r\n  /**\r\n   * The name and arguments of a function that should be called, as generated by the\r\n   * model.\r\n   */\r\n  function_call?: ChatCompletionMessageParam.FunctionCall;\r\n\r\n  /**\r\n   * The name of the author of this message. `name` is required if role is\r\n   * `function`, and it should be the name of the function whose response is in the\r\n   * `content`. May contain a-z, A-Z, 0-9, and underscores, with a maximum length of\r\n   * 64 characters.\r\n   */\r\n  name?: string;\r\n}\r\n\r\nexport namespace ChatCompletionMessageParam {\r\n  /**\r\n   * The name and arguments of a function that should be called, as generated by the\r\n   * model.\r\n   */\r\n  export interface FunctionCall {\r\n    /**\r\n     * The arguments to call the function with, as generated by the model in JSON\r\n     * format. Note that the model does not always generate valid JSON, and may\r\n     * hallucinate parameters not defined by your function schema. Validate the\r\n     * arguments in your code before calling your function.\r\n     */\r\n    arguments: string;\r\n\r\n    /**\r\n     * The name of the function to call.\r\n     */\r\n    name: string;\r\n  }\r\n}\r\n\r\n/**\r\n * @deprecated ChatCompletionMessageParam should be used instead\r\n */\r\nexport type CreateChatCompletionRequestMessage = ChatCompletionMessageParam;\r\n\r\nexport type ChatCompletionCreateParams =\r\n  | ChatCompletionCreateParamsNonStreaming\r\n  | ChatCompletionCreateParamsStreaming;\r\n\r\nexport interface ChatCompletionCreateParamsBase {\r\n  /**\r\n   * A list of messages comprising the conversation so far.\r\n   * [Example Python code](https://github.com/openai/openai-cookbook/blob/main/examples/How_to_format_inputs_to_ChatGPT_models.ipynb).\r\n   */\r\n  messages: Array<ChatCompletionMessageParam>;\r\n\r\n  /**\r\n   * ID of the model to use. See the\r\n   * [model endpoint compatibility](/docs/models/model-endpoint-compatibility) table\r\n   * for details on which models work with the Chat API.\r\n   */\r\n  model:\r\n    | (string & {})\r\n    | 'gpt-4'\r\n    | 'gpt-4-0314'\r\n    | 'gpt-4-0613'\r\n    | 'gpt-4-32k'\r\n    | 'gpt-4-32k-0314'\r\n    | 'gpt-4-32k-0613'\r\n    | 'gpt-3.5-turbo'\r\n    | 'gpt-3.5-turbo-16k'\r\n    | 'gpt-3.5-turbo-0301'\r\n    | 'gpt-3.5-turbo-0613'\r\n    | 'gpt-3.5-turbo-16k-0613';\r\n\r\n  /**\r\n   * Number between -2.0 and 2.0. Positive values penalize new tokens based on their\r\n   * existing frequency in the text so far, decreasing the model's likelihood to\r\n   * repeat the same line verbatim.\r\n   *\r\n   * [See more information about frequency and presence penalties.](/docs/api-reference/parameter-details)\r\n   */\r\n  frequency_penalty?: number | null;\r\n\r\n  /**\r\n   * Controls how the model responds to function calls. \"none\" means the model does\r\n   * not call a function, and responds to the end-user. \"auto\" means the model can\r\n   * pick between an end-user or calling a function. Specifying a particular function\r\n   * via `{\"name\":\\ \"my_function\"}` forces the model to call that function. \"none\" is\r\n   * the default when no functions are present. \"auto\" is the default if functions\r\n   * are present.\r\n   */\r\n  function_call?: 'none' | 'auto' | ChatCompletionCreateParams.FunctionCallOption;\r\n\r\n  /**\r\n   * A list of functions the model may generate JSON inputs for.\r\n   */\r\n  functions?: Array<ChatCompletionCreateParams.Function>;\r\n\r\n  /**\r\n   * Modify the likelihood of specified tokens appearing in the completion.\r\n   *\r\n   * Accepts a json object that maps tokens (specified by their token ID in the\r\n   * tokenizer) to an associated bias value from -100 to 100. Mathematically, the\r\n   * bias is added to the logits generated by the model prior to sampling. The exact\r\n   * effect will vary per model, but values between -1 and 1 should decrease or\r\n   * increase likelihood of selection; values like -100 or 100 should result in a ban\r\n   * or exclusive selection of the relevant token.\r\n   */\r\n  logit_bias?: Record<string, number> | null;\r\n\r\n  /**\r\n   * The maximum number of [tokens](/tokenizer) to generate in the chat completion.\r\n   *\r\n   * The total length of input tokens and generated tokens is limited by the model's\r\n   * context length.\r\n   * [Example Python code](https://github.com/openai/openai-cookbook/blob/main/examples/How_to_count_tokens_with_tiktoken.ipynb)\r\n   * for counting tokens.\r\n   */\r\n  max_tokens?: number;\r\n\r\n  /**\r\n   * How many chat completion choices to generate for each input message.\r\n   */\r\n  n?: number | null;\r\n\r\n  /**\r\n   * Number between -2.0 and 2.0. Positive values penalize new tokens based on\r\n   * whether they appear in the text so far, increasing the model's likelihood to\r\n   * talk about new topics.\r\n   *\r\n   * [See more information about frequency and presence penalties.](/docs/api-reference/parameter-details)\r\n   */\r\n  presence_penalty?: number | null;\r\n\r\n  /**\r\n   * Up to 4 sequences where the API will stop generating further tokens.\r\n   */\r\n  stop?: string | null | Array<string>;\r\n\r\n  /**\r\n   * If set, partial message deltas will be sent, like in ChatGPT. Tokens will be\r\n   * sent as data-only\r\n   * [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format)\r\n   * as they become available, with the stream terminated by a `data: [DONE]`\r\n   * message.\r\n   * [Example Python code](https://github.com/openai/openai-cookbook/blob/main/examples/How_to_stream_completions.ipynb).\r\n   */\r\n  stream?: boolean | null;\r\n\r\n  /**\r\n   * What sampling temperature to use, between 0 and 2. Higher values like 0.8 will\r\n   * make the output more random, while lower values like 0.2 will make it more\r\n   * focused and deterministic.\r\n   *\r\n   * We generally recommend altering this or `top_p` but not both.\r\n   */\r\n  temperature?: number | null;\r\n\r\n  /**\r\n   * An alternative to sampling with temperature, called nucleus sampling, where the\r\n   * model considers the results of the tokens with top_p probability mass. So 0.1\r\n   * means only the tokens comprising the top 10% probability mass are considered.\r\n   *\r\n   * We generally recommend altering this or `temperature` but not both.\r\n   */\r\n  top_p?: number | null;\r\n\r\n  /**\r\n   * A unique identifier representing your end-user, which can help OpenAI to monitor\r\n   * and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids).\r\n   */\r\n  user?: string;\r\n}\r\n\r\nexport namespace ChatCompletionCreateParams {\r\n  export interface FunctionCallOption {\r\n    /**\r\n     * The name of the function to call.\r\n     */\r\n    name: string;\r\n  }\r\n\r\n  export interface Function {\r\n    /**\r\n     * The name of the function to be called. Must be a-z, A-Z, 0-9, or contain\r\n     * underscores and dashes, with a maximum length of 64.\r\n     */\r\n    name: string;\r\n\r\n    /**\r\n     * The parameters the functions accepts, described as a JSON Schema object. See the\r\n     * [guide](/docs/guides/gpt/function-calling) for examples, and the\r\n     * [JSON Schema reference](https://json-schema.org/understanding-json-schema/) for\r\n     * documentation about the format.\r\n     *\r\n     * To describe a function that accepts no parameters, provide the value\r\n     * `{\"type\": \"object\", \"properties\": {}}`.\r\n     */\r\n    parameters: Record<string, unknown>;\r\n\r\n    /**\r\n     * A description of what the function does, used by the model to choose when and\r\n     * how to call the function.\r\n     */\r\n    description?: string;\r\n  }\r\n\r\n  export type ChatCompletionCreateParamsNonStreaming = API.ChatCompletionCreateParamsNonStreaming;\r\n  export type ChatCompletionCreateParamsStreaming = API.ChatCompletionCreateParamsStreaming;\r\n}\r\n\r\n/**\r\n * @deprecated Use ChatCompletionCreateParams instead\r\n */\r\nexport type CompletionCreateParams = ChatCompletionCreateParams;\r\n\r\nexport interface ChatCompletionCreateParamsNonStreaming extends ChatCompletionCreateParamsBase {\r\n  /**\r\n   * If set, partial message deltas will be sent, like in ChatGPT. Tokens will be\r\n   * sent as data-only\r\n   * [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format)\r\n   * as they become available, with the stream terminated by a `data: [DONE]`\r\n   * message.\r\n   * [Example Python code](https://github.com/openai/openai-cookbook/blob/main/examples/How_to_stream_completions.ipynb).\r\n   */\r\n  stream?: false | null;\r\n}\r\n\r\n/**\r\n * @deprecated Use ChatCompletionCreateParamsNonStreaming instead\r\n */\r\nexport type CompletionCreateParamsNonStreaming = ChatCompletionCreateParamsNonStreaming;\r\n\r\nexport interface ChatCompletionCreateParamsStreaming extends ChatCompletionCreateParamsBase {\r\n  /**\r\n   * If set, partial message deltas will be sent, like in ChatGPT. Tokens will be\r\n   * sent as data-only\r\n   * [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format)\r\n   * as they become available, with the stream terminated by a `data: [DONE]`\r\n   * message.\r\n   * [Example Python code](https://github.com/openai/openai-cookbook/blob/main/examples/How_to_stream_completions.ipynb).\r\n   */\r\n  stream: true;\r\n}\r\n\r\n/**\r\n * @deprecated Use ChatCompletionCreateParamsStreaming instead\r\n */\r\nexport type CompletionCreateParamsStreaming = ChatCompletionCreateParamsStreaming;\r\n\r\nexport namespace Completions {\r\n  export import ChatCompletion = API.ChatCompletion;\r\n  export import ChatCompletionChunk = API.ChatCompletionChunk;\r\n  export import ChatCompletionMessage = API.ChatCompletionMessage;\r\n  export import ChatCompletionMessageParam = API.ChatCompletionMessageParam;\r\n  export import CreateChatCompletionRequestMessage = API.CreateChatCompletionRequestMessage;\r\n  export import ChatCompletionCreateParams = API.ChatCompletionCreateParams;\r\n  export import CompletionCreateParams = API.CompletionCreateParams;\r\n  export import ChatCompletionCreateParamsNonStreaming = API.ChatCompletionCreateParamsNonStreaming;\r\n  export import CompletionCreateParamsNonStreaming = API.CompletionCreateParamsNonStreaming;\r\n  export import ChatCompletionCreateParamsStreaming = API.ChatCompletionCreateParamsStreaming;\r\n  export import CompletionCreateParamsStreaming = API.CompletionCreateParamsStreaming;\r\n}\r\n", "// File generated from our OpenAPI spec by Stainless.\r\n\r\nimport { APIResource } from '../../resource';\r\nimport { Completions } from './completions';\r\nimport * as API from './index';\r\n\r\nexport class Chat extends APIResource {\r\n  completions: Completions = new Completions(this.client);\r\n}\r\n\r\nexport namespace Chat {\r\n  export import Completions = API.Completions;\r\n  export import ChatCompletion = API.ChatCompletion;\r\n  export import ChatCompletionChunk = API.ChatCompletionChunk;\r\n  export import ChatCompletionMessage = API.ChatCompletionMessage;\r\n  export import ChatCompletionMessageParam = API.ChatCompletionMessageParam;\r\n  export import CreateChatCompletionRequestMessage = API.CreateChatCompletionRequestMessage;\r\n  export import ChatCompletionCreateParams = API.ChatCompletionCreateParams;\r\n  export import CompletionCreateParams = API.CompletionCreateParams;\r\n  export import ChatCompletionCreateParamsNonStreaming = API.ChatCompletionCreateParamsNonStreaming;\r\n  export import CompletionCreateParamsNonStreaming = API.CompletionCreateParamsNonStreaming;\r\n  export import ChatCompletionCreateParamsStreaming = API.ChatCompletionCreateParamsStreaming;\r\n  export import CompletionCreateParamsStreaming = API.CompletionCreateParamsStreaming;\r\n}\r\n", "// File generated from our OpenAPI spec by Stainless.\r\n\r\nimport * as Core from '../core';\r\nimport { APIPromise } from '../core';\r\nimport { APIResource } from '../resource';\r\nimport * as API from './index';\r\nimport { Stream } from '../streaming';\r\n\r\nexport class Completions extends APIResource {\r\n  /**\r\n   * Creates a completion for the provided prompt and parameters.\r\n   */\r\n  create(body: CompletionCreateParamsNonStreaming, options?: Core.RequestOptions): APIPromise<Completion>;\r\n  create(\r\n    body: CompletionCreateParamsStreaming,\r\n    options?: Core.RequestOptions,\r\n  ): APIPromise<Stream<Completion>>;\r\n  create(\r\n    body: CompletionCreateParamsBase,\r\n    options?: Core.RequestOptions,\r\n  ): APIPromise<Stream<Completion> | Completion>;\r\n  create(\r\n    body: CompletionCreateParams,\r\n    options?: Core.RequestOptions,\r\n  ): APIPromise<Completion> | APIPromise<Stream<Completion>> {\r\n    return this.post('/completions', { body, ...options, stream: body.stream ?? false }) as\r\n      | APIPromise<Completion>\r\n      | APIPromise<Stream<Completion>>;\r\n  }\r\n}\r\n\r\n/**\r\n * Represents a completion response from the API. Note: both the streamed and\r\n * non-streamed response objects share the same shape (unlike the chat endpoint).\r\n */\r\nexport interface Completion {\r\n  /**\r\n   * A unique identifier for the completion.\r\n   */\r\n  id: string;\r\n\r\n  /**\r\n   * The list of completion choices the model generated for the input prompt.\r\n   */\r\n  choices: Array<CompletionChoice>;\r\n\r\n  /**\r\n   * The Unix timestamp of when the completion was created.\r\n   */\r\n  created: number;\r\n\r\n  /**\r\n   * The model used for completion.\r\n   */\r\n  model: string;\r\n\r\n  /**\r\n   * The object type, which is always \"text_completion\"\r\n   */\r\n  object: string;\r\n\r\n  /**\r\n   * Usage statistics for the completion request.\r\n   */\r\n  usage?: CompletionUsage;\r\n}\r\n\r\nexport interface CompletionChoice {\r\n  /**\r\n   * The reason the model stopped generating tokens. This will be `stop` if the model\r\n   * hit a natural stop point or a provided stop sequence, or `length` if the maximum\r\n   * number of tokens specified in the request was reached.\r\n   */\r\n  finish_reason: 'stop' | 'length';\r\n\r\n  index: number;\r\n\r\n  logprobs: CompletionChoice.Logprobs | null;\r\n\r\n  text: string;\r\n}\r\n\r\nexport namespace CompletionChoice {\r\n  export interface Logprobs {\r\n    text_offset?: Array<number>;\r\n\r\n    token_logprobs?: Array<number>;\r\n\r\n    tokens?: Array<string>;\r\n\r\n    top_logprobs?: Array<Record<string, number>>;\r\n  }\r\n}\r\n\r\n/**\r\n * Usage statistics for the completion request.\r\n */\r\nexport interface CompletionUsage {\r\n  /**\r\n   * Number of tokens in the generated completion.\r\n   */\r\n  completion_tokens: number;\r\n\r\n  /**\r\n   * Number of tokens in the prompt.\r\n   */\r\n  prompt_tokens: number;\r\n\r\n  /**\r\n   * Total number of tokens used in the request (prompt + completion).\r\n   */\r\n  total_tokens: number;\r\n}\r\n\r\nexport type CompletionCreateParams = CompletionCreateParamsNonStreaming | CompletionCreateParamsStreaming;\r\n\r\nexport interface CompletionCreateParamsBase {\r\n  /**\r\n   * ID of the model to use. You can use the\r\n   * [List models](/docs/api-reference/models/list) API to see all of your available\r\n   * models, or see our [Model overview](/docs/models/overview) for descriptions of\r\n   * them.\r\n   */\r\n  model:\r\n    | (string & {})\r\n    | 'babbage-002'\r\n    | 'davinci-002'\r\n    | 'text-davinci-003'\r\n    | 'text-davinci-002'\r\n    | 'text-davinci-001'\r\n    | 'code-davinci-002'\r\n    | 'text-curie-001'\r\n    | 'text-babbage-001'\r\n    | 'text-ada-001';\r\n\r\n  /**\r\n   * The prompt(s) to generate completions for, encoded as a string, array of\r\n   * strings, array of tokens, or array of token arrays.\r\n   *\r\n   * Note that <|endoftext|> is the document separator that the model sees during\r\n   * training, so if a prompt is not specified the model will generate as if from the\r\n   * beginning of a new document.\r\n   */\r\n  prompt: string | Array<string> | Array<number> | Array<Array<number>> | null;\r\n\r\n  /**\r\n   * Generates `best_of` completions server-side and returns the \"best\" (the one with\r\n   * the highest log probability per token). Results cannot be streamed.\r\n   *\r\n   * When used with `n`, `best_of` controls the number of candidate completions and\r\n   * `n` specifies how many to return – `best_of` must be greater than `n`.\r\n   *\r\n   * **Note:** Because this parameter generates many completions, it can quickly\r\n   * consume your token quota. Use carefully and ensure that you have reasonable\r\n   * settings for `max_tokens` and `stop`.\r\n   */\r\n  best_of?: number | null;\r\n\r\n  /**\r\n   * Echo back the prompt in addition to the completion\r\n   */\r\n  echo?: boolean | null;\r\n\r\n  /**\r\n   * Number between -2.0 and 2.0. Positive values penalize new tokens based on their\r\n   * existing frequency in the text so far, decreasing the model's likelihood to\r\n   * repeat the same line verbatim.\r\n   *\r\n   * [See more information about frequency and presence penalties.](/docs/api-reference/parameter-details)\r\n   */\r\n  frequency_penalty?: number | null;\r\n\r\n  /**\r\n   * Modify the likelihood of specified tokens appearing in the completion.\r\n   *\r\n   * Accepts a json object that maps tokens (specified by their token ID in the GPT\r\n   * tokenizer) to an associated bias value from -100 to 100. You can use this\r\n   * [tokenizer tool](/tokenizer?view=bpe) (which works for both GPT-2 and GPT-3) to\r\n   * convert text to token IDs. Mathematically, the bias is added to the logits\r\n   * generated by the model prior to sampling. The exact effect will vary per model,\r\n   * but values between -1 and 1 should decrease or increase likelihood of selection;\r\n   * values like -100 or 100 should result in a ban or exclusive selection of the\r\n   * relevant token.\r\n   *\r\n   * As an example, you can pass `{\"50256\": -100}` to prevent the <|endoftext|> token\r\n   * from being generated.\r\n   */\r\n  logit_bias?: Record<string, number> | null;\r\n\r\n  /**\r\n   * Include the log probabilities on the `logprobs` most likely tokens, as well the\r\n   * chosen tokens. For example, if `logprobs` is 5, the API will return a list of\r\n   * the 5 most likely tokens. The API will always return the `logprob` of the\r\n   * sampled token, so there may be up to `logprobs+1` elements in the response.\r\n   *\r\n   * The maximum value for `logprobs` is 5.\r\n   */\r\n  logprobs?: number | null;\r\n\r\n  /**\r\n   * The maximum number of [tokens](/tokenizer) to generate in the completion.\r\n   *\r\n   * The token count of your prompt plus `max_tokens` cannot exceed the model's\r\n   * context length.\r\n   * [Example Python code](https://github.com/openai/openai-cookbook/blob/main/examples/How_to_count_tokens_with_tiktoken.ipynb)\r\n   * for counting tokens.\r\n   */\r\n  max_tokens?: number | null;\r\n\r\n  /**\r\n   * How many completions to generate for each prompt.\r\n   *\r\n   * **Note:** Because this parameter generates many completions, it can quickly\r\n   * consume your token quota. Use carefully and ensure that you have reasonable\r\n   * settings for `max_tokens` and `stop`.\r\n   */\r\n  n?: number | null;\r\n\r\n  /**\r\n   * Number between -2.0 and 2.0. Positive values penalize new tokens based on\r\n   * whether they appear in the text so far, increasing the model's likelihood to\r\n   * talk about new topics.\r\n   *\r\n   * [See more information about frequency and presence penalties.](/docs/api-reference/parameter-details)\r\n   */\r\n  presence_penalty?: number | null;\r\n\r\n  /**\r\n   * Up to 4 sequences where the API will stop generating further tokens. The\r\n   * returned text will not contain the stop sequence.\r\n   */\r\n  stop?: string | null | Array<string>;\r\n\r\n  /**\r\n   * Whether to stream back partial progress. If set, tokens will be sent as\r\n   * data-only\r\n   * [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format)\r\n   * as they become available, with the stream terminated by a `data: [DONE]`\r\n   * message.\r\n   * [Example Python code](https://github.com/openai/openai-cookbook/blob/main/examples/How_to_stream_completions.ipynb).\r\n   */\r\n  stream?: boolean | null;\r\n\r\n  /**\r\n   * The suffix that comes after a completion of inserted text.\r\n   */\r\n  suffix?: string | null;\r\n\r\n  /**\r\n   * What sampling temperature to use, between 0 and 2. Higher values like 0.8 will\r\n   * make the output more random, while lower values like 0.2 will make it more\r\n   * focused and deterministic.\r\n   *\r\n   * We generally recommend altering this or `top_p` but not both.\r\n   */\r\n  temperature?: number | null;\r\n\r\n  /**\r\n   * An alternative to sampling with temperature, called nucleus sampling, where the\r\n   * model considers the results of the tokens with top_p probability mass. So 0.1\r\n   * means only the tokens comprising the top 10% probability mass are considered.\r\n   *\r\n   * We generally recommend altering this or `temperature` but not both.\r\n   */\r\n  top_p?: number | null;\r\n\r\n  /**\r\n   * A unique identifier representing your end-user, which can help OpenAI to monitor\r\n   * and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids).\r\n   */\r\n  user?: string;\r\n}\r\n\r\nexport namespace CompletionCreateParams {\r\n  export type CompletionCreateParamsNonStreaming = API.CompletionCreateParamsNonStreaming;\r\n  export type CompletionCreateParamsStreaming = API.CompletionCreateParamsStreaming;\r\n}\r\n\r\nexport interface CompletionCreateParamsNonStreaming extends CompletionCreateParamsBase {\r\n  /**\r\n   * Whether to stream back partial progress. If set, tokens will be sent as\r\n   * data-only\r\n   * [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format)\r\n   * as they become available, with the stream terminated by a `data: [DONE]`\r\n   * message.\r\n   * [Example Python code](https://github.com/openai/openai-cookbook/blob/main/examples/How_to_stream_completions.ipynb).\r\n   */\r\n  stream?: false | null;\r\n}\r\n\r\nexport interface CompletionCreateParamsStreaming extends CompletionCreateParamsBase {\r\n  /**\r\n   * Whether to stream back partial progress. If set, tokens will be sent as\r\n   * data-only\r\n   * [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format)\r\n   * as they become available, with the stream terminated by a `data: [DONE]`\r\n   * message.\r\n   * [Example Python code](https://github.com/openai/openai-cookbook/blob/main/examples/How_to_stream_completions.ipynb).\r\n   */\r\n  stream: true;\r\n}\r\n\r\nexport namespace Completions {\r\n  export import Completion = API.Completion;\r\n  export import CompletionChoice = API.CompletionChoice;\r\n  export import CompletionUsage = API.CompletionUsage;\r\n  export import CompletionCreateParams = API.CompletionCreateParams;\r\n  export import CompletionCreateParamsNonStreaming = API.CompletionCreateParamsNonStreaming;\r\n  export import CompletionCreateParamsStreaming = API.CompletionCreateParamsStreaming;\r\n}\r\n", "// File generated from our OpenAPI spec by Stainless.\r\n\r\nimport * as Core from '../core';\r\nimport { APIResource } from '../resource';\r\nimport * as API from './index';\r\n\r\nexport class Embeddings extends APIResource {\r\n  /**\r\n   * Creates an embedding vector representing the input text.\r\n   */\r\n  create(\r\n    body: EmbeddingCreateParams,\r\n    options?: Core.RequestOptions,\r\n  ): Core.APIPromise<CreateEmbeddingResponse> {\r\n    return this.post('/embeddings', { body, ...options });\r\n  }\r\n}\r\n\r\nexport interface CreateEmbeddingResponse {\r\n  /**\r\n   * The list of embeddings generated by the model.\r\n   */\r\n  data: Array<Embedding>;\r\n\r\n  /**\r\n   * The name of the model used to generate the embedding.\r\n   */\r\n  model: string;\r\n\r\n  /**\r\n   * The object type, which is always \"embedding\".\r\n   */\r\n  object: string;\r\n\r\n  /**\r\n   * The usage information for the request.\r\n   */\r\n  usage: CreateEmbeddingResponse.Usage;\r\n}\r\n\r\nexport namespace CreateEmbeddingResponse {\r\n  /**\r\n   * The usage information for the request.\r\n   */\r\n  export interface Usage {\r\n    /**\r\n     * The number of tokens used by the prompt.\r\n     */\r\n    prompt_tokens: number;\r\n\r\n    /**\r\n     * The total number of tokens used by the request.\r\n     */\r\n    total_tokens: number;\r\n  }\r\n}\r\n\r\n/**\r\n * Represents an embedding vector returned by embedding endpoint.\r\n */\r\nexport interface Embedding {\r\n  /**\r\n   * The embedding vector, which is a list of floats. The length of vector depends on\r\n   * the model as listed in the [embedding guide](/docs/guides/embeddings).\r\n   */\r\n  embedding: Array<number>;\r\n\r\n  /**\r\n   * The index of the embedding in the list of embeddings.\r\n   */\r\n  index: number;\r\n\r\n  /**\r\n   * The object type, which is always \"embedding\".\r\n   */\r\n  object: string;\r\n}\r\n\r\nexport interface EmbeddingCreateParams {\r\n  /**\r\n   * Input text to embed, encoded as a string or array of tokens. To embed multiple\r\n   * inputs in a single request, pass an array of strings or array of token arrays.\r\n   * Each input must not exceed the max input tokens for the model (8191 tokens for\r\n   * `text-embedding-ada-002`).\r\n   * [Example Python code](https://github.com/openai/openai-cookbook/blob/main/examples/How_to_count_tokens_with_tiktoken.ipynb)\r\n   * for counting tokens.\r\n   */\r\n  input: string | Array<string> | Array<number> | Array<Array<number>>;\r\n\r\n  /**\r\n   * ID of the model to use. You can use the\r\n   * [List models](/docs/api-reference/models/list) API to see all of your available\r\n   * models, or see our [Model overview](/docs/models/overview) for descriptions of\r\n   * them.\r\n   */\r\n  model: (string & {}) | 'text-embedding-ada-002';\r\n\r\n  /**\r\n   * A unique identifier representing your end-user, which can help OpenAI to monitor\r\n   * and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids).\r\n   */\r\n  user?: string;\r\n}\r\n\r\nexport namespace Embeddings {\r\n  export import CreateEmbeddingResponse = API.CreateEmbeddingResponse;\r\n  export import Embedding = API.Embedding;\r\n  export import EmbeddingCreateParams = API.EmbeddingCreateParams;\r\n}\r\n", "// File generated from our OpenAPI spec by Stainless.\r\n\r\nimport * as Core from '../core';\r\nimport { APIResource } from '../resource';\r\nimport * as Completions from './completions';\r\nimport * as API from './index';\r\n\r\nexport class Edits extends APIResource {\r\n  /**\r\n   * Creates a new edit for the provided input, instruction, and parameters.\r\n   *\r\n   * @deprecated The Edits API is deprecated; please use Chat Completions instead.\r\n   *\r\n   * https://openai.com/blog/gpt-4-api-general-availability#deprecation-of-the-edits-api\r\n   */\r\n  create(body: EditCreateParams, options?: Core.RequestOptions): Core.APIPromise<Edit> {\r\n    return this.post('/edits', { body, ...options });\r\n  }\r\n}\r\n\r\nexport interface Edit {\r\n  /**\r\n   * A list of edit choices. Can be more than one if `n` is greater than 1.\r\n   */\r\n  choices: Array<Edit.Choice>;\r\n\r\n  /**\r\n   * A unix timestamp of when the edit was created.\r\n   */\r\n  created: number;\r\n\r\n  /**\r\n   * The object type, which is always `edit`.\r\n   */\r\n  object: string;\r\n\r\n  /**\r\n   * Usage statistics for the completion request.\r\n   */\r\n  usage: Completions.CompletionUsage;\r\n}\r\n\r\nexport namespace Edit {\r\n  export interface Choice {\r\n    /**\r\n     * The reason the model stopped generating tokens. This will be `stop` if the model\r\n     * hit a natural stop point or a provided stop sequence, or `length` if the maximum\r\n     * number of tokens specified in the request was reached.\r\n     */\r\n    finish_reason: 'stop' | 'length';\r\n\r\n    /**\r\n     * The index of the choice in the list of choices.\r\n     */\r\n    index: number;\r\n\r\n    /**\r\n     * The edited result.\r\n     */\r\n    text: string;\r\n  }\r\n}\r\n\r\nexport interface EditCreateParams {\r\n  /**\r\n   * The instruction that tells the model how to edit the prompt.\r\n   */\r\n  instruction: string;\r\n\r\n  /**\r\n   * ID of the model to use. You can use the `text-davinci-edit-001` or\r\n   * `code-davinci-edit-001` model with this endpoint.\r\n   */\r\n  model: (string & {}) | 'text-davinci-edit-001' | 'code-davinci-edit-001';\r\n\r\n  /**\r\n   * The input text to use as a starting point for the edit.\r\n   */\r\n  input?: string | null;\r\n\r\n  /**\r\n   * How many edits to generate for the input and instruction.\r\n   */\r\n  n?: number | null;\r\n\r\n  /**\r\n   * What sampling temperature to use, between 0 and 2. Higher values like 0.8 will\r\n   * make the output more random, while lower values like 0.2 will make it more\r\n   * focused and deterministic.\r\n   *\r\n   * We generally recommend altering this or `top_p` but not both.\r\n   */\r\n  temperature?: number | null;\r\n\r\n  /**\r\n   * An alternative to sampling with temperature, called nucleus sampling, where the\r\n   * model considers the results of the tokens with top_p probability mass. So 0.1\r\n   * means only the tokens comprising the top 10% probability mass are considered.\r\n   *\r\n   * We generally recommend altering this or `temperature` but not both.\r\n   */\r\n  top_p?: number | null;\r\n}\r\n\r\nexport namespace Edits {\r\n  export import Edit = API.Edit;\r\n  export import EditCreateParams = API.EditCreateParams;\r\n}\r\n", "// File generated from our OpenAPI spec by Stainless.\r\n\r\nimport * as Core from '../core';\r\nimport { APIResource } from '../resource';\r\nimport * as API from './index';\r\nimport { type Uploadable, multipartFormRequestOptions } from '../core';\r\nimport { Page } from '../pagination';\r\n\r\nexport class Files extends APIResource {\r\n  /**\r\n   * Upload a file that contains document(s) to be used across various\r\n   * endpoints/features. Currently, the size of all the files uploaded by one\r\n   * organization can be up to 1 GB. Please contact us if you need to increase the\r\n   * storage limit.\r\n   */\r\n  create(body: FileCreateParams, options?: Core.RequestOptions): Core.APIPromise<FileObject> {\r\n    return this.post('/files', multipartFormRequestOptions({ body, ...options }));\r\n  }\r\n\r\n  /**\r\n   * Returns information about a specific file.\r\n   */\r\n  retrieve(fileId: string, options?: Core.RequestOptions): Core.APIPromise<FileObject> {\r\n    return this.get(`/files/${fileId}`, options);\r\n  }\r\n\r\n  /**\r\n   * Returns a list of files that belong to the user's organization.\r\n   */\r\n  list(options?: Core.RequestOptions): Core.PagePromise<FileObjectsPage, FileObject> {\r\n    return this.getAPIList('/files', FileObjectsPage, options);\r\n  }\r\n\r\n  /**\r\n   * Delete a file.\r\n   */\r\n  del(fileId: string, options?: Core.RequestOptions): Core.APIPromise<FileDeleted> {\r\n    return this.delete(`/files/${fileId}`, options);\r\n  }\r\n\r\n  /**\r\n   * Returns the contents of the specified file\r\n   */\r\n  retrieveContent(fileId: string, options?: Core.RequestOptions): Core.APIPromise<string> {\r\n    return this.get(`/files/${fileId}/content`, {\r\n      ...options,\r\n      headers: { Accept: 'application/json', ...options?.headers },\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\r\n */\r\nexport class FileObjectsPage extends Page<FileObject> {}\r\n// alias so we can export it in the namespace\r\ntype _FileObjectsPage = FileObjectsPage;\r\n\r\nexport type FileContent = string;\r\n\r\nexport interface FileDeleted {\r\n  id: string;\r\n\r\n  deleted: boolean;\r\n\r\n  object: string;\r\n}\r\n\r\n/**\r\n * The `File` object represents a document that has been uploaded to OpenAI.\r\n */\r\nexport interface FileObject {\r\n  /**\r\n   * The file identifier, which can be referenced in the API endpoints.\r\n   */\r\n  id: string;\r\n\r\n  /**\r\n   * The size of the file in bytes.\r\n   */\r\n  bytes: number;\r\n\r\n  /**\r\n   * The unix timestamp for when the file was created.\r\n   */\r\n  created_at: number;\r\n\r\n  /**\r\n   * The name of the file.\r\n   */\r\n  filename: string;\r\n\r\n  /**\r\n   * The object type, which is always \"file\".\r\n   */\r\n  object: string;\r\n\r\n  /**\r\n   * The intended purpose of the file. Currently, only \"fine-tune\" is supported.\r\n   */\r\n  purpose: string;\r\n\r\n  /**\r\n   * The current status of the file, which can be either `uploaded`, `processed`,\r\n   * `pending`, `error`, `deleting` or `deleted`.\r\n   */\r\n  status?: string;\r\n\r\n  /**\r\n   * Additional details about the status of the file. If the file is in the `error`\r\n   * state, this will include a message describing the error.\r\n   */\r\n  status_details?: string | null;\r\n}\r\n\r\nexport interface FileCreateParams {\r\n  /**\r\n   * Name of the [JSON Lines](https://jsonlines.readthedocs.io/en/latest/) file to be\r\n   * uploaded.\r\n   *\r\n   * If the `purpose` is set to \"fine-tune\", the file will be used for fine-tuning.\r\n   */\r\n  file: Uploadable;\r\n\r\n  /**\r\n   * The intended purpose of the uploaded documents.\r\n   *\r\n   * Use \"fine-tune\" for [fine-tuning](/docs/api-reference/fine-tuning). This allows\r\n   * us to validate the format of the uploaded file.\r\n   */\r\n  purpose: string;\r\n}\r\n\r\nexport namespace Files {\r\n  export import FileContent = API.FileContent;\r\n  export import FileDeleted = API.FileDeleted;\r\n  export import FileObject = API.FileObject;\r\n  export type FileObjectsPage = _FileObjectsPage;\r\n  export import FileCreateParams = API.FileCreateParams;\r\n}\r\n", "// File generated from our OpenAPI spec by Stainless.\r\n\r\nimport * as Core from '../core';\r\nimport { APIPromise } from '../core';\r\nimport { APIResource } from '../resource';\r\nimport * as Files from './files';\r\nimport * as API from './index';\r\nimport { Page } from '../pagination';\r\nimport { Stream } from '../streaming';\r\n\r\nexport class FineTunes extends APIResource {\r\n  /**\r\n   * Creates a job that fine-tunes a specified model from a given dataset.\r\n   *\r\n   * Response includes details of the enqueued job including job status and the name\r\n   * of the fine-tuned models once complete.\r\n   *\r\n   * [Learn more about fine-tuning](/docs/guides/legacy-fine-tuning)\r\n   */\r\n  create(body: FineTuneCreateParams, options?: Core.RequestOptions): Core.APIPromise<FineTune> {\r\n    return this.post('/fine-tunes', { body, ...options });\r\n  }\r\n\r\n  /**\r\n   * Gets info about the fine-tune job.\r\n   *\r\n   * [Learn more about fine-tuning](/docs/guides/legacy-fine-tuning)\r\n   */\r\n  retrieve(fineTuneId: string, options?: Core.RequestOptions): Core.APIPromise<FineTune> {\r\n    return this.get(`/fine-tunes/${fineTuneId}`, options);\r\n  }\r\n\r\n  /**\r\n   * List your organization's fine-tuning jobs\r\n   */\r\n  list(options?: Core.RequestOptions): Core.PagePromise<FineTunesPage, FineTune> {\r\n    return this.getAPIList('/fine-tunes', FineTunesPage, options);\r\n  }\r\n\r\n  /**\r\n   * Immediately cancel a fine-tune job.\r\n   */\r\n  cancel(fineTuneId: string, options?: Core.RequestOptions): Core.APIPromise<FineTune> {\r\n    return this.post(`/fine-tunes/${fineTuneId}/cancel`, options);\r\n  }\r\n\r\n  /**\r\n   * Get fine-grained status updates for a fine-tune job.\r\n   */\r\n  listEvents(\r\n    fineTuneId: string,\r\n    query?: FineTuneListEventsParamsNonStreaming,\r\n    options?: Core.RequestOptions,\r\n  ): APIPromise<FineTuneEventsListResponse>;\r\n  listEvents(\r\n    fineTuneId: string,\r\n    query: FineTuneListEventsParamsStreaming,\r\n    options?: Core.RequestOptions,\r\n  ): APIPromise<Stream<FineTuneEvent>>;\r\n  listEvents(\r\n    fineTuneId: string,\r\n    query?: FineTuneListEventsParamsBase | undefined,\r\n    options?: Core.RequestOptions,\r\n  ): APIPromise<Stream<FineTuneEvent> | FineTuneEventsListResponse>;\r\n  listEvents(\r\n    fineTuneId: string,\r\n    query?: FineTuneListEventsParams | undefined,\r\n    options?: Core.RequestOptions,\r\n  ): APIPromise<FineTuneEventsListResponse> | APIPromise<Stream<FineTuneEvent>> {\r\n    return this.get(`/fine-tunes/${fineTuneId}/events`, {\r\n      query,\r\n      timeout: 86400000,\r\n      ...options,\r\n      stream: query?.stream ?? false,\r\n    }) as APIPromise<FineTuneEventsListResponse> | APIPromise<Stream<FineTuneEvent>>;\r\n  }\r\n}\r\n\r\n/**\r\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\r\n */\r\nexport class FineTunesPage extends Page<FineTune> {}\r\n// alias so we can export it in the namespace\r\ntype _FineTunesPage = FineTunesPage;\r\n\r\n/**\r\n * The `FineTune` object represents a legacy fine-tune job that has been created\r\n * through the API.\r\n */\r\nexport interface FineTune {\r\n  /**\r\n   * The object identifier, which can be referenced in the API endpoints.\r\n   */\r\n  id: string;\r\n\r\n  /**\r\n   * The unix timestamp for when the fine-tuning job was created.\r\n   */\r\n  created_at: number;\r\n\r\n  /**\r\n   * The name of the fine-tuned model that is being created.\r\n   */\r\n  fine_tuned_model: string | null;\r\n\r\n  /**\r\n   * The hyperparameters used for the fine-tuning job. See the\r\n   * [fine-tuning guide](/docs/guides/legacy-fine-tuning/hyperparameters) for more\r\n   * details.\r\n   */\r\n  hyperparams: FineTune.Hyperparams;\r\n\r\n  /**\r\n   * The base model that is being fine-tuned.\r\n   */\r\n  model: string;\r\n\r\n  /**\r\n   * The object type, which is always \"fine-tune\".\r\n   */\r\n  object: string;\r\n\r\n  /**\r\n   * The organization that owns the fine-tuning job.\r\n   */\r\n  organization_id: string;\r\n\r\n  /**\r\n   * The compiled results files for the fine-tuning job.\r\n   */\r\n  result_files: Array<Files.FileObject>;\r\n\r\n  /**\r\n   * The current status of the fine-tuning job, which can be either `created`,\r\n   * `running`, `succeeded`, `failed`, or `cancelled`.\r\n   */\r\n  status: string;\r\n\r\n  /**\r\n   * The list of files used for training.\r\n   */\r\n  training_files: Array<Files.FileObject>;\r\n\r\n  /**\r\n   * The unix timestamp for when the fine-tuning job was last updated.\r\n   */\r\n  updated_at: number;\r\n\r\n  /**\r\n   * The list of files used for validation.\r\n   */\r\n  validation_files: Array<Files.FileObject>;\r\n\r\n  /**\r\n   * The list of events that have been observed in the lifecycle of the FineTune job.\r\n   */\r\n  events?: Array<FineTuneEvent>;\r\n}\r\n\r\nexport namespace FineTune {\r\n  /**\r\n   * The hyperparameters used for the fine-tuning job. See the\r\n   * [fine-tuning guide](/docs/guides/legacy-fine-tuning/hyperparameters) for more\r\n   * details.\r\n   */\r\n  export interface Hyperparams {\r\n    /**\r\n     * The batch size to use for training. The batch size is the number of training\r\n     * examples used to train a single forward and backward pass.\r\n     */\r\n    batch_size: number;\r\n\r\n    /**\r\n     * The learning rate multiplier to use for training.\r\n     */\r\n    learning_rate_multiplier: number;\r\n\r\n    /**\r\n     * The number of epochs to train the model for. An epoch refers to one full cycle\r\n     * through the training dataset.\r\n     */\r\n    n_epochs: number;\r\n\r\n    /**\r\n     * The weight to use for loss on the prompt tokens.\r\n     */\r\n    prompt_loss_weight: number;\r\n\r\n    /**\r\n     * The number of classes to use for computing classification metrics.\r\n     */\r\n    classification_n_classes?: number;\r\n\r\n    /**\r\n     * The positive class to use for computing classification metrics.\r\n     */\r\n    classification_positive_class?: string;\r\n\r\n    /**\r\n     * The classification metrics to compute using the validation dataset at the end of\r\n     * every epoch.\r\n     */\r\n    compute_classification_metrics?: boolean;\r\n  }\r\n}\r\n\r\nexport interface FineTuneEvent {\r\n  created_at: number;\r\n\r\n  level: string;\r\n\r\n  message: string;\r\n\r\n  object: string;\r\n}\r\n\r\nexport interface FineTuneEventsListResponse {\r\n  data: Array<FineTuneEvent>;\r\n\r\n  object: string;\r\n}\r\n\r\nexport interface FineTuneCreateParams {\r\n  /**\r\n   * The ID of an uploaded file that contains training data.\r\n   *\r\n   * See [upload file](/docs/api-reference/files/upload) for how to upload a file.\r\n   *\r\n   * Your dataset must be formatted as a JSONL file, where each training example is a\r\n   * JSON object with the keys \"prompt\" and \"completion\". Additionally, you must\r\n   * upload your file with the purpose `fine-tune`.\r\n   *\r\n   * See the\r\n   * [fine-tuning guide](/docs/guides/legacy-fine-tuning/creating-training-data) for\r\n   * more details.\r\n   */\r\n  training_file: string;\r\n\r\n  /**\r\n   * The batch size to use for training. The batch size is the number of training\r\n   * examples used to train a single forward and backward pass.\r\n   *\r\n   * By default, the batch size will be dynamically configured to be ~0.2% of the\r\n   * number of examples in the training set, capped at 256 - in general, we've found\r\n   * that larger batch sizes tend to work better for larger datasets.\r\n   */\r\n  batch_size?: number | null;\r\n\r\n  /**\r\n   * If this is provided, we calculate F-beta scores at the specified beta values.\r\n   * The F-beta score is a generalization of F-1 score. This is only used for binary\r\n   * classification.\r\n   *\r\n   * With a beta of 1 (i.e. the F-1 score), precision and recall are given the same\r\n   * weight. A larger beta score puts more weight on recall and less on precision. A\r\n   * smaller beta score puts more weight on precision and less on recall.\r\n   */\r\n  classification_betas?: Array<number> | null;\r\n\r\n  /**\r\n   * The number of classes in a classification task.\r\n   *\r\n   * This parameter is required for multiclass classification.\r\n   */\r\n  classification_n_classes?: number | null;\r\n\r\n  /**\r\n   * The positive class in binary classification.\r\n   *\r\n   * This parameter is needed to generate precision, recall, and F1 metrics when\r\n   * doing binary classification.\r\n   */\r\n  classification_positive_class?: string | null;\r\n\r\n  /**\r\n   * If set, we calculate classification-specific metrics such as accuracy and F-1\r\n   * score using the validation set at the end of every epoch. These metrics can be\r\n   * viewed in the\r\n   * [results file](/docs/guides/legacy-fine-tuning/analyzing-your-fine-tuned-model).\r\n   *\r\n   * In order to compute classification metrics, you must provide a\r\n   * `validation_file`. Additionally, you must specify `classification_n_classes` for\r\n   * multiclass classification or `classification_positive_class` for binary\r\n   * classification.\r\n   */\r\n  compute_classification_metrics?: boolean | null;\r\n\r\n  /**\r\n   * The learning rate multiplier to use for training. The fine-tuning learning rate\r\n   * is the original learning rate used for pretraining multiplied by this value.\r\n   *\r\n   * By default, the learning rate multiplier is the 0.05, 0.1, or 0.2 depending on\r\n   * final `batch_size` (larger learning rates tend to perform better with larger\r\n   * batch sizes). We recommend experimenting with values in the range 0.02 to 0.2 to\r\n   * see what produces the best results.\r\n   */\r\n  learning_rate_multiplier?: number | null;\r\n\r\n  /**\r\n   * The name of the base model to fine-tune. You can select one of \"ada\", \"babbage\",\r\n   * \"curie\", \"davinci\", or a fine-tuned model created after 2022-04-21 and before\r\n   * 2023-08-22. To learn more about these models, see the [Models](/docs/models)\r\n   * documentation.\r\n   */\r\n  model?: (string & {}) | 'ada' | 'babbage' | 'curie' | 'davinci' | null;\r\n\r\n  /**\r\n   * The number of epochs to train the model for. An epoch refers to one full cycle\r\n   * through the training dataset.\r\n   */\r\n  n_epochs?: number | null;\r\n\r\n  /**\r\n   * The weight to use for loss on the prompt tokens. This controls how much the\r\n   * model tries to learn to generate the prompt (as compared to the completion which\r\n   * always has a weight of 1.0), and can add a stabilizing effect to training when\r\n   * completions are short.\r\n   *\r\n   * If prompts are extremely long (relative to completions), it may make sense to\r\n   * reduce this weight so as to avoid over-prioritizing learning the prompt.\r\n   */\r\n  prompt_loss_weight?: number | null;\r\n\r\n  /**\r\n   * A string of up to 40 characters that will be added to your fine-tuned model\r\n   * name.\r\n   *\r\n   * For example, a `suffix` of \"custom-model-name\" would produce a model name like\r\n   * `ada:ft-your-org:custom-model-name-2022-02-15-04-21-04`.\r\n   */\r\n  suffix?: string | null;\r\n\r\n  /**\r\n   * The ID of an uploaded file that contains validation data.\r\n   *\r\n   * If you provide this file, the data is used to generate validation metrics\r\n   * periodically during fine-tuning. These metrics can be viewed in the\r\n   * [fine-tuning results file](/docs/guides/legacy-fine-tuning/analyzing-your-fine-tuned-model).\r\n   * Your train and validation data should be mutually exclusive.\r\n   *\r\n   * Your dataset must be formatted as a JSONL file, where each validation example is\r\n   * a JSON object with the keys \"prompt\" and \"completion\". Additionally, you must\r\n   * upload your file with the purpose `fine-tune`.\r\n   *\r\n   * See the\r\n   * [fine-tuning guide](/docs/guides/legacy-fine-tuning/creating-training-data) for\r\n   * more details.\r\n   */\r\n  validation_file?: string | null;\r\n}\r\n\r\nexport type FineTuneListEventsParams =\r\n  | FineTuneListEventsParamsNonStreaming\r\n  | FineTuneListEventsParamsStreaming;\r\n\r\nexport interface FineTuneListEventsParamsBase {\r\n  /**\r\n   * Whether to stream events for the fine-tune job. If set to true, events will be\r\n   * sent as data-only\r\n   * [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format)\r\n   * as they become available. The stream will terminate with a `data: [DONE]`\r\n   * message when the job is finished (succeeded, cancelled, or failed).\r\n   *\r\n   * If set to false, only events generated so far will be returned.\r\n   */\r\n  stream?: boolean;\r\n}\r\n\r\nexport namespace FineTuneListEventsParams {\r\n  export type FineTuneListEventsParamsNonStreaming = API.FineTuneListEventsParamsNonStreaming;\r\n  export type FineTuneListEventsParamsStreaming = API.FineTuneListEventsParamsStreaming;\r\n}\r\n\r\nexport interface FineTuneListEventsParamsNonStreaming extends FineTuneListEventsParamsBase {\r\n  /**\r\n   * Whether to stream events for the fine-tune job. If set to true, events will be\r\n   * sent as data-only\r\n   * [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format)\r\n   * as they become available. The stream will terminate with a `data: [DONE]`\r\n   * message when the job is finished (succeeded, cancelled, or failed).\r\n   *\r\n   * If set to false, only events generated so far will be returned.\r\n   */\r\n  stream?: false;\r\n}\r\n\r\nexport interface FineTuneListEventsParamsStreaming extends FineTuneListEventsParamsBase {\r\n  /**\r\n   * Whether to stream events for the fine-tune job. If set to true, events will be\r\n   * sent as data-only\r\n   * [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format)\r\n   * as they become available. The stream will terminate with a `data: [DONE]`\r\n   * message when the job is finished (succeeded, cancelled, or failed).\r\n   *\r\n   * If set to false, only events generated so far will be returned.\r\n   */\r\n  stream: true;\r\n}\r\n\r\nexport namespace FineTunes {\r\n  export import FineTune = API.FineTune;\r\n  export import FineTuneEvent = API.FineTuneEvent;\r\n  export import FineTuneEventsListResponse = API.FineTuneEventsListResponse;\r\n  export type FineTunesPage = _FineTunesPage;\r\n  export import FineTuneCreateParams = API.FineTuneCreateParams;\r\n  export import FineTuneListEventsParams = API.FineTuneListEventsParams;\r\n  export import FineTuneListEventsParamsNonStreaming = API.FineTuneListEventsParamsNonStreaming;\r\n  export import FineTuneListEventsParamsStreaming = API.FineTuneListEventsParamsStreaming;\r\n}\r\n", "// File generated from our OpenAPI spec by Stainless.\r\n\r\nimport * as Core from '../../core';\r\nimport { APIResource } from '../../resource';\r\nimport { isRequestOptions } from '../../core';\r\nimport * as Files from '../files';\r\nimport * as API from './index';\r\nimport { CursorPage, CursorPageParams } from '../../pagination';\r\n\r\nexport class Jobs extends APIResource {\r\n  /**\r\n   * Creates a job that fine-tunes a specified model from a given dataset.\r\n   *\r\n   * Response includes details of the enqueued job including job status and the name\r\n   * of the fine-tuned models once complete.\r\n   *\r\n   * [Learn more about fine-tuning](/docs/guides/fine-tuning)\r\n   */\r\n  create(body: JobCreateParams, options?: Core.RequestOptions): Core.APIPromise<FineTuningJob> {\r\n    return this.post('/fine_tuning/jobs', { body, ...options });\r\n  }\r\n\r\n  /**\r\n   * Get info about a fine-tuning job.\r\n   *\r\n   * [Learn more about fine-tuning](/docs/guides/fine-tuning)\r\n   */\r\n  retrieve(fineTuningJobId: string, options?: Core.RequestOptions): Core.APIPromise<FineTuningJob> {\r\n    return this.get(`/fine_tuning/jobs/${fineTuningJobId}`, options);\r\n  }\r\n\r\n  /**\r\n   * List your organization's fine-tuning jobs\r\n   */\r\n  list(\r\n    query?: JobListParams,\r\n    options?: Core.RequestOptions,\r\n  ): Core.PagePromise<FineTuningJobsPage, FineTuningJob>;\r\n  list(options?: Core.RequestOptions): Core.PagePromise<FineTuningJobsPage, FineTuningJob>;\r\n  list(\r\n    query: JobListParams | Core.RequestOptions = {},\r\n    options?: Core.RequestOptions,\r\n  ): Core.PagePromise<FineTuningJobsPage, FineTuningJob> {\r\n    if (isRequestOptions(query)) {\r\n      return this.list({}, query);\r\n    }\r\n    return this.getAPIList('/fine_tuning/jobs', FineTuningJobsPage, { query, ...options });\r\n  }\r\n\r\n  /**\r\n   * Immediately cancel a fine-tune job.\r\n   */\r\n  cancel(fineTuningJobId: string, options?: Core.RequestOptions): Core.APIPromise<FineTuningJob> {\r\n    return this.post(`/fine_tuning/jobs/${fineTuningJobId}/cancel`, options);\r\n  }\r\n\r\n  /**\r\n   * Get status updates for a fine-tuning job.\r\n   */\r\n  listEvents(\r\n    fineTuningJobId: string,\r\n    query?: JobListEventsParams,\r\n    options?: Core.RequestOptions,\r\n  ): Core.PagePromise<FineTuningJobEventsPage, FineTuningJobEvent>;\r\n  listEvents(\r\n    fineTuningJobId: string,\r\n    options?: Core.RequestOptions,\r\n  ): Core.PagePromise<FineTuningJobEventsPage, FineTuningJobEvent>;\r\n  listEvents(\r\n    fineTuningJobId: string,\r\n    query: JobListEventsParams | Core.RequestOptions = {},\r\n    options?: Core.RequestOptions,\r\n  ): Core.PagePromise<FineTuningJobEventsPage, FineTuningJobEvent> {\r\n    if (isRequestOptions(query)) {\r\n      return this.listEvents(fineTuningJobId, {}, query);\r\n    }\r\n    return this.getAPIList(`/fine_tuning/jobs/${fineTuningJobId}/events`, FineTuningJobEventsPage, {\r\n      query,\r\n      ...options,\r\n    });\r\n  }\r\n}\r\n\r\nexport class FineTuningJobsPage extends CursorPage<FineTuningJob> {}\r\n// alias so we can export it in the namespace\r\ntype _FineTuningJobsPage = FineTuningJobsPage;\r\n\r\nexport class FineTuningJobEventsPage extends CursorPage<FineTuningJobEvent> {}\r\n// alias so we can export it in the namespace\r\ntype _FineTuningJobEventsPage = FineTuningJobEventsPage;\r\n\r\n/**\r\n * The `fine_tuning.job` object represents a fine-tuning job that has been created\r\n * through the API.\r\n */\r\nexport interface FineTuningJob {\r\n  /**\r\n   * The object identifier, which can be referenced in the API endpoints.\r\n   */\r\n  id: string;\r\n\r\n  /**\r\n   * The unix timestamp for when the fine-tuning job was created.\r\n   */\r\n  created_at: number;\r\n\r\n  /**\r\n   * The name of the fine-tuned model that is being created.\r\n   */\r\n  fine_tuned_model: string | null;\r\n\r\n  /**\r\n   * The hyperparameters used for the fine-tuning job. See the\r\n   * [fine-tuning guide](/docs/guides/fine-tuning) for more details.\r\n   */\r\n  hyperparameters: FineTuningJob.Hyperparameters;\r\n\r\n  /**\r\n   * The base model that is being fine-tuned.\r\n   */\r\n  model: string;\r\n\r\n  /**\r\n   * The object type, which is always \"fine_tuning.job\".\r\n   */\r\n  object: string;\r\n\r\n  /**\r\n   * The organization that owns the fine-tuning job.\r\n   */\r\n  organization_id: string;\r\n\r\n  /**\r\n   * The compiled results files for the fine-tuning job.\r\n   */\r\n  result_files: Array<Files.FileObject>;\r\n\r\n  /**\r\n   * The current status of the fine-tuning job, which can be either `created`,\r\n   * `pending`, `running`, `succeeded`, `failed`, or `cancelled`.\r\n   */\r\n  status: string;\r\n\r\n  /**\r\n   * The total number of billable tokens processed by this fine tuning job.\r\n   */\r\n  trained_tokens: number;\r\n\r\n  /**\r\n   * The file ID used for training.\r\n   */\r\n  training_file: string;\r\n\r\n  /**\r\n   * The file ID used for validation.\r\n   */\r\n  validation_file: string;\r\n\r\n  /**\r\n   * The unix timestamp for when the fine-tuning job was finished.\r\n   */\r\n  finished_at?: number;\r\n}\r\n\r\nexport namespace FineTuningJob {\r\n  /**\r\n   * The hyperparameters used for the fine-tuning job. See the\r\n   * [fine-tuning guide](/docs/guides/fine-tuning) for more details.\r\n   */\r\n  export interface Hyperparameters {\r\n    /**\r\n     * The number of epochs to train the model for. An epoch refers to one full cycle\r\n     * through the training dataset. \"Auto\" decides the optimal number of epochs based\r\n     * on the size of the dataset. If setting the number manually, we support any\r\n     * number between 1 and 50 epochs.\r\n     */\r\n    n_epochs?: 'auto' | number;\r\n  }\r\n}\r\n\r\nexport interface FineTuningJobEvent {\r\n  id: string;\r\n\r\n  created_at: number;\r\n\r\n  level: 'info' | 'warn' | 'error';\r\n\r\n  message: string;\r\n\r\n  object: string;\r\n}\r\n\r\nexport interface JobCreateParams {\r\n  /**\r\n   * The name of the model to fine-tune. You can select one of the\r\n   * [supported models](/docs/guides/fine-tuning/what-models-can-be-fine-tuned).\r\n   */\r\n  model: (string & {}) | 'babbage-002' | 'davinci-002' | 'gpt-3.5-turbo';\r\n\r\n  /**\r\n   * The ID of an uploaded file that contains training data.\r\n   *\r\n   * See [upload file](/docs/api-reference/files/upload) for how to upload a file.\r\n   *\r\n   * Your dataset must be formatted as a JSONL file. Additionally, you must upload\r\n   * your file with the purpose `fine-tune`.\r\n   *\r\n   * See the [fine-tuning guide](/docs/guides/fine-tuning) for more details.\r\n   */\r\n  training_file: string;\r\n\r\n  /**\r\n   * The hyperparameters used for the fine-tuning job.\r\n   */\r\n  hyperparameters?: JobCreateParams.Hyperparameters;\r\n\r\n  /**\r\n   * A string of up to 40 characters that will be added to your fine-tuned model\r\n   * name.\r\n   *\r\n   * For example, a `suffix` of \"custom-model-name\" would produce a model name like\r\n   * `ft:gpt-3.5-turbo:openai:custom-model-name:7p4lURel`.\r\n   */\r\n  suffix?: string | null;\r\n\r\n  /**\r\n   * The ID of an uploaded file that contains validation data.\r\n   *\r\n   * If you provide this file, the data is used to generate validation metrics\r\n   * periodically during fine-tuning. These metrics can be viewed in the fine-tuning\r\n   * results file. The same data should not be present in both train and validation\r\n   * files.\r\n   *\r\n   * Your dataset must be formatted as a JSONL file. You must upload your file with\r\n   * the purpose `fine-tune`.\r\n   *\r\n   * See the [fine-tuning guide](/docs/guides/fine-tuning) for more details.\r\n   */\r\n  validation_file?: string | null;\r\n}\r\n\r\nexport namespace JobCreateParams {\r\n  /**\r\n   * The hyperparameters used for the fine-tuning job.\r\n   */\r\n  export interface Hyperparameters {\r\n    /**\r\n     * The number of epochs to train the model for. An epoch refers to one full cycle\r\n     * through the training dataset.\r\n     */\r\n    n_epochs?: 'auto' | number;\r\n  }\r\n}\r\n\r\nexport interface JobListParams extends CursorPageParams {}\r\n\r\nexport interface JobListEventsParams extends CursorPageParams {}\r\n\r\nexport namespace Jobs {\r\n  export import FineTuningJob = API.FineTuningJob;\r\n  export import FineTuningJobEvent = API.FineTuningJobEvent;\r\n  export type FineTuningJobsPage = _FineTuningJobsPage;\r\n  export type FineTuningJobEventsPage = _FineTuningJobEventsPage;\r\n  export import JobCreateParams = API.JobCreateParams;\r\n  export import JobListParams = API.JobListParams;\r\n  export import JobListEventsParams = API.JobListEventsParams;\r\n}\r\n", "// File generated from our OpenAPI spec by Stainless.\r\n\r\nimport { APIResource } from '../../resource';\r\nimport { Jobs } from './jobs';\r\nimport * as API from './index';\r\n\r\nexport class FineTuning extends APIResource {\r\n  jobs: Jobs = new Jobs(this.client);\r\n}\r\n\r\nexport namespace FineTuning {\r\n  export import Jobs = API.Jobs;\r\n  export import FineTuningJob = API.FineTuningJob;\r\n  export import FineTuningJobEvent = API.FineTuningJobEvent;\r\n  export import FineTuningJobsPage = API.FineTuningJobsPage;\r\n  export import FineTuningJobEventsPage = API.FineTuningJobEventsPage;\r\n  export import JobCreateParams = API.JobCreateParams;\r\n  export import JobListParams = API.JobListParams;\r\n  export import JobListEventsParams = API.JobListEventsParams;\r\n}\r\n", "// File generated from our OpenAPI spec by Stainless.\r\n\r\nimport * as Core from '../core';\r\nimport { APIResource } from '../resource';\r\nimport * as API from './index';\r\nimport { type Uploadable, multipartFormRequestOptions } from '../core';\r\n\r\nexport class Images extends APIResource {\r\n  /**\r\n   * Creates a variation of a given image.\r\n   */\r\n  createVariation(\r\n    body: ImageCreateVariationParams,\r\n    options?: Core.RequestOptions,\r\n  ): Core.APIPromise<ImagesResponse> {\r\n    return this.post('/images/variations', multipartFormRequestOptions({ body, ...options }));\r\n  }\r\n\r\n  /**\r\n   * Creates an edited or extended image given an original image and a prompt.\r\n   */\r\n  edit(body: ImageEditParams, options?: Core.RequestOptions): Core.APIPromise<ImagesResponse> {\r\n    return this.post('/images/edits', multipartFormRequestOptions({ body, ...options }));\r\n  }\r\n\r\n  /**\r\n   * Creates an image given a prompt.\r\n   */\r\n  generate(body: ImageGenerateParams, options?: Core.RequestOptions): Core.APIPromise<ImagesResponse> {\r\n    return this.post('/images/generations', { body, ...options });\r\n  }\r\n}\r\n\r\n/**\r\n * Represents the url or the content of an image generated by the OpenAI API.\r\n */\r\nexport interface Image {\r\n  /**\r\n   * The base64-encoded JSON of the generated image, if `response_format` is\r\n   * `b64_json`.\r\n   */\r\n  b64_json?: string;\r\n\r\n  /**\r\n   * The URL of the generated image, if `response_format` is `url` (default).\r\n   */\r\n  url?: string;\r\n}\r\n\r\nexport interface ImagesResponse {\r\n  created: number;\r\n\r\n  data: Array<Image>;\r\n}\r\n\r\nexport interface ImageCreateVariationParams {\r\n  /**\r\n   * The image to use as the basis for the variation(s). Must be a valid PNG file,\r\n   * less than 4MB, and square.\r\n   */\r\n  image: Uploadable;\r\n\r\n  /**\r\n   * The number of images to generate. Must be between 1 and 10.\r\n   */\r\n  n?: number | null;\r\n\r\n  /**\r\n   * The format in which the generated images are returned. Must be one of `url` or\r\n   * `b64_json`.\r\n   */\r\n  response_format?: 'url' | 'b64_json' | null;\r\n\r\n  /**\r\n   * The size of the generated images. Must be one of `256x256`, `512x512`, or\r\n   * `1024x1024`.\r\n   */\r\n  size?: '256x256' | '512x512' | '1024x1024' | null;\r\n\r\n  /**\r\n   * A unique identifier representing your end-user, which can help OpenAI to monitor\r\n   * and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids).\r\n   */\r\n  user?: string;\r\n}\r\n\r\nexport interface ImageEditParams {\r\n  /**\r\n   * The image to edit. Must be a valid PNG file, less than 4MB, and square. If mask\r\n   * is not provided, image must have transparency, which will be used as the mask.\r\n   */\r\n  image: Uploadable;\r\n\r\n  /**\r\n   * A text description of the desired image(s). The maximum length is 1000\r\n   * characters.\r\n   */\r\n  prompt: string;\r\n\r\n  /**\r\n   * An additional image whose fully transparent areas (e.g. where alpha is zero)\r\n   * indicate where `image` should be edited. Must be a valid PNG file, less than\r\n   * 4MB, and have the same dimensions as `image`.\r\n   */\r\n  mask?: Uploadable;\r\n\r\n  /**\r\n   * The number of images to generate. Must be between 1 and 10.\r\n   */\r\n  n?: number | null;\r\n\r\n  /**\r\n   * The format in which the generated images are returned. Must be one of `url` or\r\n   * `b64_json`.\r\n   */\r\n  response_format?: 'url' | 'b64_json' | null;\r\n\r\n  /**\r\n   * The size of the generated images. Must be one of `256x256`, `512x512`, or\r\n   * `1024x1024`.\r\n   */\r\n  size?: '256x256' | '512x512' | '1024x1024' | null;\r\n\r\n  /**\r\n   * A unique identifier representing your end-user, which can help OpenAI to monitor\r\n   * and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids).\r\n   */\r\n  user?: string;\r\n}\r\n\r\nexport interface ImageGenerateParams {\r\n  /**\r\n   * A text description of the desired image(s). The maximum length is 1000\r\n   * characters.\r\n   */\r\n  prompt: string;\r\n\r\n  /**\r\n   * The number of images to generate. Must be between 1 and 10.\r\n   */\r\n  n?: number | null;\r\n\r\n  /**\r\n   * The format in which the generated images are returned. Must be one of `url` or\r\n   * `b64_json`.\r\n   */\r\n  response_format?: 'url' | 'b64_json' | null;\r\n\r\n  /**\r\n   * The size of the generated images. Must be one of `256x256`, `512x512`, or\r\n   * `1024x1024`.\r\n   */\r\n  size?: '256x256' | '512x512' | '1024x1024' | null;\r\n\r\n  /**\r\n   * A unique identifier representing your end-user, which can help OpenAI to monitor\r\n   * and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids).\r\n   */\r\n  user?: string;\r\n}\r\n\r\nexport namespace Images {\r\n  export import Image = API.Image;\r\n  export import ImagesResponse = API.ImagesResponse;\r\n  export import ImageCreateVariationParams = API.ImageCreateVariationParams;\r\n  export import ImageEditParams = API.ImageEditParams;\r\n  export import ImageGenerateParams = API.ImageGenerateParams;\r\n}\r\n", "// File generated from our OpenAPI spec by Stainless.\r\n\r\nimport * as Core from '../core';\r\nimport { APIResource } from '../resource';\r\nimport * as API from './index';\r\nimport { Page } from '../pagination';\r\n\r\nexport class Models extends APIResource {\r\n  /**\r\n   * Retrieves a model instance, providing basic information about the model such as\r\n   * the owner and permissioning.\r\n   */\r\n  retrieve(model: string, options?: Core.RequestOptions): Core.APIPromise<Model> {\r\n    return this.get(`/models/${model}`, options);\r\n  }\r\n\r\n  /**\r\n   * Lists the currently available models, and provides basic information about each\r\n   * one such as the owner and availability.\r\n   */\r\n  list(options?: Core.RequestOptions): Core.PagePromise<ModelsPage, Model> {\r\n    return this.getAPIList('/models', ModelsPage, options);\r\n  }\r\n\r\n  /**\r\n   * Delete a fine-tuned model. You must have the Owner role in your organization.\r\n   */\r\n  del(model: string, options?: Core.RequestOptions): Core.APIPromise<ModelDeleted> {\r\n    return this.delete(`/models/${model}`, options);\r\n  }\r\n}\r\n\r\n/**\r\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\r\n */\r\nexport class ModelsPage extends Page<Model> {}\r\n// alias so we can export it in the namespace\r\ntype _ModelsPage = ModelsPage;\r\n\r\n/**\r\n * Describes an OpenAI model offering that can be used with the API.\r\n */\r\nexport interface Model {\r\n  /**\r\n   * The model identifier, which can be referenced in the API endpoints.\r\n   */\r\n  id: string;\r\n\r\n  /**\r\n   * The date and time when the model was created.\r\n   */\r\n  created: number;\r\n\r\n  /**\r\n   * The object type, which is always \"model\".\r\n   */\r\n  object: string;\r\n\r\n  /**\r\n   * The organization that owns the model.\r\n   */\r\n  owned_by: string;\r\n}\r\n\r\nexport interface ModelDeleted {\r\n  id: string;\r\n\r\n  deleted: boolean;\r\n\r\n  object: string;\r\n}\r\n\r\nexport namespace Models {\r\n  export import Model = API.Model;\r\n  export import ModelDeleted = API.ModelDeleted;\r\n  export type ModelsPage = _ModelsPage;\r\n}\r\n", "// File generated from our OpenAPI spec by Stainless.\r\n\r\nimport * as Core from '../core';\r\nimport { APIResource } from '../resource';\r\nimport * as API from './index';\r\n\r\nexport class Moderations extends APIResource {\r\n  /**\r\n   * Classifies if text violates OpenAI's Content Policy\r\n   */\r\n  create(\r\n    body: ModerationCreateParams,\r\n    options?: Core.RequestOptions,\r\n  ): Core.APIPromise<ModerationCreateResponse> {\r\n    return this.post('/moderations', { body, ...options });\r\n  }\r\n}\r\n\r\nexport interface Moderation {\r\n  /**\r\n   * A list of the categories, and whether they are flagged or not.\r\n   */\r\n  categories: Moderation.Categories;\r\n\r\n  /**\r\n   * A list of the categories along with their scores as predicted by model.\r\n   */\r\n  category_scores: Moderation.CategoryScores;\r\n\r\n  /**\r\n   * Whether the content violates\r\n   * [OpenAI's usage policies](/policies/usage-policies).\r\n   */\r\n  flagged: boolean;\r\n}\r\n\r\nexport namespace Moderation {\r\n  /**\r\n   * A list of the categories, and whether they are flagged or not.\r\n   */\r\n  export interface Categories {\r\n    /**\r\n     * Content that expresses, incites, or promotes harassing language towards any\r\n     * target.\r\n     */\r\n    harassment: boolean;\r\n\r\n    /**\r\n     * Harassment content that also includes violence or serious harm towards any\r\n     * target.\r\n     */\r\n    'harassment/threatening': boolean;\r\n\r\n    /**\r\n     * Content that expresses, incites, or promotes hate based on race, gender,\r\n     * ethnicity, religion, nationality, sexual orientation, disability status, or\r\n     * caste. Hateful content aimed at non-protected groups (e.g., chess players) is\r\n     * harrassment.\r\n     */\r\n    hate: boolean;\r\n\r\n    /**\r\n     * Hateful content that also includes violence or serious harm towards the targeted\r\n     * group based on race, gender, ethnicity, religion, nationality, sexual\r\n     * orientation, disability status, or caste.\r\n     */\r\n    'hate/threatening': boolean;\r\n\r\n    /**\r\n     * Content that promotes, encourages, or depicts acts of self-harm, such as\r\n     * suicide, cutting, and eating disorders.\r\n     */\r\n    'self-harm': boolean;\r\n\r\n    /**\r\n     * Content that encourages performing acts of self-harm, such as suicide, cutting,\r\n     * and eating disorders, or that gives instructions or advice on how to commit such\r\n     * acts.\r\n     */\r\n    'self-harm/instructions': boolean;\r\n\r\n    /**\r\n     * Content where the speaker expresses that they are engaging or intend to engage\r\n     * in acts of self-harm, such as suicide, cutting, and eating disorders.\r\n     */\r\n    'self-harm/intent': boolean;\r\n\r\n    /**\r\n     * Content meant to arouse sexual excitement, such as the description of sexual\r\n     * activity, or that promotes sexual services (excluding sex education and\r\n     * wellness).\r\n     */\r\n    sexual: boolean;\r\n\r\n    /**\r\n     * Sexual content that includes an individual who is under 18 years old.\r\n     */\r\n    'sexual/minors': boolean;\r\n\r\n    /**\r\n     * Content that depicts death, violence, or physical injury.\r\n     */\r\n    violence: boolean;\r\n\r\n    /**\r\n     * Content that depicts death, violence, or physical injury in graphic detail.\r\n     */\r\n    'violence/graphic': boolean;\r\n  }\r\n\r\n  /**\r\n   * A list of the categories along with their scores as predicted by model.\r\n   */\r\n  export interface CategoryScores {\r\n    /**\r\n     * The score for the category 'harassment'.\r\n     */\r\n    harassment: number;\r\n\r\n    /**\r\n     * The score for the category 'harassment/threatening'.\r\n     */\r\n    'harassment/threatening': number;\r\n\r\n    /**\r\n     * The score for the category 'hate'.\r\n     */\r\n    hate: number;\r\n\r\n    /**\r\n     * The score for the category 'hate/threatening'.\r\n     */\r\n    'hate/threatening': number;\r\n\r\n    /**\r\n     * The score for the category 'self-harm'.\r\n     */\r\n    'self-harm': number;\r\n\r\n    /**\r\n     * The score for the category 'self-harm/instructions'.\r\n     */\r\n    'self-harm/instructions': number;\r\n\r\n    /**\r\n     * The score for the category 'self-harm/intent'.\r\n     */\r\n    'self-harm/intent': number;\r\n\r\n    /**\r\n     * The score for the category 'sexual'.\r\n     */\r\n    sexual: number;\r\n\r\n    /**\r\n     * The score for the category 'sexual/minors'.\r\n     */\r\n    'sexual/minors': number;\r\n\r\n    /**\r\n     * The score for the category 'violence'.\r\n     */\r\n    violence: number;\r\n\r\n    /**\r\n     * The score for the category 'violence/graphic'.\r\n     */\r\n    'violence/graphic': number;\r\n  }\r\n}\r\n\r\n/**\r\n * Represents policy compliance report by OpenAI's content moderation model against\r\n * a given input.\r\n */\r\nexport interface ModerationCreateResponse {\r\n  /**\r\n   * The unique identifier for the moderation request.\r\n   */\r\n  id: string;\r\n\r\n  /**\r\n   * The model used to generate the moderation results.\r\n   */\r\n  model: string;\r\n\r\n  /**\r\n   * A list of moderation objects.\r\n   */\r\n  results: Array<Moderation>;\r\n}\r\n\r\nexport interface ModerationCreateParams {\r\n  /**\r\n   * The input text to classify\r\n   */\r\n  input: string | Array<string>;\r\n\r\n  /**\r\n   * Two content moderations models are available: `text-moderation-stable` and\r\n   * `text-moderation-latest`.\r\n   *\r\n   * The default is `text-moderation-latest` which will be automatically upgraded\r\n   * over time. This ensures you are always using our most accurate model. If you use\r\n   * `text-moderation-stable`, we will provide advanced notice before updating the\r\n   * model. Accuracy of `text-moderation-stable` may be slightly lower than for\r\n   * `text-moderation-latest`.\r\n   */\r\n  model?: (string & {}) | 'text-moderation-latest' | 'text-moderation-stable';\r\n}\r\n\r\nexport namespace Moderations {\r\n  export import Moderation = API.Moderation;\r\n  export import ModerationCreateResponse = API.ModerationCreateResponse;\r\n  export import ModerationCreateParams = API.ModerationCreateParams;\r\n}\r\n", "// File generated from our OpenAPI spec by Stainless.\r\n\r\nimport * as Core from './core';\r\nimport * as Pagination from './pagination';\r\nimport * as API from './resources/index';\r\nimport * as Errors from './error';\r\nimport type { Agent } from './_shims/agent';\r\nimport * as Uploads from './uploads';\r\n\r\nexport interface ClientOptions {\r\n  /**\r\n   * Defaults to process.env[\"OPENAI_API_KEY\"].\r\n   */\r\n  apiKey?: string;\r\n\r\n  /**\r\n   * Override the default base URL for the API, e.g., \"https://api.example.com/v2/\"\r\n   */\r\n  baseURL?: string;\r\n\r\n  /**\r\n   * The maximum amount of time (in milliseconds) that the client should wait for a response\r\n   * from the server before timing out a single request.\r\n   *\r\n   * Note that request timeouts are retried by default, so in a worst-case scenario you may wait\r\n   * much longer than this timeout before the promise succeeds or fails.\r\n   */\r\n  timeout?: number;\r\n\r\n  /**\r\n   * An HTTP agent used to manage HTTP(S) connections.\r\n   *\r\n   * If not provided, an agent will be constructed by default in the Node.js environment,\r\n   * otherwise no agent is used.\r\n   */\r\n  httpAgent?: Agent;\r\n\r\n  /**\r\n   * Specify a custom `fetch` function implementation.\r\n   *\r\n   * If not provided, we use `node-fetch` on Node.js and otherwise expect that `fetch` is\r\n   * defined globally.\r\n   */\r\n  fetch?: Core.Fetch | undefined;\r\n\r\n  /**\r\n   * The maximum number of times that the client will retry a request in case of a\r\n   * temporary failure, like a network error or a 5XX error from the server.\r\n   *\r\n   * @default 2\r\n   */\r\n  maxRetries?: number;\r\n\r\n  /**\r\n   * Default headers to include with every request to the API.\r\n   *\r\n   * These can be removed in individual requests by explicitly setting the\r\n   * header to `undefined` or `null` in request options.\r\n   */\r\n  defaultHeaders?: Core.Headers;\r\n\r\n  /**\r\n   * Default query parameters to include with every request to the API.\r\n   *\r\n   * These can be removed in individual requests by explicitly setting the\r\n   * param to `undefined` in request options.\r\n   */\r\n  defaultQuery?: Core.DefaultQuery;\r\n\r\n  /**\r\n   * By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\r\n   * Only set this option to `true` if you understand the risks and have appropriate mitigations in place.\r\n   */\r\n  dangerouslyAllowBrowser?: boolean;\r\n\r\n  organization?: string | null;\r\n}\r\n\r\n/** API Client for interfacing with the OpenAI API. */\r\nexport class OpenAI extends Core.APIClient {\r\n  apiKey: string;\r\n  organization?: string | null;\r\n\r\n  private _options: ClientOptions;\r\n\r\n  /**\r\n   * API Client for interfacing with the OpenAI API.\r\n   *\r\n   * @param {string} [opts.apiKey=process.env['OPENAI_API_KEY']] - The API Key to send to the API.\r\n   * @param {string} [opts.baseURL] - Override the default base URL for the API.\r\n   * @param {number} [opts.timeout=10 minutes] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\r\n   * @param {number} [opts.httpAgent] - An HTTP agent used to manage HTTP(s) connections.\r\n   * @param {Core.Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\r\n   * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\r\n   * @param {Core.Headers} opts.defaultHeaders - Default headers to include with every request to the API.\r\n   * @param {Core.DefaultQuery} opts.defaultQuery - Default query parameters to include with every request to the API.\r\n   * @param {boolean} [opts.dangerouslyAllowBrowser=false] - By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\r\n   * @param {string | null} [opts.organization]\r\n   */\r\n  constructor({\r\n    apiKey = Core.readEnv('OPENAI_API_KEY'),\r\n    organization = Core.readEnv('OPENAI_ORG_ID') ?? null,\r\n    ...opts\r\n  }: ClientOptions = {}) {\r\n    if (apiKey === undefined) {\r\n      throw new Error(\r\n        \"The OPENAI_API_KEY environment variable is missing or empty; either provide it, or instantiate the OpenAI client with an apiKey option, like new OpenAI({ apiKey: 'my apiKey' }).\",\r\n      );\r\n    }\r\n\r\n    const options: ClientOptions = {\r\n      apiKey,\r\n      organization,\r\n      baseURL: `https://api.openai.com/v1`,\r\n      ...opts,\r\n    };\r\n\r\n    if (!options.dangerouslyAllowBrowser && Core.isRunningInBrowser()) {\r\n      throw new Error(\r\n        \"It looks like you're running in a browser-like environment.\\n\\nThis is disabled by default, as it risks exposing your secret API credentials to attackers.\\nIf you understand the risks and have appropriate mitigations in place,\\nyou can set the `dangerouslyAllowBrowser` option to `true`, e.g.,\\n\\nnew OpenAI({ apiKey, dangerouslyAllowBrowser: true });\\n\\nhttps://help.openai.com/en/articles/5112595-best-practices-for-api-key-safety\\n\",\r\n      );\r\n    }\r\n\r\n    super({\r\n      baseURL: options.baseURL!,\r\n      timeout: options.timeout ?? 600000 /* 10 minutes */,\r\n      httpAgent: options.httpAgent,\r\n      maxRetries: options.maxRetries,\r\n      fetch: options.fetch,\r\n    });\r\n    this._options = options;\r\n\r\n    this.apiKey = apiKey;\r\n    this.organization = organization;\r\n  }\r\n\r\n  completions: API.Completions = new API.Completions(this);\r\n  chat: API.Chat = new API.Chat(this);\r\n  edits: API.Edits = new API.Edits(this);\r\n  embeddings: API.Embeddings = new API.Embeddings(this);\r\n  files: API.Files = new API.Files(this);\r\n  images: API.Images = new API.Images(this);\r\n  audio: API.Audio = new API.Audio(this);\r\n  moderations: API.Moderations = new API.Moderations(this);\r\n  models: API.Models = new API.Models(this);\r\n  fineTuning: API.FineTuning = new API.FineTuning(this);\r\n  fineTunes: API.FineTunes = new API.FineTunes(this);\r\n\r\n  protected override defaultQuery(): Core.DefaultQuery | undefined {\r\n    return this._options.defaultQuery;\r\n  }\r\n\r\n  protected override defaultHeaders(opts: Core.FinalRequestOptions): Core.Headers {\r\n    return {\r\n      ...super.defaultHeaders(opts),\r\n      'OpenAI-Organization': this.organization,\r\n      ...this._options.defaultHeaders,\r\n    };\r\n  }\r\n\r\n  protected override authHeaders(opts: Core.FinalRequestOptions): Core.Headers {\r\n    return { Authorization: `Bearer ${this.apiKey}` };\r\n  }\r\n\r\n  static OpenAI = this;\r\n\r\n  static APIError = Errors.APIError;\r\n  static APIConnectionError = Errors.APIConnectionError;\r\n  static APIConnectionTimeoutError = Errors.APIConnectionTimeoutError;\r\n  static APIUserAbortError = Errors.APIUserAbortError;\r\n  static NotFoundError = Errors.NotFoundError;\r\n  static ConflictError = Errors.ConflictError;\r\n  static RateLimitError = Errors.RateLimitError;\r\n  static BadRequestError = Errors.BadRequestError;\r\n  static AuthenticationError = Errors.AuthenticationError;\r\n  static InternalServerError = Errors.InternalServerError;\r\n  static PermissionDeniedError = Errors.PermissionDeniedError;\r\n  static UnprocessableEntityError = Errors.UnprocessableEntityError;\r\n}\r\n\r\nexport const {\r\n  APIError,\r\n  APIConnectionError,\r\n  APIConnectionTimeoutError,\r\n  APIUserAbortError,\r\n  NotFoundError,\r\n  ConflictError,\r\n  RateLimitError,\r\n  BadRequestError,\r\n  AuthenticationError,\r\n  InternalServerError,\r\n  PermissionDeniedError,\r\n  UnprocessableEntityError,\r\n} = Errors;\r\n\r\nexport import toFile = Uploads.toFile;\r\nexport import fileFromPath = Uploads.fileFromPath;\r\n\r\nexport namespace OpenAI {\r\n  // Helper functions\r\n  export import toFile = Uploads.toFile;\r\n  export import fileFromPath = Uploads.fileFromPath;\r\n\r\n  export import RequestOptions = Core.RequestOptions;\r\n\r\n  export import Page = Pagination.Page;\r\n  export import PageResponse = Pagination.PageResponse;\r\n\r\n  export import CursorPage = Pagination.CursorPage;\r\n  export import CursorPageParams = Pagination.CursorPageParams;\r\n  export import CursorPageResponse = Pagination.CursorPageResponse;\r\n\r\n  export import Completions = API.Completions;\r\n  export import Completion = API.Completion;\r\n  export import CompletionChoice = API.CompletionChoice;\r\n  export import CompletionUsage = API.CompletionUsage;\r\n  export import CompletionCreateParams = API.CompletionCreateParams;\r\n  export import CompletionCreateParamsNonStreaming = API.CompletionCreateParamsNonStreaming;\r\n  export import CompletionCreateParamsStreaming = API.CompletionCreateParamsStreaming;\r\n\r\n  export import Chat = API.Chat;\r\n\r\n  export import Edits = API.Edits;\r\n  export import Edit = API.Edit;\r\n  export import EditCreateParams = API.EditCreateParams;\r\n\r\n  export import Embeddings = API.Embeddings;\r\n  export import CreateEmbeddingResponse = API.CreateEmbeddingResponse;\r\n  export import Embedding = API.Embedding;\r\n  export import EmbeddingCreateParams = API.EmbeddingCreateParams;\r\n\r\n  export import Files = API.Files;\r\n  export import FileContent = API.FileContent;\r\n  export import FileDeleted = API.FileDeleted;\r\n  export import FileObject = API.FileObject;\r\n  export import FileObjectsPage = API.FileObjectsPage;\r\n  export import FileCreateParams = API.FileCreateParams;\r\n\r\n  export import Images = API.Images;\r\n  export import Image = API.Image;\r\n  export import ImagesResponse = API.ImagesResponse;\r\n  export import ImageCreateVariationParams = API.ImageCreateVariationParams;\r\n  export import ImageEditParams = API.ImageEditParams;\r\n  export import ImageGenerateParams = API.ImageGenerateParams;\r\n\r\n  export import Audio = API.Audio;\r\n\r\n  export import Moderations = API.Moderations;\r\n  export import Moderation = API.Moderation;\r\n  export import ModerationCreateResponse = API.ModerationCreateResponse;\r\n  export import ModerationCreateParams = API.ModerationCreateParams;\r\n\r\n  export import Models = API.Models;\r\n  export import Model = API.Model;\r\n  export import ModelDeleted = API.ModelDeleted;\r\n  export import ModelsPage = API.ModelsPage;\r\n\r\n  export import FineTuning = API.FineTuning;\r\n\r\n  export import FineTunes = API.FineTunes;\r\n  export import FineTune = API.FineTune;\r\n  export import FineTuneEvent = API.FineTuneEvent;\r\n  export import FineTuneEventsListResponse = API.FineTuneEventsListResponse;\r\n  export import FineTunesPage = API.FineTunesPage;\r\n  export import FineTuneCreateParams = API.FineTuneCreateParams;\r\n  export import FineTuneListEventsParams = API.FineTuneListEventsParams;\r\n  export import FineTuneListEventsParamsNonStreaming = API.FineTuneListEventsParamsNonStreaming;\r\n  export import FineTuneListEventsParamsStreaming = API.FineTuneListEventsParamsStreaming;\r\n}\r\n\r\nexport default OpenAI;\r\n", "import { zodToJsonSchema } from \"zod-to-json-schema\";\r\n/**\r\n * Formats a `StructuredTool` instance into a format that is compatible\r\n * with OpenAI's ChatCompletionFunctions. It uses the `zodToJsonSchema`\r\n * function to convert the schema of the `StructuredTool` into a JSON\r\n * schema, which is then used as the parameters for the OpenAI function.\r\n */\r\nexport function formatToOpenAIFunction(tool) {\r\n    return {\r\n        name: tool.name,\r\n        description: tool.description,\r\n        parameters: zodToJsonSchema(tool.schema),\r\n    };\r\n}\r\n", "/**\r\n * This function generates an endpoint URL for (Azure) OpenAI\r\n * based on the configuration parameters provided.\r\n *\r\n * @param {OpenAIEndpointConfig} config - The configuration object for the (Azure) endpoint.\r\n *\r\n * @property {string} config.azureOpenAIApiDeploymentName - The deployment name of Azure OpenAI.\r\n * @property {string} config.azureOpenAIApiInstanceName - The instance name of Azure OpenAI.\r\n * @property {string} config.azureOpenAIApiKey - The API Key for Azure OpenAI.\r\n * @property {string} config.azureOpenAIBasePath - The base path for Azure OpenAI.\r\n * @property {string} config.baseURL - Some other custom base path URL.\r\n *\r\n * The function operates as follows:\r\n * - If both `azureOpenAIBasePath` and `azureOpenAIApiDeploymentName` (plus `azureOpenAIApiKey`) are provided, it returns an URL combining these two parameters (`${azureOpenAIBasePath}/${azureOpenAIApiDeploymentName}`).\r\n * - If `azureOpenAIApiKey` is provided, it checks for `azureOpenAIApiInstanceName` and `azureOpenAIApiDeploymentName` and throws an error if any of these is missing. If both are provided, it generates an URL incorporating these parameters.\r\n * - If none of the above conditions are met, return any custom `baseURL`.\r\n * - The function returns the generated URL as a string, or undefined if no custom paths are specified.\r\n *\r\n * @throws Will throw an error if the necessary parameters for generating the URL are missing.\r\n *\r\n * @returns {string | undefined} The generated (Azure) OpenAI endpoint URL.\r\n */\r\nexport function getEndpoint(config) {\r\n    const { azureOpenAIApiDeploymentName, azureOpenAIApiInstanceName, azureOpenAIApiKey, azureOpenAIBasePath, baseURL, } = config;\r\n    if (azureOpenAIApiKey &&\r\n        azureOpenAIBasePath &&\r\n        azureOpenAIApiDeploymentName) {\r\n        return `${azureOpenAIBasePath}/${azureOpenAIApiDeploymentName}`;\r\n    }\r\n    if (azureOpenAIApiKey) {\r\n        if (!azureOpenAIApiInstanceName) {\r\n            throw new Error(\"azureOpenAIApiInstanceName is required when using azureOpenAIApiKey\");\r\n        }\r\n        if (!azureOpenAIApiDeploymentName) {\r\n            throw new Error(\"azureOpenAIApiDeploymentName is a required parameter when using azureOpenAIApiKey\");\r\n        }\r\n        return `https://${azureOpenAIApiInstanceName}.openai.azure.com/openai/deployments/${azureOpenAIApiDeploymentName}`;\r\n    }\r\n    return baseURL;\r\n}\r\n", "export const promptLayerTrackRequest = async (callerFunc, functionName, kwargs, plTags, \r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nrequestResponse, startTime, endTime, apiKey) => {\r\n    // https://github.com/MagnivOrg/promptlayer-js-helper\r\n    const promptLayerResp = await callerFunc.call(fetch, \"https://api.promptlayer.com/track-request\", {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n            function_name: functionName,\r\n            provider: \"langchain\",\r\n            kwargs,\r\n            tags: plTags,\r\n            request_response: requestResponse,\r\n            request_start_time: Math.floor(startTime / 1000),\r\n            request_end_time: Math.floor(endTime / 1000),\r\n            api_key: apiKey,\r\n        }),\r\n    });\r\n    return promptLayerResp.json();\r\n};\r\n", "import { AIMessage, HumanMessage, RUN_KEY, coerceMessageLikeToMessage, } from \"../schema/index.js\";\r\nimport { BaseLanguageModel, } from \"../base_language/index.js\";\r\nimport { CallbackManager, } from \"../callbacks/manager.js\";\r\n/**\r\n * Creates a transform stream for encoding chat message chunks.\r\n * @deprecated Use {@link BytesOutputParser} instead\r\n * @returns A TransformStream instance that encodes chat message chunks.\r\n */\r\nexport function createChatMessageChunkEncoderStream() {\r\n    const textEncoder = new TextEncoder();\r\n    return new TransformStream({\r\n        transform(chunk, controller) {\r\n            controller.enqueue(textEncoder.encode(chunk.content));\r\n        },\r\n    });\r\n}\r\n/**\r\n * Base class for chat models. It extends the BaseLanguageModel class and\r\n * provides methods for generating chat based on input messages.\r\n */\r\nexport class BaseChatModel extends BaseLanguageModel {\r\n    constructor(fields) {\r\n        super(fields);\r\n        Object.defineProperty(this, \"lc_namespace\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\"langchain\", \"chat_models\", this._llmType()]\r\n        });\r\n    }\r\n    _separateRunnableConfigFromCallOptions(options) {\r\n        const [runnableConfig, callOptions] = super._separateRunnableConfigFromCallOptions(options);\r\n        if (callOptions?.timeout && !callOptions.signal) {\r\n            callOptions.signal = AbortSignal.timeout(callOptions.timeout);\r\n        }\r\n        return [runnableConfig, callOptions];\r\n    }\r\n    /**\r\n     * Invokes the chat model with a single input.\r\n     * @param input The input for the language model.\r\n     * @param options The call options.\r\n     * @returns A Promise that resolves to a BaseMessageChunk.\r\n     */\r\n    async invoke(input, options) {\r\n        const promptValue = BaseChatModel._convertInputToPromptValue(input);\r\n        const result = await this.generatePrompt([promptValue], options, options?.callbacks);\r\n        const chatGeneration = result.generations[0][0];\r\n        // TODO: Remove cast after figuring out inheritance\r\n        return chatGeneration.message;\r\n    }\r\n    // eslint-disable-next-line require-yield\r\n    async *_streamResponseChunks(_messages, _options, _runManager) {\r\n        throw new Error(\"Not implemented.\");\r\n    }\r\n    async *_streamIterator(input, options) {\r\n        // Subclass check required to avoid double callbacks with default implementation\r\n        if (this._streamResponseChunks ===\r\n            BaseChatModel.prototype._streamResponseChunks) {\r\n            yield this.invoke(input, options);\r\n        }\r\n        else {\r\n            const prompt = BaseChatModel._convertInputToPromptValue(input);\r\n            const messages = prompt.toChatMessages();\r\n            const [runnableConfig, callOptions] = this._separateRunnableConfigFromCallOptions(options);\r\n            const callbackManager_ = await CallbackManager.configure(runnableConfig.callbacks, this.callbacks, runnableConfig.tags, this.tags, runnableConfig.metadata, this.metadata, { verbose: this.verbose });\r\n            const extra = {\r\n                options: callOptions,\r\n                invocation_params: this?.invocationParams(callOptions),\r\n            };\r\n            const runManagers = await callbackManager_?.handleChatModelStart(this.toJSON(), [messages], undefined, undefined, extra);\r\n            let generationChunk;\r\n            try {\r\n                for await (const chunk of this._streamResponseChunks(messages, callOptions, runManagers?.[0])) {\r\n                    yield chunk.message;\r\n                    if (!generationChunk) {\r\n                        generationChunk = chunk;\r\n                    }\r\n                    else {\r\n                        generationChunk = generationChunk.concat(chunk);\r\n                    }\r\n                }\r\n            }\r\n            catch (err) {\r\n                await Promise.all((runManagers ?? []).map((runManager) => runManager?.handleLLMError(err)));\r\n                throw err;\r\n            }\r\n            await Promise.all((runManagers ?? []).map((runManager) => runManager?.handleLLMEnd({\r\n                // TODO: Remove cast after figuring out inheritance\r\n                generations: [[generationChunk]],\r\n            })));\r\n        }\r\n    }\r\n    /** @ignore */\r\n    async _generateUncached(messages, parsedOptions, handledOptions) {\r\n        const baseMessages = messages.map((messageList) => messageList.map(coerceMessageLikeToMessage));\r\n        // create callback manager and start run\r\n        const callbackManager_ = await CallbackManager.configure(handledOptions.callbacks, this.callbacks, handledOptions.tags, this.tags, handledOptions.metadata, this.metadata, { verbose: this.verbose });\r\n        const extra = {\r\n            options: parsedOptions,\r\n            invocation_params: this?.invocationParams(parsedOptions),\r\n        };\r\n        const runManagers = await callbackManager_?.handleChatModelStart(this.toJSON(), baseMessages, undefined, undefined, extra);\r\n        // generate results\r\n        const results = await Promise.allSettled(baseMessages.map((messageList, i) => this._generate(messageList, { ...parsedOptions, promptIndex: i }, runManagers?.[i])));\r\n        // handle results\r\n        const generations = [];\r\n        const llmOutputs = [];\r\n        await Promise.all(results.map(async (pResult, i) => {\r\n            if (pResult.status === \"fulfilled\") {\r\n                const result = pResult.value;\r\n                generations[i] = result.generations;\r\n                llmOutputs[i] = result.llmOutput;\r\n                return runManagers?.[i]?.handleLLMEnd({\r\n                    generations: [result.generations],\r\n                    llmOutput: result.llmOutput,\r\n                });\r\n            }\r\n            else {\r\n                // status === \"rejected\"\r\n                await runManagers?.[i]?.handleLLMError(pResult.reason);\r\n                return Promise.reject(pResult.reason);\r\n            }\r\n        }));\r\n        // create combined output\r\n        const output = {\r\n            generations,\r\n            llmOutput: llmOutputs.length\r\n                ? this._combineLLMOutput?.(...llmOutputs)\r\n                : undefined,\r\n        };\r\n        Object.defineProperty(output, RUN_KEY, {\r\n            value: runManagers\r\n                ? { runIds: runManagers?.map((manager) => manager.runId) }\r\n                : undefined,\r\n            configurable: true,\r\n        });\r\n        return output;\r\n    }\r\n    /**\r\n     * Generates chat based on the input messages.\r\n     * @param messages An array of arrays of BaseMessage instances.\r\n     * @param options The call options or an array of stop sequences.\r\n     * @param callbacks The callbacks for the language model.\r\n     * @returns A Promise that resolves to an LLMResult.\r\n     */\r\n    async generate(messages, options, callbacks) {\r\n        // parse call options\r\n        let parsedOptions;\r\n        if (Array.isArray(options)) {\r\n            parsedOptions = { stop: options };\r\n        }\r\n        else {\r\n            parsedOptions = options;\r\n        }\r\n        const baseMessages = messages.map((messageList) => messageList.map(coerceMessageLikeToMessage));\r\n        const [runnableConfig, callOptions] = this._separateRunnableConfigFromCallOptions(parsedOptions);\r\n        runnableConfig.callbacks = runnableConfig.callbacks ?? callbacks;\r\n        if (!this.cache) {\r\n            return this._generateUncached(baseMessages, callOptions, runnableConfig);\r\n        }\r\n        const { cache } = this;\r\n        const llmStringKey = this._getSerializedCacheKeyParametersForCall(callOptions);\r\n        const missingPromptIndices = [];\r\n        const generations = await Promise.all(baseMessages.map(async (baseMessage, index) => {\r\n            // Join all content into one string for the prompt index\r\n            const prompt = BaseChatModel._convertInputToPromptValue(baseMessage).toString();\r\n            const result = await cache.lookup(prompt, llmStringKey);\r\n            if (!result) {\r\n                missingPromptIndices.push(index);\r\n            }\r\n            return result;\r\n        }));\r\n        let llmOutput = {};\r\n        if (missingPromptIndices.length > 0) {\r\n            const results = await this._generateUncached(missingPromptIndices.map((i) => baseMessages[i]), callOptions, runnableConfig);\r\n            await Promise.all(results.generations.map(async (generation, index) => {\r\n                const promptIndex = missingPromptIndices[index];\r\n                generations[promptIndex] = generation;\r\n                // Join all content into one string for the prompt index\r\n                const prompt = BaseChatModel._convertInputToPromptValue(baseMessages[promptIndex]).toString();\r\n                return cache.update(prompt, llmStringKey, generation);\r\n            }));\r\n            llmOutput = results.llmOutput ?? {};\r\n        }\r\n        return { generations, llmOutput };\r\n    }\r\n    /**\r\n     * Get the parameters used to invoke the model\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    invocationParams(_options) {\r\n        return {};\r\n    }\r\n    _modelType() {\r\n        return \"base_chat_model\";\r\n    }\r\n    /**\r\n     * @deprecated\r\n     * Return a json-like object representing this LLM.\r\n     */\r\n    serialize() {\r\n        return {\r\n            ...this.invocationParams(),\r\n            _type: this._llmType(),\r\n            _model: this._modelType(),\r\n        };\r\n    }\r\n    /**\r\n     * Generates a prompt based on the input prompt values.\r\n     * @param promptValues An array of BasePromptValue instances.\r\n     * @param options The call options or an array of stop sequences.\r\n     * @param callbacks The callbacks for the language model.\r\n     * @returns A Promise that resolves to an LLMResult.\r\n     */\r\n    async generatePrompt(promptValues, options, callbacks) {\r\n        const promptMessages = promptValues.map((promptValue) => promptValue.toChatMessages());\r\n        return this.generate(promptMessages, options, callbacks);\r\n    }\r\n    /**\r\n     * Makes a single call to the chat model.\r\n     * @param messages An array of BaseMessage instances.\r\n     * @param options The call options or an array of stop sequences.\r\n     * @param callbacks The callbacks for the language model.\r\n     * @returns A Promise that resolves to a BaseMessage.\r\n     */\r\n    async call(messages, options, callbacks) {\r\n        const result = await this.generate([messages.map(coerceMessageLikeToMessage)], options, callbacks);\r\n        const generations = result.generations;\r\n        return generations[0][0].message;\r\n    }\r\n    /**\r\n     * Makes a single call to the chat model with a prompt value.\r\n     * @param promptValue The value of the prompt.\r\n     * @param options The call options or an array of stop sequences.\r\n     * @param callbacks The callbacks for the language model.\r\n     * @returns A Promise that resolves to a BaseMessage.\r\n     */\r\n    async callPrompt(promptValue, options, callbacks) {\r\n        const promptMessages = promptValue.toChatMessages();\r\n        return this.call(promptMessages, options, callbacks);\r\n    }\r\n    /**\r\n     * Predicts the next message based on the input messages.\r\n     * @param messages An array of BaseMessage instances.\r\n     * @param options The call options or an array of stop sequences.\r\n     * @param callbacks The callbacks for the language model.\r\n     * @returns A Promise that resolves to a BaseMessage.\r\n     */\r\n    async predictMessages(messages, options, callbacks) {\r\n        return this.call(messages, options, callbacks);\r\n    }\r\n    /**\r\n     * Predicts the next message based on a text input.\r\n     * @param text The text input.\r\n     * @param options The call options or an array of stop sequences.\r\n     * @param callbacks The callbacks for the language model.\r\n     * @returns A Promise that resolves to a string.\r\n     */\r\n    async predict(text, options, callbacks) {\r\n        const message = new HumanMessage(text);\r\n        const result = await this.call([message], options, callbacks);\r\n        return result.content;\r\n    }\r\n}\r\n/**\r\n * An abstract class that extends BaseChatModel and provides a simple\r\n * implementation of _generate.\r\n */\r\nexport class SimpleChatModel extends BaseChatModel {\r\n    async _generate(messages, options, runManager) {\r\n        const text = await this._call(messages, options, runManager);\r\n        const message = new AIMessage(text);\r\n        return {\r\n            generations: [\r\n                {\r\n                    text: message.content,\r\n                    message,\r\n                },\r\n            ],\r\n        };\r\n    }\r\n}\r\n", "import { APIConnectionTimeoutError, APIUserAbortError } from \"openai\";\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport function wrapOpenAIClientError(e) {\r\n    let error;\r\n    if (e.constructor.name === APIConnectionTimeoutError.name) {\r\n        error = new Error(e.message);\r\n        error.name = \"TimeoutError\";\r\n    }\r\n    else if (e.constructor.name === APIUserAbortError.name) {\r\n        error = new Error(e.message);\r\n        error.name = \"AbortError\";\r\n    }\r\n    else {\r\n        error = e;\r\n    }\r\n    return error;\r\n}\r\n", "import { OpenAI as OpenAIClient } from \"openai\";\r\nimport { getModelNameForTiktoken } from \"../base_language/count_tokens.js\";\r\nimport { AIMessage, AIMessageChunk, ChatGenerationChunk, ChatMessage, ChatMessageChunk, FunctionMessageChunk, HumanMessage, HumanMessageChunk, SystemMessage, SystemMessageChunk, } from \"../schema/index.js\";\r\nimport { formatToOpenAIFunction } from \"../tools/convert_to_openai.js\";\r\nimport { getEndpoint } from \"../util/azure.js\";\r\nimport { getEnvironmentVariable } from \"../util/env.js\";\r\nimport { promptLayerTrackRequest } from \"../util/prompt-layer.js\";\r\nimport { BaseChatModel } from \"./base.js\";\r\nimport { wrapOpenAIClientError } from \"../util/openai.js\";\r\nfunction extractGenericMessageCustomRole(message) {\r\n    if (message.role !== \"system\" &&\r\n        message.role !== \"assistant\" &&\r\n        message.role !== \"user\" &&\r\n        message.role !== \"function\") {\r\n        console.warn(`Unknown message role: ${message.role}`);\r\n    }\r\n    return message.role;\r\n}\r\nfunction messageToOpenAIRole(message) {\r\n    const type = message._getType();\r\n    switch (type) {\r\n        case \"system\":\r\n            return \"system\";\r\n        case \"ai\":\r\n            return \"assistant\";\r\n        case \"human\":\r\n            return \"user\";\r\n        case \"function\":\r\n            return \"function\";\r\n        case \"generic\": {\r\n            if (!ChatMessage.isInstance(message))\r\n                throw new Error(\"Invalid generic chat message\");\r\n            return extractGenericMessageCustomRole(message);\r\n        }\r\n        default:\r\n            throw new Error(`Unknown message type: ${type}`);\r\n    }\r\n}\r\nfunction openAIResponseToChatMessage(message) {\r\n    switch (message.role) {\r\n        case \"user\":\r\n            return new HumanMessage(message.content || \"\");\r\n        case \"assistant\":\r\n            return new AIMessage(message.content || \"\", {\r\n                function_call: message.function_call,\r\n            });\r\n        case \"system\":\r\n            return new SystemMessage(message.content || \"\");\r\n        default:\r\n            return new ChatMessage(message.content || \"\", message.role ?? \"unknown\");\r\n    }\r\n}\r\nfunction _convertDeltaToMessageChunk(\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\ndelta, defaultRole) {\r\n    const role = delta.role ?? defaultRole;\r\n    const content = delta.content ?? \"\";\r\n    let additional_kwargs;\r\n    if (delta.function_call) {\r\n        additional_kwargs = {\r\n            function_call: delta.function_call,\r\n        };\r\n    }\r\n    else {\r\n        additional_kwargs = {};\r\n    }\r\n    if (role === \"user\") {\r\n        return new HumanMessageChunk({ content });\r\n    }\r\n    else if (role === \"assistant\") {\r\n        return new AIMessageChunk({ content, additional_kwargs });\r\n    }\r\n    else if (role === \"system\") {\r\n        return new SystemMessageChunk({ content });\r\n    }\r\n    else if (role === \"function\") {\r\n        return new FunctionMessageChunk({\r\n            content,\r\n            additional_kwargs,\r\n            name: delta.name,\r\n        });\r\n    }\r\n    else {\r\n        return new ChatMessageChunk({ content, role });\r\n    }\r\n}\r\n/**\r\n * Wrapper around OpenAI large language models that use the Chat endpoint.\r\n *\r\n * To use you should have the `openai` package installed, with the\r\n * `OPENAI_API_KEY` environment variable set.\r\n *\r\n * To use with Azure you should have the `openai` package installed, with the\r\n * `AZURE_OPENAI_API_KEY`,\r\n * `AZURE_OPENAI_API_INSTANCE_NAME`,\r\n * `AZURE_OPENAI_API_DEPLOYMENT_NAME`\r\n * and `AZURE_OPENAI_API_VERSION` environment variable set.\r\n * `AZURE_OPENAI_BASE_PATH` is optional and will override `AZURE_OPENAI_API_INSTANCE_NAME` if you need to use a custom endpoint.\r\n *\r\n * @remarks\r\n * Any parameters that are valid to be passed to {@link\r\n * https://platform.openai.com/docs/api-reference/chat/create |\r\n * `openai.createChatCompletion`} can be passed through {@link modelKwargs}, even\r\n * if not explicitly available on this class.\r\n */\r\nexport class ChatOpenAI extends BaseChatModel {\r\n    static lc_name() {\r\n        return \"ChatOpenAI\";\r\n    }\r\n    get callKeys() {\r\n        return [\r\n            ...super.callKeys,\r\n            \"options\",\r\n            \"function_call\",\r\n            \"functions\",\r\n            \"tools\",\r\n            \"promptIndex\",\r\n        ];\r\n    }\r\n    get lc_secrets() {\r\n        return {\r\n            openAIApiKey: \"OPENAI_API_KEY\",\r\n            azureOpenAIApiKey: \"AZURE_OPENAI_API_KEY\",\r\n            organization: \"OPENAI_ORGANIZATION\",\r\n        };\r\n    }\r\n    get lc_aliases() {\r\n        return {\r\n            modelName: \"model\",\r\n            openAIApiKey: \"openai_api_key\",\r\n            azureOpenAIApiVersion: \"azure_openai_api_version\",\r\n            azureOpenAIApiKey: \"azure_openai_api_key\",\r\n            azureOpenAIApiInstanceName: \"azure_openai_api_instance_name\",\r\n            azureOpenAIApiDeploymentName: \"azure_openai_api_deployment_name\",\r\n        };\r\n    }\r\n    constructor(fields, \r\n    /** @deprecated */\r\n    configuration) {\r\n        super(fields ?? {});\r\n        Object.defineProperty(this, \"lc_serializable\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"temperature\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"topP\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"frequencyPenalty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"presencePenalty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"n\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"logitBias\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"modelName\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"gpt-3.5-turbo\"\r\n        });\r\n        Object.defineProperty(this, \"modelKwargs\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"stop\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"user\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"timeout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"streaming\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"maxTokens\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"openAIApiKey\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"azureOpenAIApiVersion\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"azureOpenAIApiKey\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"azureOpenAIApiInstanceName\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"azureOpenAIApiDeploymentName\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"azureOpenAIBasePath\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"organization\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"client\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"clientConfig\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.openAIApiKey =\r\n            fields?.openAIApiKey ?? getEnvironmentVariable(\"OPENAI_API_KEY\");\r\n        this.azureOpenAIApiKey =\r\n            fields?.azureOpenAIApiKey ??\r\n                getEnvironmentVariable(\"AZURE_OPENAI_API_KEY\");\r\n        if (!this.azureOpenAIApiKey && !this.openAIApiKey) {\r\n            throw new Error(\"OpenAI or Azure OpenAI API key not found\");\r\n        }\r\n        this.azureOpenAIApiInstanceName =\r\n            fields?.azureOpenAIApiInstanceName ??\r\n                getEnvironmentVariable(\"AZURE_OPENAI_API_INSTANCE_NAME\");\r\n        this.azureOpenAIApiDeploymentName =\r\n            fields?.azureOpenAIApiDeploymentName ??\r\n                getEnvironmentVariable(\"AZURE_OPENAI_API_DEPLOYMENT_NAME\");\r\n        this.azureOpenAIApiVersion =\r\n            fields?.azureOpenAIApiVersion ??\r\n                getEnvironmentVariable(\"AZURE_OPENAI_API_VERSION\");\r\n        this.azureOpenAIBasePath =\r\n            fields?.azureOpenAIBasePath ??\r\n                getEnvironmentVariable(\"AZURE_OPENAI_BASE_PATH\");\r\n        this.organization =\r\n            fields?.configuration?.organization ??\r\n                getEnvironmentVariable(\"OPENAI_ORGANIZATION\");\r\n        this.modelName = fields?.modelName ?? this.modelName;\r\n        this.modelKwargs = fields?.modelKwargs ?? {};\r\n        this.timeout = fields?.timeout;\r\n        this.temperature = fields?.temperature ?? this.temperature;\r\n        this.topP = fields?.topP ?? this.topP;\r\n        this.frequencyPenalty = fields?.frequencyPenalty ?? this.frequencyPenalty;\r\n        this.presencePenalty = fields?.presencePenalty ?? this.presencePenalty;\r\n        this.maxTokens = fields?.maxTokens;\r\n        this.n = fields?.n ?? this.n;\r\n        this.logitBias = fields?.logitBias;\r\n        this.stop = fields?.stop;\r\n        this.user = fields?.user;\r\n        this.streaming = fields?.streaming ?? false;\r\n        if (this.azureOpenAIApiKey) {\r\n            if (!this.azureOpenAIApiInstanceName && !this.azureOpenAIBasePath) {\r\n                throw new Error(\"Azure OpenAI API instance name not found\");\r\n            }\r\n            if (!this.azureOpenAIApiDeploymentName) {\r\n                throw new Error(\"Azure OpenAI API deployment name not found\");\r\n            }\r\n            if (!this.azureOpenAIApiVersion) {\r\n                throw new Error(\"Azure OpenAI API version not found\");\r\n            }\r\n            this.openAIApiKey = this.openAIApiKey ?? \"\";\r\n        }\r\n        this.clientConfig = {\r\n            apiKey: this.openAIApiKey,\r\n            organization: this.organization,\r\n            baseURL: configuration?.basePath ?? fields?.configuration?.basePath,\r\n            dangerouslyAllowBrowser: true,\r\n            defaultHeaders: configuration?.baseOptions?.headers ??\r\n                fields?.configuration?.baseOptions?.headers,\r\n            defaultQuery: configuration?.baseOptions?.params ??\r\n                fields?.configuration?.baseOptions?.params,\r\n            ...configuration,\r\n            ...fields?.configuration,\r\n        };\r\n    }\r\n    /**\r\n     * Get the parameters used to invoke the model\r\n     */\r\n    invocationParams(options) {\r\n        return {\r\n            model: this.modelName,\r\n            temperature: this.temperature,\r\n            top_p: this.topP,\r\n            frequency_penalty: this.frequencyPenalty,\r\n            presence_penalty: this.presencePenalty,\r\n            max_tokens: this.maxTokens === -1 ? undefined : this.maxTokens,\r\n            n: this.n,\r\n            logit_bias: this.logitBias,\r\n            stop: options?.stop ?? this.stop,\r\n            user: this.user,\r\n            stream: this.streaming,\r\n            functions: options?.functions ??\r\n                (options?.tools\r\n                    ? options?.tools.map(formatToOpenAIFunction)\r\n                    : undefined),\r\n            function_call: options?.function_call,\r\n            ...this.modelKwargs,\r\n        };\r\n    }\r\n    /** @ignore */\r\n    _identifyingParams() {\r\n        return {\r\n            model_name: this.modelName,\r\n            ...this.invocationParams(),\r\n            ...this.clientConfig,\r\n        };\r\n    }\r\n    async *_streamResponseChunks(messages, options, runManager) {\r\n        const messagesMapped = messages.map((message) => ({\r\n            role: messageToOpenAIRole(message),\r\n            content: message.content,\r\n            name: message.name,\r\n            function_call: message.additional_kwargs\r\n                .function_call,\r\n        }));\r\n        const params = {\r\n            ...this.invocationParams(options),\r\n            messages: messagesMapped,\r\n            stream: true,\r\n        };\r\n        let defaultRole;\r\n        const streamIterable = await this.completionWithRetry(params, options);\r\n        for await (const data of streamIterable) {\r\n            const choice = data?.choices[0];\r\n            if (!choice) {\r\n                continue;\r\n            }\r\n            const { delta } = choice;\r\n            const chunk = _convertDeltaToMessageChunk(delta, defaultRole);\r\n            defaultRole = delta.role ?? defaultRole;\r\n            const newTokenIndices = {\r\n                prompt: options.promptIndex ?? 0,\r\n                completion: choice.index ?? 0,\r\n            };\r\n            const generationChunk = new ChatGenerationChunk({\r\n                message: chunk,\r\n                text: chunk.content,\r\n                generationInfo: newTokenIndices,\r\n            });\r\n            yield generationChunk;\r\n            // eslint-disable-next-line no-void\r\n            void runManager?.handleLLMNewToken(generationChunk.text ?? \"\", newTokenIndices, undefined, undefined, undefined, { chunk: generationChunk });\r\n        }\r\n        if (options.signal?.aborted) {\r\n            throw new Error(\"AbortError\");\r\n        }\r\n    }\r\n    /**\r\n     * Get the identifying parameters for the model\r\n     */\r\n    identifyingParams() {\r\n        return this._identifyingParams();\r\n    }\r\n    /** @ignore */\r\n    async _generate(messages, options, runManager) {\r\n        const tokenUsage = {};\r\n        const params = this.invocationParams(options);\r\n        const messagesMapped = messages.map((message) => ({\r\n            role: messageToOpenAIRole(message),\r\n            content: message.content,\r\n            name: message.name,\r\n            function_call: message.additional_kwargs\r\n                .function_call,\r\n        }));\r\n        if (params.stream) {\r\n            const stream = await this._streamResponseChunks(messages, options, runManager);\r\n            const finalChunks = {};\r\n            for await (const chunk of stream) {\r\n                const index = chunk.generationInfo?.completion ?? 0;\r\n                if (finalChunks[index] === undefined) {\r\n                    finalChunks[index] = chunk;\r\n                }\r\n                else {\r\n                    finalChunks[index] = finalChunks[index].concat(chunk);\r\n                }\r\n            }\r\n            const generations = Object.entries(finalChunks)\r\n                .sort(([aKey], [bKey]) => parseInt(aKey, 10) - parseInt(bKey, 10))\r\n                .map(([_, value]) => value);\r\n            return { generations };\r\n        }\r\n        else {\r\n            const data = await this.completionWithRetry({\r\n                ...params,\r\n                stream: false,\r\n                messages: messagesMapped,\r\n            }, {\r\n                signal: options?.signal,\r\n                ...options?.options,\r\n            });\r\n            const { completion_tokens: completionTokens, prompt_tokens: promptTokens, total_tokens: totalTokens, } = data?.usage ?? {};\r\n            if (completionTokens) {\r\n                tokenUsage.completionTokens =\r\n                    (tokenUsage.completionTokens ?? 0) + completionTokens;\r\n            }\r\n            if (promptTokens) {\r\n                tokenUsage.promptTokens = (tokenUsage.promptTokens ?? 0) + promptTokens;\r\n            }\r\n            if (totalTokens) {\r\n                tokenUsage.totalTokens = (tokenUsage.totalTokens ?? 0) + totalTokens;\r\n            }\r\n            const generations = [];\r\n            for (const part of data?.choices ?? []) {\r\n                const text = part.message?.content ?? \"\";\r\n                const generation = {\r\n                    text,\r\n                    message: openAIResponseToChatMessage(part.message ?? { role: \"assistant\" }),\r\n                };\r\n                if (part.finish_reason) {\r\n                    generation.generationInfo = { finish_reason: part.finish_reason };\r\n                }\r\n                generations.push(generation);\r\n            }\r\n            return {\r\n                generations,\r\n                llmOutput: { tokenUsage },\r\n            };\r\n        }\r\n    }\r\n    async getNumTokensFromMessages(messages) {\r\n        let totalCount = 0;\r\n        let tokensPerMessage = 0;\r\n        let tokensPerName = 0;\r\n        // From: https://github.com/openai/openai-cookbook/blob/main/examples/How_to_format_inputs_to_ChatGPT_models.ipynb\r\n        if (getModelNameForTiktoken(this.modelName) === \"gpt-3.5-turbo\") {\r\n            tokensPerMessage = 4;\r\n            tokensPerName = -1;\r\n        }\r\n        else if (getModelNameForTiktoken(this.modelName).startsWith(\"gpt-4\")) {\r\n            tokensPerMessage = 3;\r\n            tokensPerName = 1;\r\n        }\r\n        const countPerMessage = await Promise.all(messages.map(async (message) => {\r\n            const textCount = await this.getNumTokens(message.content);\r\n            const roleCount = await this.getNumTokens(messageToOpenAIRole(message));\r\n            const nameCount = message.name !== undefined\r\n                ? tokensPerName + (await this.getNumTokens(message.name))\r\n                : 0;\r\n            const count = textCount + tokensPerMessage + roleCount + nameCount;\r\n            totalCount += count;\r\n            return count;\r\n        }));\r\n        totalCount += 3; // every reply is primed with <|start|>assistant<|message|>\r\n        return { totalCount, countPerMessage };\r\n    }\r\n    async completionWithRetry(request, options) {\r\n        const requestOptions = this._getClientOptions(options);\r\n        return this.caller.call(async () => {\r\n            try {\r\n                const res = await this.client.chat.completions.create(request, requestOptions);\r\n                return res;\r\n            }\r\n            catch (e) {\r\n                const error = wrapOpenAIClientError(e);\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n    _getClientOptions(options) {\r\n        if (!this.client) {\r\n            const openAIEndpointConfig = {\r\n                azureOpenAIApiDeploymentName: this.azureOpenAIApiDeploymentName,\r\n                azureOpenAIApiInstanceName: this.azureOpenAIApiInstanceName,\r\n                azureOpenAIApiKey: this.azureOpenAIApiKey,\r\n                azureOpenAIBasePath: this.azureOpenAIBasePath,\r\n                baseURL: this.clientConfig.baseURL,\r\n            };\r\n            const endpoint = getEndpoint(openAIEndpointConfig);\r\n            const params = {\r\n                ...this.clientConfig,\r\n                baseURL: endpoint,\r\n                timeout: this.timeout,\r\n                maxRetries: 0,\r\n            };\r\n            if (!params.baseURL) {\r\n                delete params.baseURL;\r\n            }\r\n            this.client = new OpenAIClient(params);\r\n        }\r\n        const requestOptions = {\r\n            ...this.clientConfig,\r\n            ...options,\r\n        };\r\n        if (this.azureOpenAIApiKey) {\r\n            requestOptions.headers = {\r\n                \"api-key\": this.azureOpenAIApiKey,\r\n                ...requestOptions.headers,\r\n            };\r\n            requestOptions.query = {\r\n                \"api-version\": this.azureOpenAIApiVersion,\r\n                ...requestOptions.query,\r\n            };\r\n        }\r\n        return requestOptions;\r\n    }\r\n    _llmType() {\r\n        return \"openai\";\r\n    }\r\n    /** @ignore */\r\n    _combineLLMOutput(...llmOutputs) {\r\n        return llmOutputs.reduce((acc, llmOutput) => {\r\n            if (llmOutput && llmOutput.tokenUsage) {\r\n                acc.tokenUsage.completionTokens +=\r\n                    llmOutput.tokenUsage.completionTokens ?? 0;\r\n                acc.tokenUsage.promptTokens += llmOutput.tokenUsage.promptTokens ?? 0;\r\n                acc.tokenUsage.totalTokens += llmOutput.tokenUsage.totalTokens ?? 0;\r\n            }\r\n            return acc;\r\n        }, {\r\n            tokenUsage: {\r\n                completionTokens: 0,\r\n                promptTokens: 0,\r\n                totalTokens: 0,\r\n            },\r\n        });\r\n    }\r\n}\r\nexport class PromptLayerChatOpenAI extends ChatOpenAI {\r\n    constructor(fields) {\r\n        super(fields);\r\n        Object.defineProperty(this, \"promptLayerApiKey\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"plTags\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"returnPromptLayerId\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.promptLayerApiKey =\r\n            fields?.promptLayerApiKey ??\r\n                (typeof process !== \"undefined\"\r\n                    ? // eslint-disable-next-line no-process-env\r\n                        process.env?.PROMPTLAYER_API_KEY\r\n                    : undefined);\r\n        this.plTags = fields?.plTags ?? [];\r\n        this.returnPromptLayerId = fields?.returnPromptLayerId ?? false;\r\n    }\r\n    async _generate(messages, options, runManager) {\r\n        const requestStartTime = Date.now();\r\n        let parsedOptions;\r\n        if (Array.isArray(options)) {\r\n            parsedOptions = { stop: options };\r\n        }\r\n        else if (options?.timeout && !options.signal) {\r\n            parsedOptions = {\r\n                ...options,\r\n                signal: AbortSignal.timeout(options.timeout),\r\n            };\r\n        }\r\n        else {\r\n            parsedOptions = options ?? {};\r\n        }\r\n        const generatedResponses = await super._generate(messages, parsedOptions, runManager);\r\n        const requestEndTime = Date.now();\r\n        const _convertMessageToDict = (message) => {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            let messageDict;\r\n            if (message._getType() === \"human\") {\r\n                messageDict = { role: \"user\", content: message.content };\r\n            }\r\n            else if (message._getType() === \"ai\") {\r\n                messageDict = { role: \"assistant\", content: message.content };\r\n            }\r\n            else if (message._getType() === \"function\") {\r\n                messageDict = { role: \"assistant\", content: message.content };\r\n            }\r\n            else if (message._getType() === \"system\") {\r\n                messageDict = { role: \"system\", content: message.content };\r\n            }\r\n            else if (message._getType() === \"generic\") {\r\n                messageDict = {\r\n                    role: message.role,\r\n                    content: message.content,\r\n                };\r\n            }\r\n            else {\r\n                throw new Error(`Got unknown type ${message}`);\r\n            }\r\n            return messageDict;\r\n        };\r\n        const _createMessageDicts = (messages, callOptions) => {\r\n            const params = {\r\n                ...this.invocationParams(),\r\n                model: this.modelName,\r\n            };\r\n            if (callOptions?.stop) {\r\n                if (Object.keys(params).includes(\"stop\")) {\r\n                    throw new Error(\"`stop` found in both the input and default params.\");\r\n                }\r\n            }\r\n            const messageDicts = messages.map((message) => _convertMessageToDict(message));\r\n            return messageDicts;\r\n        };\r\n        for (let i = 0; i < generatedResponses.generations.length; i += 1) {\r\n            const generation = generatedResponses.generations[i];\r\n            const messageDicts = _createMessageDicts(messages, parsedOptions);\r\n            let promptLayerRequestId;\r\n            const parsedResp = [\r\n                {\r\n                    content: generation.text,\r\n                    role: messageToOpenAIRole(generation.message),\r\n                },\r\n            ];\r\n            const promptLayerRespBody = await promptLayerTrackRequest(this.caller, \"langchain.PromptLayerChatOpenAI\", { ...this._identifyingParams(), messages: messageDicts, stream: false }, this.plTags, parsedResp, requestStartTime, requestEndTime, this.promptLayerApiKey);\r\n            if (this.returnPromptLayerId === true) {\r\n                if (promptLayerRespBody.success === true) {\r\n                    promptLayerRequestId = promptLayerRespBody.request_id;\r\n                }\r\n                if (!generation.generationInfo ||\r\n                    typeof generation.generationInfo !== \"object\") {\r\n                    generation.generationInfo = {};\r\n                }\r\n                generation.generationInfo.promptLayerRequestId = promptLayerRequestId;\r\n            }\r\n        }\r\n        return generatedResponses;\r\n    }\r\n}\r\n"],
  "mappings": "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",
  "names": ["util", "objectUtil", "errorUtil", "_a", "ctx", "result", "issues", "elements", "processed", "ZodFirstPartyTypeKind", "exports", "exports", "_a", "types", "x", "base", "_a", "_a", "_a", "_a", "zodToJsonSchema", "_a", "name", "schema", "_a", "File", "_a", "opts", "Page", "_a", "Page", "_a", "_a", "Transcriptions", "Translations", "Audio", "_a", "Chat", "Completions", "_a", "Embeddings", "Edits", "_a", "Jobs", "FineTuning", "Images", "Models", "Moderations", "Completions", "OpenAI", "_a", "APIConnectionTimeoutError", "APIUserAbortError", "_a", "messages"]
}
