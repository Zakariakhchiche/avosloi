{
  "version": 3,
  "sources": ["../../decamelize/index.js", "../../camelcase/index.js", "../../retry/lib/retry_operation.js", "../../retry/lib/retry.js", "../../retry/index.js", "../../p-retry/index.js", "../../langchain/node_modules/ansi-styles/index.js", "../../eventemitter3/index.js", "../../p-finally/index.js", "../../p-timeout/index.js", "../../p-queue/dist/lower-bound.js", "../../p-queue/dist/priority-queue.js", "../../p-queue/dist/index.js", "../../langchain/dist/load/map_keys.js", "../../langchain/dist/load/serializable.js", "../../langchain/dist/schema/index.js", "../../langchain/dist/schema/runnable/base.js", "../../uuid/dist/esm-browser/rng.js", "../../uuid/dist/esm-browser/regex.js", "../../uuid/dist/esm-browser/validate.js", "../../uuid/dist/esm-browser/stringify.js", "../../uuid/dist/esm-browser/parse.js", "../../uuid/dist/esm-browser/v35.js", "../../uuid/dist/esm-browser/md5.js", "../../uuid/dist/esm-browser/v3.js", "../../uuid/dist/esm-browser/native.js", "../../uuid/dist/esm-browser/v4.js", "../../uuid/dist/esm-browser/sha1.js", "../../uuid/dist/esm-browser/v5.js", "../../langchain/dist/callbacks/base.js", "../../langchain/dist/callbacks/handlers/console.js", "../../langchain/dist/callbacks/handlers/tracer.js", "../../langsmith/dist/utils/async_caller.js", "../../langsmith/dist/utils/messages.js", "../../langsmith/dist/utils/env.js", "../../langsmith/dist/client.js", "../../langchain/dist/util/env.js", "../../langchain/dist/callbacks/handlers/tracer_langchain.js", "../../langchain/dist/memory/base.js", "../../langchain/dist/callbacks/handlers/tracer_langchain_v1.js", "../../langchain/dist/callbacks/handlers/initialize.js", "../../langchain/dist/callbacks/promises.js", "../../langchain/dist/callbacks/manager.js", "../../langchain/dist/util/fast-json-patch/src/core.js", "../../langchain/dist/util/fast-json-patch/src/helpers.js", "../../langchain/dist/util/fast-json-patch/index.js", "../../langchain/dist/util/stream.js", "../../langchain/dist/callbacks/handlers/log_stream.js", "../../langchain/dist/schema/runnable/config.js", "../../langchain/dist/util/async_caller.js", "../../langchain/dist/prompts/base.js", "../../langchain/dist/prompts/template.js", "../../langchain/dist/prompts/prompt.js"],
  "sourcesContent": ["'use strict';\r\nmodule.exports = function (str, sep) {\r\n\tif (typeof str !== 'string') {\r\n\t\tthrow new TypeError('Expected a string');\r\n\t}\r\n\r\n\tsep = typeof sep === 'undefined' ? '_' : sep;\r\n\r\n\treturn str\r\n\t\t.replace(/([a-z\\d])([A-Z])/g, '$1' + sep + '$2')\r\n\t\t.replace(/([A-Z]+)([A-Z][a-z\\d]+)/g, '$1' + sep + '$2')\r\n\t\t.toLowerCase();\r\n};\r\n", "'use strict';\r\n\r\nconst UPPERCASE = /[\\p{Lu}]/u;\r\nconst LOWERCASE = /[\\p{Ll}]/u;\r\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\r\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\r\nconst SEPARATORS = /[_.\\- ]+/;\r\n\r\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\r\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\r\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\r\n\r\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\r\n\tlet isLastCharLower = false;\r\n\tlet isLastCharUpper = false;\r\n\tlet isLastLastCharUpper = false;\r\n\r\n\tfor (let i = 0; i < string.length; i++) {\r\n\t\tconst character = string[i];\r\n\r\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\r\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\r\n\t\t\tisLastCharLower = false;\r\n\t\t\tisLastLastCharUpper = isLastCharUpper;\r\n\t\t\tisLastCharUpper = true;\r\n\t\t\ti++;\r\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\r\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\r\n\t\t\tisLastLastCharUpper = isLastCharUpper;\r\n\t\t\tisLastCharUpper = false;\r\n\t\t\tisLastCharLower = true;\r\n\t\t} else {\r\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\r\n\t\t\tisLastLastCharUpper = isLastCharUpper;\r\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\r\n\t\t}\r\n\t}\r\n\r\n\treturn string;\r\n};\r\n\r\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\r\n\tLEADING_CAPITAL.lastIndex = 0;\r\n\r\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\r\n};\r\n\r\nconst postProcess = (input, toUpperCase) => {\r\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\r\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\r\n\r\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\r\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\r\n};\r\n\r\nconst camelCase = (input, options) => {\r\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\r\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\r\n\t}\r\n\r\n\toptions = {\r\n\t\tpascalCase: false,\r\n\t\tpreserveConsecutiveUppercase: false,\r\n\t\t...options\r\n\t};\r\n\r\n\tif (Array.isArray(input)) {\r\n\t\tinput = input.map(x => x.trim())\r\n\t\t\t.filter(x => x.length)\r\n\t\t\t.join('-');\r\n\t} else {\r\n\t\tinput = input.trim();\r\n\t}\r\n\r\n\tif (input.length === 0) {\r\n\t\treturn '';\r\n\t}\r\n\r\n\tconst toLowerCase = options.locale === false ?\r\n\t\tstring => string.toLowerCase() :\r\n\t\tstring => string.toLocaleLowerCase(options.locale);\r\n\tconst toUpperCase = options.locale === false ?\r\n\t\tstring => string.toUpperCase() :\r\n\t\tstring => string.toLocaleUpperCase(options.locale);\r\n\r\n\tif (input.length === 1) {\r\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\r\n\t}\r\n\r\n\tconst hasUpperCase = input !== toLowerCase(input);\r\n\r\n\tif (hasUpperCase) {\r\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\r\n\t}\r\n\r\n\tinput = input.replace(LEADING_SEPARATORS, '');\r\n\r\n\tif (options.preserveConsecutiveUppercase) {\r\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\r\n\t} else {\r\n\t\tinput = toLowerCase(input);\r\n\t}\r\n\r\n\tif (options.pascalCase) {\r\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\r\n\t}\r\n\r\n\treturn postProcess(input, toUpperCase);\r\n};\r\n\r\nmodule.exports = camelCase;\r\n// TODO: Remove this for the next major release\r\nmodule.exports.default = camelCase;\r\n", "function RetryOperation(timeouts, options) {\r\n  // Compatibility for the old (timeouts, retryForever) signature\r\n  if (typeof options === 'boolean') {\r\n    options = { forever: options };\r\n  }\r\n\r\n  this._originalTimeouts = JSON.parse(JSON.stringify(timeouts));\r\n  this._timeouts = timeouts;\r\n  this._options = options || {};\r\n  this._maxRetryTime = options && options.maxRetryTime || Infinity;\r\n  this._fn = null;\r\n  this._errors = [];\r\n  this._attempts = 1;\r\n  this._operationTimeout = null;\r\n  this._operationTimeoutCb = null;\r\n  this._timeout = null;\r\n  this._operationStart = null;\r\n  this._timer = null;\r\n\r\n  if (this._options.forever) {\r\n    this._cachedTimeouts = this._timeouts.slice(0);\r\n  }\r\n}\r\nmodule.exports = RetryOperation;\r\n\r\nRetryOperation.prototype.reset = function() {\r\n  this._attempts = 1;\r\n  this._timeouts = this._originalTimeouts.slice(0);\r\n}\r\n\r\nRetryOperation.prototype.stop = function() {\r\n  if (this._timeout) {\r\n    clearTimeout(this._timeout);\r\n  }\r\n  if (this._timer) {\r\n    clearTimeout(this._timer);\r\n  }\r\n\r\n  this._timeouts       = [];\r\n  this._cachedTimeouts = null;\r\n};\r\n\r\nRetryOperation.prototype.retry = function(err) {\r\n  if (this._timeout) {\r\n    clearTimeout(this._timeout);\r\n  }\r\n\r\n  if (!err) {\r\n    return false;\r\n  }\r\n  var currentTime = new Date().getTime();\r\n  if (err && currentTime - this._operationStart >= this._maxRetryTime) {\r\n    this._errors.push(err);\r\n    this._errors.unshift(new Error('RetryOperation timeout occurred'));\r\n    return false;\r\n  }\r\n\r\n  this._errors.push(err);\r\n\r\n  var timeout = this._timeouts.shift();\r\n  if (timeout === undefined) {\r\n    if (this._cachedTimeouts) {\r\n      // retry forever, only keep last error\r\n      this._errors.splice(0, this._errors.length - 1);\r\n      timeout = this._cachedTimeouts.slice(-1);\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  var self = this;\r\n  this._timer = setTimeout(function() {\r\n    self._attempts++;\r\n\r\n    if (self._operationTimeoutCb) {\r\n      self._timeout = setTimeout(function() {\r\n        self._operationTimeoutCb(self._attempts);\r\n      }, self._operationTimeout);\r\n\r\n      if (self._options.unref) {\r\n          self._timeout.unref();\r\n      }\r\n    }\r\n\r\n    self._fn(self._attempts);\r\n  }, timeout);\r\n\r\n  if (this._options.unref) {\r\n      this._timer.unref();\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nRetryOperation.prototype.attempt = function(fn, timeoutOps) {\r\n  this._fn = fn;\r\n\r\n  if (timeoutOps) {\r\n    if (timeoutOps.timeout) {\r\n      this._operationTimeout = timeoutOps.timeout;\r\n    }\r\n    if (timeoutOps.cb) {\r\n      this._operationTimeoutCb = timeoutOps.cb;\r\n    }\r\n  }\r\n\r\n  var self = this;\r\n  if (this._operationTimeoutCb) {\r\n    this._timeout = setTimeout(function() {\r\n      self._operationTimeoutCb();\r\n    }, self._operationTimeout);\r\n  }\r\n\r\n  this._operationStart = new Date().getTime();\r\n\r\n  this._fn(this._attempts);\r\n};\r\n\r\nRetryOperation.prototype.try = function(fn) {\r\n  console.log('Using RetryOperation.try() is deprecated');\r\n  this.attempt(fn);\r\n};\r\n\r\nRetryOperation.prototype.start = function(fn) {\r\n  console.log('Using RetryOperation.start() is deprecated');\r\n  this.attempt(fn);\r\n};\r\n\r\nRetryOperation.prototype.start = RetryOperation.prototype.try;\r\n\r\nRetryOperation.prototype.errors = function() {\r\n  return this._errors;\r\n};\r\n\r\nRetryOperation.prototype.attempts = function() {\r\n  return this._attempts;\r\n};\r\n\r\nRetryOperation.prototype.mainError = function() {\r\n  if (this._errors.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  var counts = {};\r\n  var mainError = null;\r\n  var mainErrorCount = 0;\r\n\r\n  for (var i = 0; i < this._errors.length; i++) {\r\n    var error = this._errors[i];\r\n    var message = error.message;\r\n    var count = (counts[message] || 0) + 1;\r\n\r\n    counts[message] = count;\r\n\r\n    if (count >= mainErrorCount) {\r\n      mainError = error;\r\n      mainErrorCount = count;\r\n    }\r\n  }\r\n\r\n  return mainError;\r\n};\r\n", "var RetryOperation = require('./retry_operation');\r\n\r\nexports.operation = function(options) {\r\n  var timeouts = exports.timeouts(options);\r\n  return new RetryOperation(timeouts, {\r\n      forever: options && (options.forever || options.retries === Infinity),\r\n      unref: options && options.unref,\r\n      maxRetryTime: options && options.maxRetryTime\r\n  });\r\n};\r\n\r\nexports.timeouts = function(options) {\r\n  if (options instanceof Array) {\r\n    return [].concat(options);\r\n  }\r\n\r\n  var opts = {\r\n    retries: 10,\r\n    factor: 2,\r\n    minTimeout: 1 * 1000,\r\n    maxTimeout: Infinity,\r\n    randomize: false\r\n  };\r\n  for (var key in options) {\r\n    opts[key] = options[key];\r\n  }\r\n\r\n  if (opts.minTimeout > opts.maxTimeout) {\r\n    throw new Error('minTimeout is greater than maxTimeout');\r\n  }\r\n\r\n  var timeouts = [];\r\n  for (var i = 0; i < opts.retries; i++) {\r\n    timeouts.push(this.createTimeout(i, opts));\r\n  }\r\n\r\n  if (options && options.forever && !timeouts.length) {\r\n    timeouts.push(this.createTimeout(i, opts));\r\n  }\r\n\r\n  // sort the array numerically ascending\r\n  timeouts.sort(function(a,b) {\r\n    return a - b;\r\n  });\r\n\r\n  return timeouts;\r\n};\r\n\r\nexports.createTimeout = function(attempt, opts) {\r\n  var random = (opts.randomize)\r\n    ? (Math.random() + 1)\r\n    : 1;\r\n\r\n  var timeout = Math.round(random * Math.max(opts.minTimeout, 1) * Math.pow(opts.factor, attempt));\r\n  timeout = Math.min(timeout, opts.maxTimeout);\r\n\r\n  return timeout;\r\n};\r\n\r\nexports.wrap = function(obj, options, methods) {\r\n  if (options instanceof Array) {\r\n    methods = options;\r\n    options = null;\r\n  }\r\n\r\n  if (!methods) {\r\n    methods = [];\r\n    for (var key in obj) {\r\n      if (typeof obj[key] === 'function') {\r\n        methods.push(key);\r\n      }\r\n    }\r\n  }\r\n\r\n  for (var i = 0; i < methods.length; i++) {\r\n    var method   = methods[i];\r\n    var original = obj[method];\r\n\r\n    obj[method] = function retryWrapper(original) {\r\n      var op       = exports.operation(options);\r\n      var args     = Array.prototype.slice.call(arguments, 1);\r\n      var callback = args.pop();\r\n\r\n      args.push(function(err) {\r\n        if (op.retry(err)) {\r\n          return;\r\n        }\r\n        if (err) {\r\n          arguments[0] = op.mainError();\r\n        }\r\n        callback.apply(this, arguments);\r\n      });\r\n\r\n      op.attempt(function() {\r\n        original.apply(obj, args);\r\n      });\r\n    }.bind(obj, original);\r\n    obj[method].options = options;\r\n  }\r\n};\r\n", "module.exports = require('./lib/retry');", "'use strict';\r\nconst retry = require('retry');\r\n\r\nconst networkErrorMsgs = [\r\n\t'Failed to fetch', // Chrome\r\n\t'NetworkError when attempting to fetch resource.', // Firefox\r\n\t'The Internet connection appears to be offline.', // Safari\r\n\t'Network request failed' // `cross-fetch`\r\n];\r\n\r\nclass AbortError extends Error {\r\n\tconstructor(message) {\r\n\t\tsuper();\r\n\r\n\t\tif (message instanceof Error) {\r\n\t\t\tthis.originalError = message;\r\n\t\t\t({message} = message);\r\n\t\t} else {\r\n\t\t\tthis.originalError = new Error(message);\r\n\t\t\tthis.originalError.stack = this.stack;\r\n\t\t}\r\n\r\n\t\tthis.name = 'AbortError';\r\n\t\tthis.message = message;\r\n\t}\r\n}\r\n\r\nconst decorateErrorWithCounts = (error, attemptNumber, options) => {\r\n\t// Minus 1 from attemptNumber because the first attempt does not count as a retry\r\n\tconst retriesLeft = options.retries - (attemptNumber - 1);\r\n\r\n\terror.attemptNumber = attemptNumber;\r\n\terror.retriesLeft = retriesLeft;\r\n\treturn error;\r\n};\r\n\r\nconst isNetworkError = errorMessage => networkErrorMsgs.includes(errorMessage);\r\n\r\nconst pRetry = (input, options) => new Promise((resolve, reject) => {\r\n\toptions = {\r\n\t\tonFailedAttempt: () => {},\r\n\t\tretries: 10,\r\n\t\t...options\r\n\t};\r\n\r\n\tconst operation = retry.operation(options);\r\n\r\n\toperation.attempt(async attemptNumber => {\r\n\t\ttry {\r\n\t\t\tresolve(await input(attemptNumber));\r\n\t\t} catch (error) {\r\n\t\t\tif (!(error instanceof Error)) {\r\n\t\t\t\treject(new TypeError(`Non-error was thrown: \"${error}\". You should only throw errors.`));\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (error instanceof AbortError) {\r\n\t\t\t\toperation.stop();\r\n\t\t\t\treject(error.originalError);\r\n\t\t\t} else if (error instanceof TypeError && !isNetworkError(error.message)) {\r\n\t\t\t\toperation.stop();\r\n\t\t\t\treject(error);\r\n\t\t\t} else {\r\n\t\t\t\tdecorateErrorWithCounts(error, attemptNumber, options);\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tawait options.onFailedAttempt(error);\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\treject(error);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!operation.retry(error)) {\r\n\t\t\t\t\treject(operation.mainError());\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n});\r\n\r\nmodule.exports = pRetry;\r\n// TODO: remove this in the next major version\r\nmodule.exports.default = pRetry;\r\n\r\nmodule.exports.AbortError = AbortError;\r\n", "'use strict';\r\n\r\nconst ANSI_BACKGROUND_OFFSET = 10;\r\n\r\nconst wrapAnsi256 = (offset = 0) => code => `\\u001B[${38 + offset};5;${code}m`;\r\n\r\nconst wrapAnsi16m = (offset = 0) => (red, green, blue) => `\\u001B[${38 + offset};2;${red};${green};${blue}m`;\r\n\r\nfunction assembleStyles() {\r\n\tconst codes = new Map();\r\n\tconst styles = {\r\n\t\tmodifier: {\r\n\t\t\treset: [0, 0],\r\n\t\t\t// 21 isn't widely supported and 22 does the same thing\r\n\t\t\tbold: [1, 22],\r\n\t\t\tdim: [2, 22],\r\n\t\t\titalic: [3, 23],\r\n\t\t\tunderline: [4, 24],\r\n\t\t\toverline: [53, 55],\r\n\t\t\tinverse: [7, 27],\r\n\t\t\thidden: [8, 28],\r\n\t\t\tstrikethrough: [9, 29]\r\n\t\t},\r\n\t\tcolor: {\r\n\t\t\tblack: [30, 39],\r\n\t\t\tred: [31, 39],\r\n\t\t\tgreen: [32, 39],\r\n\t\t\tyellow: [33, 39],\r\n\t\t\tblue: [34, 39],\r\n\t\t\tmagenta: [35, 39],\r\n\t\t\tcyan: [36, 39],\r\n\t\t\twhite: [37, 39],\r\n\r\n\t\t\t// Bright color\r\n\t\t\tblackBright: [90, 39],\r\n\t\t\tredBright: [91, 39],\r\n\t\t\tgreenBright: [92, 39],\r\n\t\t\tyellowBright: [93, 39],\r\n\t\t\tblueBright: [94, 39],\r\n\t\t\tmagentaBright: [95, 39],\r\n\t\t\tcyanBright: [96, 39],\r\n\t\t\twhiteBright: [97, 39]\r\n\t\t},\r\n\t\tbgColor: {\r\n\t\t\tbgBlack: [40, 49],\r\n\t\t\tbgRed: [41, 49],\r\n\t\t\tbgGreen: [42, 49],\r\n\t\t\tbgYellow: [43, 49],\r\n\t\t\tbgBlue: [44, 49],\r\n\t\t\tbgMagenta: [45, 49],\r\n\t\t\tbgCyan: [46, 49],\r\n\t\t\tbgWhite: [47, 49],\r\n\r\n\t\t\t// Bright color\r\n\t\t\tbgBlackBright: [100, 49],\r\n\t\t\tbgRedBright: [101, 49],\r\n\t\t\tbgGreenBright: [102, 49],\r\n\t\t\tbgYellowBright: [103, 49],\r\n\t\t\tbgBlueBright: [104, 49],\r\n\t\t\tbgMagentaBright: [105, 49],\r\n\t\t\tbgCyanBright: [106, 49],\r\n\t\t\tbgWhiteBright: [107, 49]\r\n\t\t}\r\n\t};\r\n\r\n\t// Alias bright black as gray (and grey)\r\n\tstyles.color.gray = styles.color.blackBright;\r\n\tstyles.bgColor.bgGray = styles.bgColor.bgBlackBright;\r\n\tstyles.color.grey = styles.color.blackBright;\r\n\tstyles.bgColor.bgGrey = styles.bgColor.bgBlackBright;\r\n\r\n\tfor (const [groupName, group] of Object.entries(styles)) {\r\n\t\tfor (const [styleName, style] of Object.entries(group)) {\r\n\t\t\tstyles[styleName] = {\r\n\t\t\t\topen: `\\u001B[${style[0]}m`,\r\n\t\t\t\tclose: `\\u001B[${style[1]}m`\r\n\t\t\t};\r\n\r\n\t\t\tgroup[styleName] = styles[styleName];\r\n\r\n\t\t\tcodes.set(style[0], style[1]);\r\n\t\t}\r\n\r\n\t\tObject.defineProperty(styles, groupName, {\r\n\t\t\tvalue: group,\r\n\t\t\tenumerable: false\r\n\t\t});\r\n\t}\r\n\r\n\tObject.defineProperty(styles, 'codes', {\r\n\t\tvalue: codes,\r\n\t\tenumerable: false\r\n\t});\r\n\r\n\tstyles.color.close = '\\u001B[39m';\r\n\tstyles.bgColor.close = '\\u001B[49m';\r\n\r\n\tstyles.color.ansi256 = wrapAnsi256();\r\n\tstyles.color.ansi16m = wrapAnsi16m();\r\n\tstyles.bgColor.ansi256 = wrapAnsi256(ANSI_BACKGROUND_OFFSET);\r\n\tstyles.bgColor.ansi16m = wrapAnsi16m(ANSI_BACKGROUND_OFFSET);\r\n\r\n\t// From https://github.com/Qix-/color-convert/blob/3f0e0d4e92e235796ccb17f6e85c72094a651f49/conversions.js\r\n\tObject.defineProperties(styles, {\r\n\t\trgbToAnsi256: {\r\n\t\t\tvalue: (red, green, blue) => {\r\n\t\t\t\t// We use the extended greyscale palette here, with the exception of\r\n\t\t\t\t// black and white. normal palette only has 4 greyscale shades.\r\n\t\t\t\tif (red === green && green === blue) {\r\n\t\t\t\t\tif (red < 8) {\r\n\t\t\t\t\t\treturn 16;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (red > 248) {\r\n\t\t\t\t\t\treturn 231;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn Math.round(((red - 8) / 247) * 24) + 232;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn 16 +\r\n\t\t\t\t\t(36 * Math.round(red / 255 * 5)) +\r\n\t\t\t\t\t(6 * Math.round(green / 255 * 5)) +\r\n\t\t\t\t\tMath.round(blue / 255 * 5);\r\n\t\t\t},\r\n\t\t\tenumerable: false\r\n\t\t},\r\n\t\thexToRgb: {\r\n\t\t\tvalue: hex => {\r\n\t\t\t\tconst matches = /(?<colorString>[a-f\\d]{6}|[a-f\\d]{3})/i.exec(hex.toString(16));\r\n\t\t\t\tif (!matches) {\r\n\t\t\t\t\treturn [0, 0, 0];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet {colorString} = matches.groups;\r\n\r\n\t\t\t\tif (colorString.length === 3) {\r\n\t\t\t\t\tcolorString = colorString.split('').map(character => character + character).join('');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst integer = Number.parseInt(colorString, 16);\r\n\r\n\t\t\t\treturn [\r\n\t\t\t\t\t(integer >> 16) & 0xFF,\r\n\t\t\t\t\t(integer >> 8) & 0xFF,\r\n\t\t\t\t\tinteger & 0xFF\r\n\t\t\t\t];\r\n\t\t\t},\r\n\t\t\tenumerable: false\r\n\t\t},\r\n\t\thexToAnsi256: {\r\n\t\t\tvalue: hex => styles.rgbToAnsi256(...styles.hexToRgb(hex)),\r\n\t\t\tenumerable: false\r\n\t\t}\r\n\t});\r\n\r\n\treturn styles;\r\n}\r\n\r\n// Make the export immutable\r\nObject.defineProperty(module, 'exports', {\r\n\tenumerable: true,\r\n\tget: assembleStyles\r\n});\r\n", "'use strict';\r\n\r\nvar has = Object.prototype.hasOwnProperty\r\n  , prefix = '~';\r\n\r\n/**\r\n * Constructor to create a storage for our `EE` objects.\r\n * An `Events` instance is a plain object whose properties are event names.\r\n *\r\n * @constructor\r\n * @private\r\n */\r\nfunction Events() {}\r\n\r\n//\r\n// We try to not inherit from `Object.prototype`. In some engines creating an\r\n// instance in this way is faster than calling `Object.create(null)` directly.\r\n// If `Object.create(null)` is not supported we prefix the event names with a\r\n// character to make sure that the built-in object properties are not\r\n// overridden or used as an attack vector.\r\n//\r\nif (Object.create) {\r\n  Events.prototype = Object.create(null);\r\n\r\n  //\r\n  // This hack is needed because the `__proto__` property is still inherited in\r\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\r\n  //\r\n  if (!new Events().__proto__) prefix = false;\r\n}\r\n\r\n/**\r\n * Representation of a single event listener.\r\n *\r\n * @param {Function} fn The listener function.\r\n * @param {*} context The context to invoke the listener with.\r\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\r\n * @constructor\r\n * @private\r\n */\r\nfunction EE(fn, context, once) {\r\n  this.fn = fn;\r\n  this.context = context;\r\n  this.once = once || false;\r\n}\r\n\r\n/**\r\n * Add a listener for a given event.\r\n *\r\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\r\n * @param {(String|Symbol)} event The event name.\r\n * @param {Function} fn The listener function.\r\n * @param {*} context The context to invoke the listener with.\r\n * @param {Boolean} once Specify if the listener is a one-time listener.\r\n * @returns {EventEmitter}\r\n * @private\r\n */\r\nfunction addListener(emitter, event, fn, context, once) {\r\n  if (typeof fn !== 'function') {\r\n    throw new TypeError('The listener must be a function');\r\n  }\r\n\r\n  var listener = new EE(fn, context || emitter, once)\r\n    , evt = prefix ? prefix + event : event;\r\n\r\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\r\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\r\n  else emitter._events[evt] = [emitter._events[evt], listener];\r\n\r\n  return emitter;\r\n}\r\n\r\n/**\r\n * Clear event by name.\r\n *\r\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\r\n * @param {(String|Symbol)} evt The Event name.\r\n * @private\r\n */\r\nfunction clearEvent(emitter, evt) {\r\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\r\n  else delete emitter._events[evt];\r\n}\r\n\r\n/**\r\n * Minimal `EventEmitter` interface that is molded against the Node.js\r\n * `EventEmitter` interface.\r\n *\r\n * @constructor\r\n * @public\r\n */\r\nfunction EventEmitter() {\r\n  this._events = new Events();\r\n  this._eventsCount = 0;\r\n}\r\n\r\n/**\r\n * Return an array listing the events for which the emitter has registered\r\n * listeners.\r\n *\r\n * @returns {Array}\r\n * @public\r\n */\r\nEventEmitter.prototype.eventNames = function eventNames() {\r\n  var names = []\r\n    , events\r\n    , name;\r\n\r\n  if (this._eventsCount === 0) return names;\r\n\r\n  for (name in (events = this._events)) {\r\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\r\n  }\r\n\r\n  if (Object.getOwnPropertySymbols) {\r\n    return names.concat(Object.getOwnPropertySymbols(events));\r\n  }\r\n\r\n  return names;\r\n};\r\n\r\n/**\r\n * Return the listeners registered for a given event.\r\n *\r\n * @param {(String|Symbol)} event The event name.\r\n * @returns {Array} The registered listeners.\r\n * @public\r\n */\r\nEventEmitter.prototype.listeners = function listeners(event) {\r\n  var evt = prefix ? prefix + event : event\r\n    , handlers = this._events[evt];\r\n\r\n  if (!handlers) return [];\r\n  if (handlers.fn) return [handlers.fn];\r\n\r\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\r\n    ee[i] = handlers[i].fn;\r\n  }\r\n\r\n  return ee;\r\n};\r\n\r\n/**\r\n * Return the number of listeners listening to a given event.\r\n *\r\n * @param {(String|Symbol)} event The event name.\r\n * @returns {Number} The number of listeners.\r\n * @public\r\n */\r\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\r\n  var evt = prefix ? prefix + event : event\r\n    , listeners = this._events[evt];\r\n\r\n  if (!listeners) return 0;\r\n  if (listeners.fn) return 1;\r\n  return listeners.length;\r\n};\r\n\r\n/**\r\n * Calls each of the listeners registered for a given event.\r\n *\r\n * @param {(String|Symbol)} event The event name.\r\n * @returns {Boolean} `true` if the event had listeners, else `false`.\r\n * @public\r\n */\r\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\r\n  var evt = prefix ? prefix + event : event;\r\n\r\n  if (!this._events[evt]) return false;\r\n\r\n  var listeners = this._events[evt]\r\n    , len = arguments.length\r\n    , args\r\n    , i;\r\n\r\n  if (listeners.fn) {\r\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\r\n\r\n    switch (len) {\r\n      case 1: return listeners.fn.call(listeners.context), true;\r\n      case 2: return listeners.fn.call(listeners.context, a1), true;\r\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\r\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\r\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\r\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\r\n    }\r\n\r\n    for (i = 1, args = new Array(len -1); i < len; i++) {\r\n      args[i - 1] = arguments[i];\r\n    }\r\n\r\n    listeners.fn.apply(listeners.context, args);\r\n  } else {\r\n    var length = listeners.length\r\n      , j;\r\n\r\n    for (i = 0; i < length; i++) {\r\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\r\n\r\n      switch (len) {\r\n        case 1: listeners[i].fn.call(listeners[i].context); break;\r\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\r\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\r\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\r\n        default:\r\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\r\n            args[j - 1] = arguments[j];\r\n          }\r\n\r\n          listeners[i].fn.apply(listeners[i].context, args);\r\n      }\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\n/**\r\n * Add a listener for a given event.\r\n *\r\n * @param {(String|Symbol)} event The event name.\r\n * @param {Function} fn The listener function.\r\n * @param {*} [context=this] The context to invoke the listener with.\r\n * @returns {EventEmitter} `this`.\r\n * @public\r\n */\r\nEventEmitter.prototype.on = function on(event, fn, context) {\r\n  return addListener(this, event, fn, context, false);\r\n};\r\n\r\n/**\r\n * Add a one-time listener for a given event.\r\n *\r\n * @param {(String|Symbol)} event The event name.\r\n * @param {Function} fn The listener function.\r\n * @param {*} [context=this] The context to invoke the listener with.\r\n * @returns {EventEmitter} `this`.\r\n * @public\r\n */\r\nEventEmitter.prototype.once = function once(event, fn, context) {\r\n  return addListener(this, event, fn, context, true);\r\n};\r\n\r\n/**\r\n * Remove the listeners of a given event.\r\n *\r\n * @param {(String|Symbol)} event The event name.\r\n * @param {Function} fn Only remove the listeners that match this function.\r\n * @param {*} context Only remove the listeners that have this context.\r\n * @param {Boolean} once Only remove one-time listeners.\r\n * @returns {EventEmitter} `this`.\r\n * @public\r\n */\r\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\r\n  var evt = prefix ? prefix + event : event;\r\n\r\n  if (!this._events[evt]) return this;\r\n  if (!fn) {\r\n    clearEvent(this, evt);\r\n    return this;\r\n  }\r\n\r\n  var listeners = this._events[evt];\r\n\r\n  if (listeners.fn) {\r\n    if (\r\n      listeners.fn === fn &&\r\n      (!once || listeners.once) &&\r\n      (!context || listeners.context === context)\r\n    ) {\r\n      clearEvent(this, evt);\r\n    }\r\n  } else {\r\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\r\n      if (\r\n        listeners[i].fn !== fn ||\r\n        (once && !listeners[i].once) ||\r\n        (context && listeners[i].context !== context)\r\n      ) {\r\n        events.push(listeners[i]);\r\n      }\r\n    }\r\n\r\n    //\r\n    // Reset the array, or remove it completely if we have no more listeners.\r\n    //\r\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\r\n    else clearEvent(this, evt);\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove all listeners, or those of the specified event.\r\n *\r\n * @param {(String|Symbol)} [event] The event name.\r\n * @returns {EventEmitter} `this`.\r\n * @public\r\n */\r\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\r\n  var evt;\r\n\r\n  if (event) {\r\n    evt = prefix ? prefix + event : event;\r\n    if (this._events[evt]) clearEvent(this, evt);\r\n  } else {\r\n    this._events = new Events();\r\n    this._eventsCount = 0;\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n//\r\n// Alias methods names because people roll like that.\r\n//\r\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\r\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\r\n\r\n//\r\n// Expose the prefix.\r\n//\r\nEventEmitter.prefixed = prefix;\r\n\r\n//\r\n// Allow `EventEmitter` to be imported as module namespace.\r\n//\r\nEventEmitter.EventEmitter = EventEmitter;\r\n\r\n//\r\n// Expose the module.\r\n//\r\nif ('undefined' !== typeof module) {\r\n  module.exports = EventEmitter;\r\n}\r\n", "'use strict';\r\nmodule.exports = (promise, onFinally) => {\r\n\tonFinally = onFinally || (() => {});\r\n\r\n\treturn promise.then(\r\n\t\tval => new Promise(resolve => {\r\n\t\t\tresolve(onFinally());\r\n\t\t}).then(() => val),\r\n\t\terr => new Promise(resolve => {\r\n\t\t\tresolve(onFinally());\r\n\t\t}).then(() => {\r\n\t\t\tthrow err;\r\n\t\t})\r\n\t);\r\n};\r\n", "'use strict';\r\n\r\nconst pFinally = require('p-finally');\r\n\r\nclass TimeoutError extends Error {\r\n\tconstructor(message) {\r\n\t\tsuper(message);\r\n\t\tthis.name = 'TimeoutError';\r\n\t}\r\n}\r\n\r\nconst pTimeout = (promise, milliseconds, fallback) => new Promise((resolve, reject) => {\r\n\tif (typeof milliseconds !== 'number' || milliseconds < 0) {\r\n\t\tthrow new TypeError('Expected `milliseconds` to be a positive number');\r\n\t}\r\n\r\n\tif (milliseconds === Infinity) {\r\n\t\tresolve(promise);\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst timer = setTimeout(() => {\r\n\t\tif (typeof fallback === 'function') {\r\n\t\t\ttry {\r\n\t\t\t\tresolve(fallback());\r\n\t\t\t} catch (error) {\r\n\t\t\t\treject(error);\r\n\t\t\t}\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst message = typeof fallback === 'string' ? fallback : `Promise timed out after ${milliseconds} milliseconds`;\r\n\t\tconst timeoutError = fallback instanceof Error ? fallback : new TimeoutError(message);\r\n\r\n\t\tif (typeof promise.cancel === 'function') {\r\n\t\t\tpromise.cancel();\r\n\t\t}\r\n\r\n\t\treject(timeoutError);\r\n\t}, milliseconds);\r\n\r\n\t// TODO: Use native `finally` keyword when targeting Node.js 10\r\n\tpFinally(\r\n\t\t// eslint-disable-next-line promise/prefer-await-to-then\r\n\t\tpromise.then(resolve, reject),\r\n\t\t() => {\r\n\t\t\tclearTimeout(timer);\r\n\t\t}\r\n\t);\r\n});\r\n\r\nmodule.exports = pTimeout;\r\n// TODO: Remove this for the next major release\r\nmodule.exports.default = pTimeout;\r\n\r\nmodule.exports.TimeoutError = TimeoutError;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// Port of lower_bound from https://en.cppreference.com/w/cpp/algorithm/lower_bound\r\n// Used to compute insertion index to keep queue sorted after insertion\r\nfunction lowerBound(array, value, comparator) {\r\n    let first = 0;\r\n    let count = array.length;\r\n    while (count > 0) {\r\n        const step = (count / 2) | 0;\r\n        let it = first + step;\r\n        if (comparator(array[it], value) <= 0) {\r\n            first = ++it;\r\n            count -= step + 1;\r\n        }\r\n        else {\r\n            count = step;\r\n        }\r\n    }\r\n    return first;\r\n}\r\nexports.default = lowerBound;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst lower_bound_1 = require(\"./lower-bound\");\r\nclass PriorityQueue {\r\n    constructor() {\r\n        this._queue = [];\r\n    }\r\n    enqueue(run, options) {\r\n        options = Object.assign({ priority: 0 }, options);\r\n        const element = {\r\n            priority: options.priority,\r\n            run\r\n        };\r\n        if (this.size && this._queue[this.size - 1].priority >= options.priority) {\r\n            this._queue.push(element);\r\n            return;\r\n        }\r\n        const index = lower_bound_1.default(this._queue, element, (a, b) => b.priority - a.priority);\r\n        this._queue.splice(index, 0, element);\r\n    }\r\n    dequeue() {\r\n        const item = this._queue.shift();\r\n        return item === null || item === void 0 ? void 0 : item.run;\r\n    }\r\n    filter(options) {\r\n        return this._queue.filter((element) => element.priority === options.priority).map((element) => element.run);\r\n    }\r\n    get size() {\r\n        return this._queue.length;\r\n    }\r\n}\r\nexports.default = PriorityQueue;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst EventEmitter = require(\"eventemitter3\");\r\nconst p_timeout_1 = require(\"p-timeout\");\r\nconst priority_queue_1 = require(\"./priority-queue\");\r\n// eslint-disable-next-line @typescript-eslint/no-empty-function\r\nconst empty = () => { };\r\nconst timeoutError = new p_timeout_1.TimeoutError();\r\n/**\r\nPromise queue with concurrency control.\r\n*/\r\nclass PQueue extends EventEmitter {\r\n    constructor(options) {\r\n        var _a, _b, _c, _d;\r\n        super();\r\n        this._intervalCount = 0;\r\n        this._intervalEnd = 0;\r\n        this._pendingCount = 0;\r\n        this._resolveEmpty = empty;\r\n        this._resolveIdle = empty;\r\n        // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\r\n        options = Object.assign({ carryoverConcurrencyCount: false, intervalCap: Infinity, interval: 0, concurrency: Infinity, autoStart: true, queueClass: priority_queue_1.default }, options);\r\n        if (!(typeof options.intervalCap === 'number' && options.intervalCap >= 1)) {\r\n            throw new TypeError(`Expected \\`intervalCap\\` to be a number from 1 and up, got \\`${(_b = (_a = options.intervalCap) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : ''}\\` (${typeof options.intervalCap})`);\r\n        }\r\n        if (options.interval === undefined || !(Number.isFinite(options.interval) && options.interval >= 0)) {\r\n            throw new TypeError(`Expected \\`interval\\` to be a finite number >= 0, got \\`${(_d = (_c = options.interval) === null || _c === void 0 ? void 0 : _c.toString()) !== null && _d !== void 0 ? _d : ''}\\` (${typeof options.interval})`);\r\n        }\r\n        this._carryoverConcurrencyCount = options.carryoverConcurrencyCount;\r\n        this._isIntervalIgnored = options.intervalCap === Infinity || options.interval === 0;\r\n        this._intervalCap = options.intervalCap;\r\n        this._interval = options.interval;\r\n        this._queue = new options.queueClass();\r\n        this._queueClass = options.queueClass;\r\n        this.concurrency = options.concurrency;\r\n        this._timeout = options.timeout;\r\n        this._throwOnTimeout = options.throwOnTimeout === true;\r\n        this._isPaused = options.autoStart === false;\r\n    }\r\n    get _doesIntervalAllowAnother() {\r\n        return this._isIntervalIgnored || this._intervalCount < this._intervalCap;\r\n    }\r\n    get _doesConcurrentAllowAnother() {\r\n        return this._pendingCount < this._concurrency;\r\n    }\r\n    _next() {\r\n        this._pendingCount--;\r\n        this._tryToStartAnother();\r\n        this.emit('next');\r\n    }\r\n    _resolvePromises() {\r\n        this._resolveEmpty();\r\n        this._resolveEmpty = empty;\r\n        if (this._pendingCount === 0) {\r\n            this._resolveIdle();\r\n            this._resolveIdle = empty;\r\n            this.emit('idle');\r\n        }\r\n    }\r\n    _onResumeInterval() {\r\n        this._onInterval();\r\n        this._initializeIntervalIfNeeded();\r\n        this._timeoutId = undefined;\r\n    }\r\n    _isIntervalPaused() {\r\n        const now = Date.now();\r\n        if (this._intervalId === undefined) {\r\n            const delay = this._intervalEnd - now;\r\n            if (delay < 0) {\r\n                // Act as the interval was done\r\n                // We don't need to resume it here because it will be resumed on line 160\r\n                this._intervalCount = (this._carryoverConcurrencyCount) ? this._pendingCount : 0;\r\n            }\r\n            else {\r\n                // Act as the interval is pending\r\n                if (this._timeoutId === undefined) {\r\n                    this._timeoutId = setTimeout(() => {\r\n                        this._onResumeInterval();\r\n                    }, delay);\r\n                }\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    _tryToStartAnother() {\r\n        if (this._queue.size === 0) {\r\n            // We can clear the interval (\"pause\")\r\n            // Because we can redo it later (\"resume\")\r\n            if (this._intervalId) {\r\n                clearInterval(this._intervalId);\r\n            }\r\n            this._intervalId = undefined;\r\n            this._resolvePromises();\r\n            return false;\r\n        }\r\n        if (!this._isPaused) {\r\n            const canInitializeInterval = !this._isIntervalPaused();\r\n            if (this._doesIntervalAllowAnother && this._doesConcurrentAllowAnother) {\r\n                const job = this._queue.dequeue();\r\n                if (!job) {\r\n                    return false;\r\n                }\r\n                this.emit('active');\r\n                job();\r\n                if (canInitializeInterval) {\r\n                    this._initializeIntervalIfNeeded();\r\n                }\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    _initializeIntervalIfNeeded() {\r\n        if (this._isIntervalIgnored || this._intervalId !== undefined) {\r\n            return;\r\n        }\r\n        this._intervalId = setInterval(() => {\r\n            this._onInterval();\r\n        }, this._interval);\r\n        this._intervalEnd = Date.now() + this._interval;\r\n    }\r\n    _onInterval() {\r\n        if (this._intervalCount === 0 && this._pendingCount === 0 && this._intervalId) {\r\n            clearInterval(this._intervalId);\r\n            this._intervalId = undefined;\r\n        }\r\n        this._intervalCount = this._carryoverConcurrencyCount ? this._pendingCount : 0;\r\n        this._processQueue();\r\n    }\r\n    /**\r\n    Executes all queued functions until it reaches the limit.\r\n    */\r\n    _processQueue() {\r\n        // eslint-disable-next-line no-empty\r\n        while (this._tryToStartAnother()) { }\r\n    }\r\n    get concurrency() {\r\n        return this._concurrency;\r\n    }\r\n    set concurrency(newConcurrency) {\r\n        if (!(typeof newConcurrency === 'number' && newConcurrency >= 1)) {\r\n            throw new TypeError(`Expected \\`concurrency\\` to be a number from 1 and up, got \\`${newConcurrency}\\` (${typeof newConcurrency})`);\r\n        }\r\n        this._concurrency = newConcurrency;\r\n        this._processQueue();\r\n    }\r\n    /**\r\n    Adds a sync or async task to the queue. Always returns a promise.\r\n    */\r\n    async add(fn, options = {}) {\r\n        return new Promise((resolve, reject) => {\r\n            const run = async () => {\r\n                this._pendingCount++;\r\n                this._intervalCount++;\r\n                try {\r\n                    const operation = (this._timeout === undefined && options.timeout === undefined) ? fn() : p_timeout_1.default(Promise.resolve(fn()), (options.timeout === undefined ? this._timeout : options.timeout), () => {\r\n                        if (options.throwOnTimeout === undefined ? this._throwOnTimeout : options.throwOnTimeout) {\r\n                            reject(timeoutError);\r\n                        }\r\n                        return undefined;\r\n                    });\r\n                    resolve(await operation);\r\n                }\r\n                catch (error) {\r\n                    reject(error);\r\n                }\r\n                this._next();\r\n            };\r\n            this._queue.enqueue(run, options);\r\n            this._tryToStartAnother();\r\n            this.emit('add');\r\n        });\r\n    }\r\n    /**\r\n    Same as `.add()`, but accepts an array of sync or async functions.\r\n\r\n    @returns A promise that resolves when all functions are resolved.\r\n    */\r\n    async addAll(functions, options) {\r\n        return Promise.all(functions.map(async (function_) => this.add(function_, options)));\r\n    }\r\n    /**\r\n    Start (or resume) executing enqueued tasks within concurrency limit. No need to call this if queue is not paused (via `options.autoStart = false` or by `.pause()` method.)\r\n    */\r\n    start() {\r\n        if (!this._isPaused) {\r\n            return this;\r\n        }\r\n        this._isPaused = false;\r\n        this._processQueue();\r\n        return this;\r\n    }\r\n    /**\r\n    Put queue execution on hold.\r\n    */\r\n    pause() {\r\n        this._isPaused = true;\r\n    }\r\n    /**\r\n    Clear the queue.\r\n    */\r\n    clear() {\r\n        this._queue = new this._queueClass();\r\n    }\r\n    /**\r\n    Can be called multiple times. Useful if you for example add additional items at a later time.\r\n\r\n    @returns A promise that settles when the queue becomes empty.\r\n    */\r\n    async onEmpty() {\r\n        // Instantly resolve if the queue is empty\r\n        if (this._queue.size === 0) {\r\n            return;\r\n        }\r\n        return new Promise(resolve => {\r\n            const existingResolve = this._resolveEmpty;\r\n            this._resolveEmpty = () => {\r\n                existingResolve();\r\n                resolve();\r\n            };\r\n        });\r\n    }\r\n    /**\r\n    The difference with `.onEmpty` is that `.onIdle` guarantees that all work from the queue has finished. `.onEmpty` merely signals that the queue is empty, but it could mean that some promises haven't completed yet.\r\n\r\n    @returns A promise that settles when the queue becomes empty, and all promises have completed; `queue.size === 0 && queue.pending === 0`.\r\n    */\r\n    async onIdle() {\r\n        // Instantly resolve if none pending and if nothing else is queued\r\n        if (this._pendingCount === 0 && this._queue.size === 0) {\r\n            return;\r\n        }\r\n        return new Promise(resolve => {\r\n            const existingResolve = this._resolveIdle;\r\n            this._resolveIdle = () => {\r\n                existingResolve();\r\n                resolve();\r\n            };\r\n        });\r\n    }\r\n    /**\r\n    Size of the queue.\r\n    */\r\n    get size() {\r\n        return this._queue.size;\r\n    }\r\n    /**\r\n    Size of the queue, filtered by the given options.\r\n\r\n    For example, this can be used to find the number of items remaining in the queue with a specific priority level.\r\n    */\r\n    sizeBy(options) {\r\n        // eslint-disable-next-line unicorn/no-fn-reference-in-iterator\r\n        return this._queue.filter(options).length;\r\n    }\r\n    /**\r\n    Number of pending promises.\r\n    */\r\n    get pending() {\r\n        return this._pendingCount;\r\n    }\r\n    /**\r\n    Whether the queue is currently paused.\r\n    */\r\n    get isPaused() {\r\n        return this._isPaused;\r\n    }\r\n    get timeout() {\r\n        return this._timeout;\r\n    }\r\n    /**\r\n    Set the timeout for future operations.\r\n    */\r\n    set timeout(milliseconds) {\r\n        this._timeout = milliseconds;\r\n    }\r\n}\r\nexports.default = PQueue;\r\n", "import snakeCase from \"decamelize\";\r\nimport camelCase from \"camelcase\";\r\nexport function keyToJson(key, map) {\r\n    return map?.[key] || snakeCase(key);\r\n}\r\nexport function keyFromJson(key, map) {\r\n    return map?.[key] || camelCase(key);\r\n}\r\nexport function mapKeys(fields, mapper, map) {\r\n    const mapped = {};\r\n    for (const key in fields) {\r\n        if (Object.hasOwn(fields, key)) {\r\n            mapped[mapper(key, map)] = fields[key];\r\n        }\r\n    }\r\n    return mapped;\r\n}\r\n", "import { keyToJson, mapKeys } from \"./map_keys.js\";\r\nfunction shallowCopy(obj) {\r\n    return Array.isArray(obj) ? [...obj] : { ...obj };\r\n}\r\nfunction replaceSecrets(root, secretsMap) {\r\n    const result = shallowCopy(root);\r\n    for (const [path, secretId] of Object.entries(secretsMap)) {\r\n        const [last, ...partsReverse] = path.split(\".\").reverse();\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        let current = result;\r\n        for (const part of partsReverse.reverse()) {\r\n            if (current[part] === undefined) {\r\n                break;\r\n            }\r\n            current[part] = shallowCopy(current[part]);\r\n            current = current[part];\r\n        }\r\n        if (current[last] !== undefined) {\r\n            current[last] = {\r\n                lc: 1,\r\n                type: \"secret\",\r\n                id: [secretId],\r\n            };\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Get a unique name for the module, rather than parent class implementations.\r\n * Should not be subclassed, subclass lc_name above instead.\r\n */\r\nexport function get_lc_unique_name(\r\n// eslint-disable-next-line @typescript-eslint/no-use-before-define\r\nserializableClass) {\r\n    // \"super\" here would refer to the parent class of Serializable,\r\n    // when we want the parent class of the module actually calling this method.\r\n    const parentClass = Object.getPrototypeOf(serializableClass);\r\n    const lcNameIsSubclassed = typeof serializableClass.lc_name === \"function\" &&\r\n        (typeof parentClass.lc_name !== \"function\" ||\r\n            serializableClass.lc_name() !== parentClass.lc_name());\r\n    if (lcNameIsSubclassed) {\r\n        return serializableClass.lc_name();\r\n    }\r\n    else {\r\n        return serializableClass.name;\r\n    }\r\n}\r\nexport class Serializable {\r\n    /**\r\n     * The name of the serializable. Override to provide an alias or\r\n     * to preserve the serialized module name in minified environments.\r\n     *\r\n     * Implemented as a static method to support loading logic.\r\n     */\r\n    static lc_name() {\r\n        return this.name;\r\n    }\r\n    /**\r\n     * The final serialized identifier for the module.\r\n     */\r\n    get lc_id() {\r\n        return [\r\n            ...this.lc_namespace,\r\n            get_lc_unique_name(this.constructor),\r\n        ];\r\n    }\r\n    /**\r\n     * A map of secrets, which will be omitted from serialization.\r\n     * Keys are paths to the secret in constructor args, e.g. \"foo.bar.baz\".\r\n     * Values are the secret ids, which will be used when deserializing.\r\n     */\r\n    get lc_secrets() {\r\n        return undefined;\r\n    }\r\n    /**\r\n     * A map of additional attributes to merge with constructor args.\r\n     * Keys are the attribute names, e.g. \"foo\".\r\n     * Values are the attribute values, which will be serialized.\r\n     * These attributes need to be accepted by the constructor as arguments.\r\n     */\r\n    get lc_attributes() {\r\n        return undefined;\r\n    }\r\n    /**\r\n     * A map of aliases for constructor args.\r\n     * Keys are the attribute names, e.g. \"foo\".\r\n     * Values are the alias that will replace the key in serialization.\r\n     * This is used to eg. make argument names match Python.\r\n     */\r\n    get lc_aliases() {\r\n        return undefined;\r\n    }\r\n    constructor(kwargs, ..._args) {\r\n        Object.defineProperty(this, \"lc_serializable\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"lc_kwargs\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.lc_kwargs = kwargs || {};\r\n    }\r\n    toJSON() {\r\n        if (!this.lc_serializable) {\r\n            return this.toJSONNotImplemented();\r\n        }\r\n        if (\r\n        // eslint-disable-next-line no-instanceof/no-instanceof\r\n        this.lc_kwargs instanceof Serializable ||\r\n            typeof this.lc_kwargs !== \"object\" ||\r\n            Array.isArray(this.lc_kwargs)) {\r\n            // We do not support serialization of classes with arg not a POJO\r\n            // I'm aware the check above isn't as strict as it could be\r\n            return this.toJSONNotImplemented();\r\n        }\r\n        const aliases = {};\r\n        const secrets = {};\r\n        const kwargs = Object.keys(this.lc_kwargs).reduce((acc, key) => {\r\n            acc[key] = key in this ? this[key] : this.lc_kwargs[key];\r\n            return acc;\r\n        }, {});\r\n        // get secrets, attributes and aliases from all superclasses\r\n        for (\r\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n        let current = Object.getPrototypeOf(this); current; current = Object.getPrototypeOf(current)) {\r\n            Object.assign(aliases, Reflect.get(current, \"lc_aliases\", this));\r\n            Object.assign(secrets, Reflect.get(current, \"lc_secrets\", this));\r\n            Object.assign(kwargs, Reflect.get(current, \"lc_attributes\", this));\r\n        }\r\n        // include all secrets used, even if not in kwargs,\r\n        // will be replaced with sentinel value in replaceSecrets\r\n        Object.keys(secrets).forEach((keyPath) => {\r\n            // eslint-disable-next-line @typescript-eslint/no-this-alias, @typescript-eslint/no-explicit-any\r\n            let read = this;\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            let write = kwargs;\r\n            const [last, ...partsReverse] = keyPath.split(\".\").reverse();\r\n            for (const key of partsReverse.reverse()) {\r\n                if (!(key in read) || read[key] === undefined)\r\n                    return;\r\n                if (!(key in write) || write[key] === undefined) {\r\n                    if (typeof read[key] === \"object\" && read[key] != null) {\r\n                        write[key] = {};\r\n                    }\r\n                    else if (Array.isArray(read[key])) {\r\n                        write[key] = [];\r\n                    }\r\n                }\r\n                read = read[key];\r\n                write = write[key];\r\n            }\r\n            if (last in read && read[last] !== undefined) {\r\n                write[last] = write[last] || read[last];\r\n            }\r\n        });\r\n        return {\r\n            lc: 1,\r\n            type: \"constructor\",\r\n            id: this.lc_id,\r\n            kwargs: mapKeys(Object.keys(secrets).length ? replaceSecrets(kwargs, secrets) : kwargs, keyToJson, aliases),\r\n        };\r\n    }\r\n    toJSONNotImplemented() {\r\n        return {\r\n            lc: 1,\r\n            type: \"not_implemented\",\r\n            id: this.lc_id,\r\n        };\r\n    }\r\n}\r\n", "import { Serializable } from \"../load/serializable.js\";\r\nexport const RUN_KEY = \"__run\";\r\n/**\r\n * Chunk of a single generation. Used for streaming.\r\n */\r\nexport class GenerationChunk {\r\n    constructor(fields) {\r\n        Object.defineProperty(this, \"text\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        Object.defineProperty(this, \"generationInfo\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.text = fields.text;\r\n        this.generationInfo = fields.generationInfo;\r\n    }\r\n    concat(chunk) {\r\n        return new GenerationChunk({\r\n            text: this.text + chunk.text,\r\n            generationInfo: {\r\n                ...this.generationInfo,\r\n                ...chunk.generationInfo,\r\n            },\r\n        });\r\n    }\r\n}\r\n/**\r\n * Base class for all types of messages in a conversation. It includes\r\n * properties like `content`, `name`, and `additional_kwargs`. It also\r\n * includes methods like `toDict()` and `_getType()`.\r\n */\r\nexport class BaseMessage extends Serializable {\r\n    /**\r\n     * @deprecated\r\n     * Use {@link BaseMessage.content} instead.\r\n     */\r\n    get text() {\r\n        return this.content;\r\n    }\r\n    constructor(fields, \r\n    /** @deprecated */\r\n    kwargs) {\r\n        if (typeof fields === \"string\") {\r\n            // eslint-disable-next-line no-param-reassign\r\n            fields = { content: fields, additional_kwargs: kwargs };\r\n        }\r\n        // Make sure the default value for additional_kwargs is passed into super() for serialization\r\n        if (!fields.additional_kwargs) {\r\n            // eslint-disable-next-line no-param-reassign\r\n            fields.additional_kwargs = {};\r\n        }\r\n        super(fields);\r\n        Object.defineProperty(this, \"lc_namespace\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\"langchain\", \"schema\"]\r\n        });\r\n        Object.defineProperty(this, \"lc_serializable\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        /** The text of the message. */\r\n        Object.defineProperty(this, \"content\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /** The name of the message sender in a multi-user chat. */\r\n        Object.defineProperty(this, \"name\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /** Additional keyword arguments */\r\n        Object.defineProperty(this, \"additional_kwargs\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.name = fields.name;\r\n        this.content = fields.content;\r\n        this.additional_kwargs = fields.additional_kwargs;\r\n    }\r\n    toDict() {\r\n        return {\r\n            type: this._getType(),\r\n            data: this.toJSON()\r\n                .kwargs,\r\n        };\r\n    }\r\n}\r\n/**\r\n * Represents a chunk of a message, which can be concatenated with other\r\n * message chunks. It includes a method `_merge_kwargs_dict()` for merging\r\n * additional keyword arguments from another `BaseMessageChunk` into this\r\n * one. It also overrides the `__add__()` method to support concatenation\r\n * of `BaseMessageChunk` instances.\r\n */\r\nexport class BaseMessageChunk extends BaseMessage {\r\n    static _mergeAdditionalKwargs(left, right) {\r\n        const merged = { ...left };\r\n        for (const [key, value] of Object.entries(right)) {\r\n            if (merged[key] === undefined) {\r\n                merged[key] = value;\r\n            }\r\n            else if (typeof merged[key] !== typeof value) {\r\n                throw new Error(`additional_kwargs[${key}] already exists in the message chunk, but with a different type.`);\r\n            }\r\n            else if (typeof merged[key] === \"string\") {\r\n                merged[key] = merged[key] + value;\r\n            }\r\n            else if (!Array.isArray(merged[key]) &&\r\n                typeof merged[key] === \"object\") {\r\n                merged[key] = this._mergeAdditionalKwargs(merged[key], value);\r\n            }\r\n            else {\r\n                throw new Error(`additional_kwargs[${key}] already exists in this message chunk.`);\r\n            }\r\n        }\r\n        return merged;\r\n    }\r\n}\r\n/**\r\n * Represents a human message in a conversation.\r\n */\r\nexport class HumanMessage extends BaseMessage {\r\n    static lc_name() {\r\n        return \"HumanMessage\";\r\n    }\r\n    _getType() {\r\n        return \"human\";\r\n    }\r\n}\r\n/**\r\n * Represents a chunk of a human message, which can be concatenated with\r\n * other human message chunks.\r\n */\r\nexport class HumanMessageChunk extends BaseMessageChunk {\r\n    static lc_name() {\r\n        return \"HumanMessageChunk\";\r\n    }\r\n    _getType() {\r\n        return \"human\";\r\n    }\r\n    concat(chunk) {\r\n        return new HumanMessageChunk({\r\n            content: this.content + chunk.content,\r\n            additional_kwargs: HumanMessageChunk._mergeAdditionalKwargs(this.additional_kwargs, chunk.additional_kwargs),\r\n        });\r\n    }\r\n}\r\n/**\r\n * Represents an AI message in a conversation.\r\n */\r\nexport class AIMessage extends BaseMessage {\r\n    static lc_name() {\r\n        return \"AIMessage\";\r\n    }\r\n    _getType() {\r\n        return \"ai\";\r\n    }\r\n}\r\n/**\r\n * Represents a chunk of an AI message, which can be concatenated with\r\n * other AI message chunks.\r\n */\r\nexport class AIMessageChunk extends BaseMessageChunk {\r\n    static lc_name() {\r\n        return \"AIMessageChunk\";\r\n    }\r\n    _getType() {\r\n        return \"ai\";\r\n    }\r\n    concat(chunk) {\r\n        return new AIMessageChunk({\r\n            content: this.content + chunk.content,\r\n            additional_kwargs: AIMessageChunk._mergeAdditionalKwargs(this.additional_kwargs, chunk.additional_kwargs),\r\n        });\r\n    }\r\n}\r\n/**\r\n * Represents a system message in a conversation.\r\n */\r\nexport class SystemMessage extends BaseMessage {\r\n    static lc_name() {\r\n        return \"SystemMessage\";\r\n    }\r\n    _getType() {\r\n        return \"system\";\r\n    }\r\n}\r\n/**\r\n * Represents a chunk of a system message, which can be concatenated with\r\n * other system message chunks.\r\n */\r\nexport class SystemMessageChunk extends BaseMessageChunk {\r\n    static lc_name() {\r\n        return \"SystemMessageChunk\";\r\n    }\r\n    _getType() {\r\n        return \"system\";\r\n    }\r\n    concat(chunk) {\r\n        return new SystemMessageChunk({\r\n            content: this.content + chunk.content,\r\n            additional_kwargs: SystemMessageChunk._mergeAdditionalKwargs(this.additional_kwargs, chunk.additional_kwargs),\r\n        });\r\n    }\r\n}\r\n/**\r\n * @deprecated\r\n * Use {@link BaseMessage} instead.\r\n */\r\nexport const BaseChatMessage = BaseMessage;\r\n/**\r\n * @deprecated\r\n * Use {@link HumanMessage} instead.\r\n */\r\nexport const HumanChatMessage = HumanMessage;\r\n/**\r\n * @deprecated\r\n * Use {@link AIMessage} instead.\r\n */\r\nexport const AIChatMessage = AIMessage;\r\n/**\r\n * @deprecated\r\n * Use {@link SystemMessage} instead.\r\n */\r\nexport const SystemChatMessage = SystemMessage;\r\n/**\r\n * Represents a function message in a conversation.\r\n */\r\nexport class FunctionMessage extends BaseMessage {\r\n    static lc_name() {\r\n        return \"FunctionMessage\";\r\n    }\r\n    constructor(fields, \r\n    /** @deprecated */\r\n    name) {\r\n        if (typeof fields === \"string\") {\r\n            // eslint-disable-next-line no-param-reassign, @typescript-eslint/no-non-null-assertion\r\n            fields = { content: fields, name: name };\r\n        }\r\n        super(fields);\r\n    }\r\n    _getType() {\r\n        return \"function\";\r\n    }\r\n}\r\n/**\r\n * Represents a chunk of a function message, which can be concatenated\r\n * with other function message chunks.\r\n */\r\nexport class FunctionMessageChunk extends BaseMessageChunk {\r\n    static lc_name() {\r\n        return \"FunctionMessageChunk\";\r\n    }\r\n    _getType() {\r\n        return \"function\";\r\n    }\r\n    concat(chunk) {\r\n        return new FunctionMessageChunk({\r\n            content: this.content + chunk.content,\r\n            additional_kwargs: FunctionMessageChunk._mergeAdditionalKwargs(this.additional_kwargs, chunk.additional_kwargs),\r\n            name: this.name ?? \"\",\r\n        });\r\n    }\r\n}\r\n/**\r\n * Represents a chat message in a conversation.\r\n */\r\nexport class ChatMessage extends BaseMessage {\r\n    static lc_name() {\r\n        return \"ChatMessage\";\r\n    }\r\n    constructor(fields, role) {\r\n        if (typeof fields === \"string\") {\r\n            // eslint-disable-next-line no-param-reassign, @typescript-eslint/no-non-null-assertion\r\n            fields = { content: fields, role: role };\r\n        }\r\n        super(fields);\r\n        Object.defineProperty(this, \"role\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.role = fields.role;\r\n    }\r\n    _getType() {\r\n        return \"generic\";\r\n    }\r\n    static isInstance(message) {\r\n        return message._getType() === \"generic\";\r\n    }\r\n}\r\nexport function isBaseMessage(messageLike) {\r\n    return typeof messageLike._getType === \"function\";\r\n}\r\nexport function coerceMessageLikeToMessage(messageLike) {\r\n    if (typeof messageLike === \"string\") {\r\n        return new HumanMessage(messageLike);\r\n    }\r\n    else if (isBaseMessage(messageLike)) {\r\n        return messageLike;\r\n    }\r\n    const [type, content] = messageLike;\r\n    if (type === \"human\" || type === \"user\") {\r\n        return new HumanMessage({ content });\r\n    }\r\n    else if (type === \"ai\" || type === \"assistant\") {\r\n        return new AIMessage({ content });\r\n    }\r\n    else if (type === \"system\") {\r\n        return new SystemMessage({ content });\r\n    }\r\n    else {\r\n        throw new Error(`Unable to coerce message from array: only human, AI, or system message coercion is currently supported.`);\r\n    }\r\n}\r\n/**\r\n * Represents a chunk of a chat message, which can be concatenated with\r\n * other chat message chunks.\r\n */\r\nexport class ChatMessageChunk extends BaseMessageChunk {\r\n    static lc_name() {\r\n        return \"ChatMessageChunk\";\r\n    }\r\n    constructor(fields, role) {\r\n        if (typeof fields === \"string\") {\r\n            // eslint-disable-next-line no-param-reassign, @typescript-eslint/no-non-null-assertion\r\n            fields = { content: fields, role: role };\r\n        }\r\n        super(fields);\r\n        Object.defineProperty(this, \"role\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.role = fields.role;\r\n    }\r\n    _getType() {\r\n        return \"generic\";\r\n    }\r\n    concat(chunk) {\r\n        return new ChatMessageChunk({\r\n            content: this.content + chunk.content,\r\n            additional_kwargs: ChatMessageChunk._mergeAdditionalKwargs(this.additional_kwargs, chunk.additional_kwargs),\r\n            role: this.role,\r\n        });\r\n    }\r\n}\r\nexport class ChatGenerationChunk extends GenerationChunk {\r\n    constructor(fields) {\r\n        super(fields);\r\n        Object.defineProperty(this, \"message\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.message = fields.message;\r\n    }\r\n    concat(chunk) {\r\n        return new ChatGenerationChunk({\r\n            text: this.text + chunk.text,\r\n            generationInfo: {\r\n                ...this.generationInfo,\r\n                ...chunk.generationInfo,\r\n            },\r\n            message: this.message.concat(chunk.message),\r\n        });\r\n    }\r\n}\r\n/**\r\n * Maps messages from an older format (V1) to the current `StoredMessage`\r\n * format. If the message is already in the `StoredMessage` format, it is\r\n * returned as is. Otherwise, it transforms the V1 message into a\r\n * `StoredMessage`. This function is important for maintaining\r\n * compatibility with older message formats.\r\n */\r\nfunction mapV1MessageToStoredMessage(message) {\r\n    // TODO: Remove this mapper when we deprecate the old message format.\r\n    if (message.data !== undefined) {\r\n        return message;\r\n    }\r\n    else {\r\n        const v1Message = message;\r\n        return {\r\n            type: v1Message.type,\r\n            data: {\r\n                content: v1Message.text,\r\n                role: v1Message.role,\r\n                name: undefined,\r\n            },\r\n        };\r\n    }\r\n}\r\nexport function mapStoredMessageToChatMessage(message) {\r\n    const storedMessage = mapV1MessageToStoredMessage(message);\r\n    switch (storedMessage.type) {\r\n        case \"human\":\r\n            return new HumanMessage(storedMessage.data);\r\n        case \"ai\":\r\n            return new AIMessage(storedMessage.data);\r\n        case \"system\":\r\n            return new SystemMessage(storedMessage.data);\r\n        case \"function\":\r\n            if (storedMessage.data.name === undefined) {\r\n                throw new Error(\"Name must be defined for function messages\");\r\n            }\r\n            return new FunctionMessage(storedMessage.data);\r\n        case \"chat\": {\r\n            if (storedMessage.data.role === undefined) {\r\n                throw new Error(\"Role must be defined for chat messages\");\r\n            }\r\n            return new ChatMessage(storedMessage.data);\r\n        }\r\n        default:\r\n            throw new Error(`Got unexpected type: ${storedMessage.type}`);\r\n    }\r\n}\r\n/**\r\n * Base PromptValue class. All prompt values should extend this class.\r\n */\r\nexport class BasePromptValue extends Serializable {\r\n}\r\n/**\r\n * Base class for all chat message histories. All chat message histories\r\n * should extend this class.\r\n */\r\nexport class BaseChatMessageHistory extends Serializable {\r\n}\r\n/**\r\n * Base class for all list chat message histories. All list chat message\r\n * histories should extend this class.\r\n */\r\nexport class BaseListChatMessageHistory extends Serializable {\r\n    addUserMessage(message) {\r\n        return this.addMessage(new HumanMessage(message));\r\n    }\r\n    addAIChatMessage(message) {\r\n        return this.addMessage(new AIMessage(message));\r\n    }\r\n}\r\n/**\r\n * Base class for all caches. All caches should extend this class.\r\n */\r\nexport class BaseCache {\r\n}\r\n/**\r\n * Base class for all file stores. All file stores should extend this\r\n * class.\r\n */\r\nexport class BaseFileStore extends Serializable {\r\n}\r\n/**\r\n * Base class for all entity stores. All entity stores should extend this\r\n * class.\r\n */\r\nexport class BaseEntityStore extends Serializable {\r\n}\r\n/**\r\n * Abstract class for a document store. All document stores should extend\r\n * this class.\r\n */\r\nexport class Docstore {\r\n}\r\n", "import pRetry from \"p-retry\";\r\nimport { CallbackManager, } from \"../../callbacks/manager.js\";\r\nimport { LogStreamCallbackHandler, RunLogPatch, } from \"../../callbacks/handlers/log_stream.js\";\r\nimport { Serializable } from \"../../load/serializable.js\";\r\nimport { IterableReadableStream } from \"../../util/stream.js\";\r\nimport { getCallbackMangerForConfig } from \"./config.js\";\r\nimport { AsyncCaller } from \"../../util/async_caller.js\";\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nfunction _coerceToDict(value, defaultKey) {\r\n    return value && !Array.isArray(value) && typeof value === \"object\"\r\n        ? value\r\n        : { [defaultKey]: value };\r\n}\r\n/**\r\n * A Runnable is a generic unit of work that can be invoked, batched, streamed, and/or\r\n * transformed.\r\n */\r\nexport class Runnable extends Serializable {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"lc_runnable\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n    }\r\n    /**\r\n     * Bind arguments to a Runnable, returning a new Runnable.\r\n     * @param kwargs\r\n     * @returns A new RunnableBinding that, when invoked, will apply the bound args.\r\n     */\r\n    bind(kwargs) {\r\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\r\n        return new RunnableBinding({ bound: this, kwargs, config: {} });\r\n    }\r\n    /**\r\n     * Return a new Runnable that maps a list of inputs to a list of outputs,\r\n     * by calling invoke() with each input.\r\n     */\r\n    map() {\r\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\r\n        return new RunnableEach({ bound: this });\r\n    }\r\n    /**\r\n     * Add retry logic to an existing runnable.\r\n     * @param kwargs\r\n     * @returns A new RunnableRetry that, when invoked, will retry according to the parameters.\r\n     */\r\n    withRetry(fields) {\r\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\r\n        return new RunnableRetry({\r\n            bound: this,\r\n            kwargs: {},\r\n            config: {},\r\n            maxAttemptNumber: fields?.stopAfterAttempt,\r\n            ...fields,\r\n        });\r\n    }\r\n    /**\r\n     * Bind config to a Runnable, returning a new Runnable.\r\n     * @param config New configuration parameters to attach to the new runnable.\r\n     * @returns A new RunnableBinding with a config matching what's passed.\r\n     */\r\n    withConfig(config) {\r\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\r\n        return new RunnableBinding({\r\n            bound: this,\r\n            config,\r\n            kwargs: {},\r\n        });\r\n    }\r\n    /**\r\n     * Create a new runnable from the current one that will try invoking\r\n     * other passed fallback runnables if the initial invocation fails.\r\n     * @param fields.fallbacks Other runnables to call if the runnable errors.\r\n     * @returns A new RunnableWithFallbacks.\r\n     */\r\n    withFallbacks(fields) {\r\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\r\n        return new RunnableWithFallbacks({\r\n            runnable: this,\r\n            fallbacks: fields.fallbacks,\r\n        });\r\n    }\r\n    _getOptionsList(options, length = 0) {\r\n        if (Array.isArray(options)) {\r\n            if (options.length !== length) {\r\n                throw new Error(`Passed \"options\" must be an array with the same length as the inputs, but got ${options.length} options for ${length} inputs`);\r\n            }\r\n            return options;\r\n        }\r\n        return Array.from({ length }, () => options);\r\n    }\r\n    async batch(inputs, options, batchOptions) {\r\n        const configList = this._getOptionsList(options ?? {}, inputs.length);\r\n        const caller = new AsyncCaller({\r\n            maxConcurrency: batchOptions?.maxConcurrency,\r\n            onFailedAttempt: (e) => {\r\n                throw e;\r\n            },\r\n        });\r\n        const batchCalls = inputs.map((input, i) => caller.call(async () => {\r\n            try {\r\n                const result = await this.invoke(input, configList[i]);\r\n                return result;\r\n            }\r\n            catch (e) {\r\n                if (batchOptions?.returnExceptions) {\r\n                    return e;\r\n                }\r\n                throw e;\r\n            }\r\n        }));\r\n        return Promise.all(batchCalls);\r\n    }\r\n    /**\r\n     * Default streaming implementation.\r\n     * Subclasses should override this method if they support streaming output.\r\n     * @param input\r\n     * @param options\r\n     */\r\n    async *_streamIterator(input, options) {\r\n        yield this.invoke(input, options);\r\n    }\r\n    /**\r\n     * Stream output in chunks.\r\n     * @param input\r\n     * @param options\r\n     * @returns A readable stream that is also an iterable.\r\n     */\r\n    async stream(input, options) {\r\n        return IterableReadableStream.fromAsyncGenerator(this._streamIterator(input, options));\r\n    }\r\n    _separateRunnableConfigFromCallOptions(options = {}) {\r\n        const runnableConfig = {\r\n            callbacks: options.callbacks,\r\n            tags: options.tags,\r\n            metadata: options.metadata,\r\n        };\r\n        const callOptions = { ...options };\r\n        delete callOptions.callbacks;\r\n        delete callOptions.tags;\r\n        delete callOptions.metadata;\r\n        return [runnableConfig, callOptions];\r\n    }\r\n    async _callWithConfig(func, input, options) {\r\n        const callbackManager_ = await getCallbackMangerForConfig(options);\r\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), _coerceToDict(input, \"input\"), undefined, options?.runType);\r\n        let output;\r\n        try {\r\n            output = await func.bind(this)(input, options, runManager);\r\n        }\r\n        catch (e) {\r\n            await runManager?.handleChainError(e);\r\n            throw e;\r\n        }\r\n        await runManager?.handleChainEnd(_coerceToDict(output, \"output\"));\r\n        return output;\r\n    }\r\n    /**\r\n     * Internal method that handles batching and configuration for a runnable\r\n     * It takes a function, input values, and optional configuration, and\r\n     * returns a promise that resolves to the output values.\r\n     * @param func The function to be executed for each input value.\r\n     * @param input The input values to be processed.\r\n     * @param config Optional configuration for the function execution.\r\n     * @returns A promise that resolves to the output values.\r\n     */\r\n    async _batchWithConfig(func, inputs, options, batchOptions) {\r\n        const configs = this._getOptionsList((options ?? {}), inputs.length);\r\n        const callbackManagers = await Promise.all(configs.map(getCallbackMangerForConfig));\r\n        const runManagers = await Promise.all(callbackManagers.map((callbackManager, i) => callbackManager?.handleChainStart(this.toJSON(), _coerceToDict(inputs[i], \"input\"))));\r\n        let outputs;\r\n        try {\r\n            outputs = await func(inputs, configs, runManagers, batchOptions);\r\n        }\r\n        catch (e) {\r\n            await Promise.all(runManagers.map((runManager) => runManager?.handleChainError(e)));\r\n            throw e;\r\n        }\r\n        await Promise.all(runManagers.map((runManager) => runManager?.handleChainEnd(_coerceToDict(outputs, \"output\"))));\r\n        return outputs;\r\n    }\r\n    /**\r\n     * Helper method to transform an Iterator of Input values into an Iterator of\r\n     * Output values, with callbacks.\r\n     * Use this to implement `stream()` or `transform()` in Runnable subclasses.\r\n     */\r\n    async *_transformStreamWithConfig(inputGenerator, transformer, options) {\r\n        let finalInput;\r\n        let finalInputSupported = true;\r\n        let finalOutput;\r\n        let finalOutputSupported = true;\r\n        const callbackManager_ = await getCallbackMangerForConfig(options);\r\n        let runManager;\r\n        const serializedRepresentation = this.toJSON();\r\n        async function* wrapInputForTracing() {\r\n            for await (const chunk of inputGenerator) {\r\n                if (!runManager) {\r\n                    // Start the run manager AFTER the iterator starts to preserve\r\n                    // tracing order\r\n                    runManager = await callbackManager_?.handleChainStart(serializedRepresentation, { input: \"\" }, undefined, options?.runType);\r\n                }\r\n                if (finalInputSupported) {\r\n                    if (finalInput === undefined) {\r\n                        finalInput = chunk;\r\n                    }\r\n                    else {\r\n                        try {\r\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                            finalInput = finalInput.concat(chunk);\r\n                        }\r\n                        catch {\r\n                            finalInput = undefined;\r\n                            finalInputSupported = false;\r\n                        }\r\n                    }\r\n                }\r\n                yield chunk;\r\n            }\r\n        }\r\n        const wrappedInputGenerator = wrapInputForTracing();\r\n        try {\r\n            const outputIterator = transformer(wrappedInputGenerator, runManager, options);\r\n            for await (const chunk of outputIterator) {\r\n                yield chunk;\r\n                if (finalOutputSupported) {\r\n                    if (finalOutput === undefined) {\r\n                        finalOutput = chunk;\r\n                    }\r\n                    else {\r\n                        try {\r\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                            finalOutput = finalOutput.concat(chunk);\r\n                        }\r\n                        catch {\r\n                            finalOutput = undefined;\r\n                            finalOutputSupported = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            await runManager?.handleChainError(e, undefined, undefined, undefined, {\r\n                inputs: _coerceToDict(finalInput, \"input\"),\r\n            });\r\n            throw e;\r\n        }\r\n        await runManager?.handleChainEnd(finalOutput ?? {}, undefined, undefined, undefined, { inputs: _coerceToDict(finalInput, \"input\") });\r\n    }\r\n    _patchConfig(config = {}, callbackManager = undefined) {\r\n        return { ...config, callbacks: callbackManager };\r\n    }\r\n    /**\r\n     * Create a new runnable sequence that runs each individual runnable in series,\r\n     * piping the output of one runnable into another runnable or runnable-like.\r\n     * @param coerceable A runnable, function, or object whose values are functions or runnables.\r\n     * @returns A new runnable sequence.\r\n     */\r\n    pipe(coerceable) {\r\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\r\n        return new RunnableSequence({\r\n            first: this,\r\n            last: _coerceToRunnable(coerceable),\r\n        });\r\n    }\r\n    /**\r\n     * Default implementation of transform, which buffers input and then calls stream.\r\n     * Subclasses should override this method if they can start producing output while\r\n     * input is still being generated.\r\n     * @param generator\r\n     * @param options\r\n     */\r\n    async *transform(generator, options) {\r\n        let finalChunk;\r\n        for await (const chunk of generator) {\r\n            if (finalChunk === undefined) {\r\n                finalChunk = chunk;\r\n            }\r\n            else {\r\n                // Make a best effort to gather, for any type that supports concat.\r\n                // This method should throw an error if gathering fails.\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                finalChunk = finalChunk.concat(chunk);\r\n            }\r\n        }\r\n        yield* this._streamIterator(finalChunk, options);\r\n    }\r\n    /**\r\n     * Stream all output from a runnable, as reported to the callback system.\r\n     * This includes all inner runs of LLMs, Retrievers, Tools, etc.\r\n     * Output is streamed as Log objects, which include a list of\r\n     * jsonpatch ops that describe how the state of the run has changed in each\r\n     * step, and the final state of the run.\r\n     * The jsonpatch ops can be applied in order to construct state.\r\n     * @param input\r\n     * @param options\r\n     * @param streamOptions\r\n     */\r\n    async *streamLog(input, options, streamOptions) {\r\n        const stream = new LogStreamCallbackHandler({\r\n            ...streamOptions,\r\n            autoClose: false,\r\n        });\r\n        const config = options ?? {};\r\n        const { callbacks } = config;\r\n        if (callbacks === undefined) {\r\n            config.callbacks = [stream];\r\n        }\r\n        else if (Array.isArray(callbacks)) {\r\n            config.callbacks = callbacks.concat([stream]);\r\n        }\r\n        else {\r\n            const copiedCallbacks = callbacks.copy();\r\n            copiedCallbacks.inheritableHandlers.push(stream);\r\n            config.callbacks = copiedCallbacks;\r\n        }\r\n        const runnableStream = await this.stream(input, config);\r\n        async function consumeRunnableStream() {\r\n            try {\r\n                for await (const chunk of runnableStream) {\r\n                    const patch = new RunLogPatch({\r\n                        ops: [\r\n                            {\r\n                                op: \"add\",\r\n                                path: \"/streamed_output/-\",\r\n                                value: chunk,\r\n                            },\r\n                        ],\r\n                    });\r\n                    await stream.writer.write(patch);\r\n                }\r\n            }\r\n            finally {\r\n                await stream.writer.close();\r\n            }\r\n        }\r\n        const runnableStreamPromise = consumeRunnableStream();\r\n        try {\r\n            for await (const log of stream) {\r\n                yield log;\r\n            }\r\n        }\r\n        finally {\r\n            await runnableStreamPromise;\r\n        }\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    static isRunnable(thing) {\r\n        return thing.lc_runnable;\r\n    }\r\n}\r\n/**\r\n * A runnable that delegates calls to another runnable with a set of kwargs.\r\n */\r\nexport class RunnableBinding extends Runnable {\r\n    static lc_name() {\r\n        return \"RunnableBinding\";\r\n    }\r\n    constructor(fields) {\r\n        super(fields);\r\n        Object.defineProperty(this, \"lc_namespace\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\"langchain\", \"schema\", \"runnable\"]\r\n        });\r\n        Object.defineProperty(this, \"lc_serializable\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"bound\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"config\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"kwargs\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.bound = fields.bound;\r\n        this.kwargs = fields.kwargs;\r\n        this.config = fields.config;\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    _mergeConfig(options) {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        const copy = { ...this.config };\r\n        if (options) {\r\n            for (const key of Object.keys(options)) {\r\n                if (key === \"metadata\") {\r\n                    copy[key] = { ...copy[key], ...options[key] };\r\n                }\r\n                else if (key === \"tags\") {\r\n                    copy[key] = (copy[key] ?? []).concat(options[key] ?? []);\r\n                }\r\n                else {\r\n                    copy[key] = options[key] ?? copy[key];\r\n                }\r\n            }\r\n        }\r\n        return copy;\r\n    }\r\n    bind(kwargs) {\r\n        return this.constructor({\r\n            bound: this.bound,\r\n            kwargs: { ...this.kwargs, ...kwargs },\r\n            config: this.config,\r\n        });\r\n    }\r\n    withConfig(config) {\r\n        return this.constructor({\r\n            bound: this.bound,\r\n            kwargs: this.kwargs,\r\n            config: { ...this.config, ...config },\r\n        });\r\n    }\r\n    withRetry(fields) {\r\n        return this.constructor({\r\n            bound: this.bound.withRetry(fields),\r\n            kwargs: this.kwargs,\r\n            config: this.config,\r\n        });\r\n    }\r\n    async invoke(input, options) {\r\n        return this.bound.invoke(input, this._mergeConfig({ ...options, ...this.kwargs }));\r\n    }\r\n    async batch(inputs, options, batchOptions) {\r\n        const mergedOptions = Array.isArray(options)\r\n            ? options.map((individualOption) => this._mergeConfig({\r\n                ...individualOption,\r\n                ...this.kwargs,\r\n            }))\r\n            : this._mergeConfig({ ...options, ...this.kwargs });\r\n        return this.bound.batch(inputs, mergedOptions, batchOptions);\r\n    }\r\n    async *_streamIterator(input, options) {\r\n        yield* this.bound._streamIterator(input, this._mergeConfig({ ...options, ...this.kwargs }));\r\n    }\r\n    async stream(input, options) {\r\n        return this.bound.stream(input, this._mergeConfig({ ...options, ...this.kwargs }));\r\n    }\r\n    async *transform(\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    generator, options) {\r\n        yield* this.bound.transform(generator, this._mergeConfig({ ...options, ...this.kwargs }));\r\n    }\r\n    static isRunnableBinding(\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    thing\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    ) {\r\n        return thing.bound && Runnable.isRunnable(thing.bound);\r\n    }\r\n}\r\n/**\r\n * A runnable that delegates calls to another runnable\r\n * with each element of the input sequence.\r\n */\r\nexport class RunnableEach extends Runnable {\r\n    static lc_name() {\r\n        return \"RunnableEach\";\r\n    }\r\n    constructor(fields) {\r\n        super(fields);\r\n        Object.defineProperty(this, \"lc_serializable\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"lc_namespace\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\"langchain\", \"schema\", \"runnable\"]\r\n        });\r\n        Object.defineProperty(this, \"bound\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.bound = fields.bound;\r\n    }\r\n    /**\r\n     * Binds the runnable with the specified arguments.\r\n     * @param args The arguments to bind the runnable with.\r\n     * @returns A new instance of the `RunnableEach` class that is bound with the specified arguments.\r\n     */\r\n    bind(kwargs) {\r\n        return new RunnableEach({\r\n            bound: this.bound.bind(kwargs),\r\n        });\r\n    }\r\n    /**\r\n     * Invokes the runnable with the specified input and configuration.\r\n     * @param input The input to invoke the runnable with.\r\n     * @param config The configuration to invoke the runnable with.\r\n     * @returns A promise that resolves to the output of the runnable.\r\n     */\r\n    async invoke(inputs, config) {\r\n        return this._callWithConfig(this._invoke, inputs, config);\r\n    }\r\n    /**\r\n     * A helper method that is used to invoke the runnable with the specified input and configuration.\r\n     * @param input The input to invoke the runnable with.\r\n     * @param config The configuration to invoke the runnable with.\r\n     * @returns A promise that resolves to the output of the runnable.\r\n     */\r\n    async _invoke(inputs, config, runManager) {\r\n        return this.bound.batch(inputs, this._patchConfig(config, runManager?.getChild()));\r\n    }\r\n}\r\n/**\r\n * Base class for runnables that can be retried a\r\n * specified number of times.\r\n */\r\nexport class RunnableRetry extends RunnableBinding {\r\n    static lc_name() {\r\n        return \"RunnableRetry\";\r\n    }\r\n    constructor(fields) {\r\n        super(fields);\r\n        Object.defineProperty(this, \"lc_namespace\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\"langchain\", \"schema\", \"runnable\"]\r\n        });\r\n        Object.defineProperty(this, \"maxAttemptNumber\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 3\r\n        });\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        Object.defineProperty(this, \"onFailedAttempt\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: () => { }\r\n        });\r\n        this.maxAttemptNumber = fields.maxAttemptNumber ?? this.maxAttemptNumber;\r\n        this.onFailedAttempt = fields.onFailedAttempt ?? this.onFailedAttempt;\r\n    }\r\n    _patchConfigForRetry(attempt, config, runManager) {\r\n        const tag = attempt > 1 ? `retry:attempt:${attempt}` : undefined;\r\n        return this._patchConfig(config, runManager?.getChild(tag));\r\n    }\r\n    async _invoke(input, config, runManager) {\r\n        return pRetry((attemptNumber) => super.invoke(input, this._patchConfigForRetry(attemptNumber, config, runManager)), {\r\n            onFailedAttempt: this.onFailedAttempt,\r\n            retries: Math.max(this.maxAttemptNumber - 1, 0),\r\n            randomize: true,\r\n        });\r\n    }\r\n    /**\r\n     * Method that invokes the runnable with the specified input, run manager,\r\n     * and config. It handles the retry logic by catching any errors and\r\n     * recursively invoking itself with the updated config for the next retry\r\n     * attempt.\r\n     * @param input The input for the runnable.\r\n     * @param runManager The run manager for the runnable.\r\n     * @param config The config for the runnable.\r\n     * @returns A promise that resolves to the output of the runnable.\r\n     */\r\n    async invoke(input, config) {\r\n        return this._callWithConfig(this._invoke, input, config);\r\n    }\r\n    async _batch(inputs, configs, runManagers, batchOptions) {\r\n        const resultsMap = {};\r\n        try {\r\n            await pRetry(async (attemptNumber) => {\r\n                const remainingIndexes = inputs\r\n                    .map((_, i) => i)\r\n                    .filter((i) => resultsMap[i.toString()] === undefined ||\r\n                    // eslint-disable-next-line no-instanceof/no-instanceof\r\n                    resultsMap[i.toString()] instanceof Error);\r\n                const remainingInputs = remainingIndexes.map((i) => inputs[i]);\r\n                const patchedConfigs = remainingIndexes.map((i) => this._patchConfigForRetry(attemptNumber, configs?.[i], runManagers?.[i]));\r\n                const results = await super.batch(remainingInputs, patchedConfigs, {\r\n                    ...batchOptions,\r\n                    returnExceptions: true,\r\n                });\r\n                let firstException;\r\n                for (let i = 0; i < results.length; i += 1) {\r\n                    const result = results[i];\r\n                    const resultMapIndex = remainingIndexes[i];\r\n                    // eslint-disable-next-line no-instanceof/no-instanceof\r\n                    if (result instanceof Error) {\r\n                        if (firstException === undefined) {\r\n                            firstException = result;\r\n                        }\r\n                    }\r\n                    resultsMap[resultMapIndex.toString()] = result;\r\n                }\r\n                if (firstException) {\r\n                    throw firstException;\r\n                }\r\n                return results;\r\n            }, {\r\n                onFailedAttempt: this.onFailedAttempt,\r\n                retries: Math.max(this.maxAttemptNumber - 1, 0),\r\n                randomize: true,\r\n            });\r\n        }\r\n        catch (e) {\r\n            if (batchOptions?.returnExceptions !== true) {\r\n                throw e;\r\n            }\r\n        }\r\n        return Object.keys(resultsMap)\r\n            .sort((a, b) => parseInt(a, 10) - parseInt(b, 10))\r\n            .map((key) => resultsMap[parseInt(key, 10)]);\r\n    }\r\n    async batch(inputs, options, batchOptions) {\r\n        return this._batchWithConfig(this._batch.bind(this), inputs, options, batchOptions);\r\n    }\r\n}\r\n/**\r\n * A sequence of runnables, where the output of each is the input of the next.\r\n */\r\nexport class RunnableSequence extends Runnable {\r\n    static lc_name() {\r\n        return \"RunnableSequence\";\r\n    }\r\n    constructor(fields) {\r\n        super(fields);\r\n        Object.defineProperty(this, \"first\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"middle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        Object.defineProperty(this, \"last\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"lc_serializable\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"lc_namespace\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\"langchain\", \"schema\", \"runnable\"]\r\n        });\r\n        this.first = fields.first;\r\n        this.middle = fields.middle ?? this.middle;\r\n        this.last = fields.last;\r\n    }\r\n    get steps() {\r\n        return [this.first, ...this.middle, this.last];\r\n    }\r\n    async invoke(input, options) {\r\n        const callbackManager_ = await getCallbackMangerForConfig(options);\r\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), _coerceToDict(input, \"input\"));\r\n        let nextStepInput = input;\r\n        let finalOutput;\r\n        try {\r\n            const initialSteps = [this.first, ...this.middle];\r\n            for (let i = 0; i < initialSteps.length; i += 1) {\r\n                const step = initialSteps[i];\r\n                nextStepInput = await step.invoke(nextStepInput, this._patchConfig(options, runManager?.getChild(`seq:step:${i + 1}`)));\r\n            }\r\n            // TypeScript can't detect that the last output of the sequence returns RunOutput, so call it out of the loop here\r\n            finalOutput = await this.last.invoke(nextStepInput, this._patchConfig(options, runManager?.getChild(`seq:step:${this.steps.length}`)));\r\n        }\r\n        catch (e) {\r\n            await runManager?.handleChainError(e);\r\n            throw e;\r\n        }\r\n        await runManager?.handleChainEnd(_coerceToDict(finalOutput, \"output\"));\r\n        return finalOutput;\r\n    }\r\n    async batch(inputs, options, batchOptions) {\r\n        const configList = this._getOptionsList(options ?? {}, inputs.length);\r\n        const callbackManagers = await Promise.all(configList.map(getCallbackMangerForConfig));\r\n        const runManagers = await Promise.all(callbackManagers.map((callbackManager, i) => callbackManager?.handleChainStart(this.toJSON(), _coerceToDict(inputs[i], \"input\"))));\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        let nextStepInputs = inputs;\r\n        let finalOutputs;\r\n        try {\r\n            const initialSteps = [this.first, ...this.middle];\r\n            for (let i = 0; i < initialSteps.length; i += 1) {\r\n                const step = initialSteps[i];\r\n                nextStepInputs = await step.batch(nextStepInputs, runManagers.map((runManager, j) => this._patchConfig(configList[j], runManager?.getChild(`seq:step:${i + 1}`))), batchOptions);\r\n            }\r\n            finalOutputs = await this.last.batch(nextStepInputs, runManagers.map((runManager) => this._patchConfig(configList[this.steps.length - 1], runManager?.getChild(`seq:step:${this.steps.length}`))), batchOptions);\r\n        }\r\n        catch (e) {\r\n            await Promise.all(runManagers.map((runManager) => runManager?.handleChainError(e)));\r\n            throw e;\r\n        }\r\n        await Promise.all(runManagers.map((runManager, i) => runManager?.handleChainEnd(_coerceToDict(finalOutputs[i], \"output\"))));\r\n        return finalOutputs;\r\n    }\r\n    async *_streamIterator(input, options) {\r\n        const callbackManager_ = await getCallbackMangerForConfig(options);\r\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), _coerceToDict(input, \"input\"));\r\n        let nextStepInput = input;\r\n        const steps = [this.first, ...this.middle, this.last];\r\n        // Find the index of the last runnable in the sequence that doesn't have an overridden .transform() method\r\n        // and start streaming from there\r\n        const streamingStartStepIndex = Math.min(steps.length - 1, steps.length -\r\n            [...steps].reverse().findIndex((step) => {\r\n                const isDefaultImplementation = step.transform === Runnable.prototype.transform;\r\n                const boundRunnableIsDefaultImplementation = RunnableBinding.isRunnableBinding(step) &&\r\n                    step.bound?.transform === Runnable.prototype.transform;\r\n                return (isDefaultImplementation || boundRunnableIsDefaultImplementation);\r\n            }) -\r\n            1);\r\n        try {\r\n            const invokeSteps = steps.slice(0, streamingStartStepIndex);\r\n            for (let i = 0; i < invokeSteps.length; i += 1) {\r\n                const step = invokeSteps[i];\r\n                nextStepInput = await step.invoke(nextStepInput, this._patchConfig(options, runManager?.getChild(`seq:step:${i + 1}`)));\r\n            }\r\n        }\r\n        catch (e) {\r\n            await runManager?.handleChainError(e);\r\n            throw e;\r\n        }\r\n        let concatSupported = true;\r\n        let finalOutput;\r\n        try {\r\n            let finalGenerator = await steps[streamingStartStepIndex]._streamIterator(nextStepInput, this._patchConfig(options, runManager?.getChild(`seq:step:${streamingStartStepIndex + 1}`)));\r\n            const finalSteps = steps.slice(streamingStartStepIndex + 1);\r\n            for (let i = 0; i < finalSteps.length; i += 1) {\r\n                const step = finalSteps[i];\r\n                finalGenerator = await step.transform(finalGenerator, this._patchConfig(options, runManager?.getChild(`seq:step:${streamingStartStepIndex + i + 2}`)));\r\n            }\r\n            for await (const chunk of finalGenerator) {\r\n                yield chunk;\r\n                if (concatSupported) {\r\n                    if (finalOutput === undefined) {\r\n                        finalOutput = chunk;\r\n                    }\r\n                    else {\r\n                        try {\r\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                            finalOutput = finalOutput.concat(chunk);\r\n                        }\r\n                        catch (e) {\r\n                            finalOutput = undefined;\r\n                            concatSupported = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            await runManager?.handleChainError(e);\r\n            throw e;\r\n        }\r\n        await runManager?.handleChainEnd(_coerceToDict(finalOutput, \"output\"));\r\n    }\r\n    pipe(coerceable) {\r\n        if (RunnableSequence.isRunnableSequence(coerceable)) {\r\n            return new RunnableSequence({\r\n                first: this.first,\r\n                middle: this.middle.concat([\r\n                    this.last,\r\n                    coerceable.first,\r\n                    ...coerceable.middle,\r\n                ]),\r\n                last: coerceable.last,\r\n            });\r\n        }\r\n        else {\r\n            return new RunnableSequence({\r\n                first: this.first,\r\n                middle: [...this.middle, this.last],\r\n                last: _coerceToRunnable(coerceable),\r\n            });\r\n        }\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    static isRunnableSequence(thing) {\r\n        return Array.isArray(thing.middle) && Runnable.isRunnable(thing);\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    static from([first, ...runnables]) {\r\n        return new RunnableSequence({\r\n            first: _coerceToRunnable(first),\r\n            middle: runnables.slice(0, -1).map(_coerceToRunnable),\r\n            last: _coerceToRunnable(runnables[runnables.length - 1]),\r\n        });\r\n    }\r\n}\r\n/**\r\n * A runnable that runs a mapping of runnables in parallel,\r\n * and returns a mapping of their outputs.\r\n */\r\nexport class RunnableMap extends Runnable {\r\n    static lc_name() {\r\n        return \"RunnableMap\";\r\n    }\r\n    constructor(fields) {\r\n        super(fields);\r\n        Object.defineProperty(this, \"lc_namespace\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\"langchain\", \"schema\", \"runnable\"]\r\n        });\r\n        Object.defineProperty(this, \"lc_serializable\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"steps\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.steps = {};\r\n        for (const [key, value] of Object.entries(fields.steps)) {\r\n            this.steps[key] = _coerceToRunnable(value);\r\n        }\r\n    }\r\n    async invoke(input, options\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    ) {\r\n        const callbackManager_ = await getCallbackMangerForConfig(options);\r\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), {\r\n            input,\r\n        });\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        const output = {};\r\n        try {\r\n            await Promise.all(Object.entries(this.steps).map(async ([key, runnable]) => {\r\n                output[key] = await runnable.invoke(input, this._patchConfig(options, runManager?.getChild(key)));\r\n            }));\r\n        }\r\n        catch (e) {\r\n            await runManager?.handleChainError(e);\r\n            throw e;\r\n        }\r\n        await runManager?.handleChainEnd(output);\r\n        return output;\r\n    }\r\n}\r\n/**\r\n * A runnable that runs a callable.\r\n */\r\nexport class RunnableLambda extends Runnable {\r\n    static lc_name() {\r\n        return \"RunnableLambda\";\r\n    }\r\n    constructor(fields) {\r\n        super(fields);\r\n        Object.defineProperty(this, \"lc_namespace\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\"langchain\", \"schema\", \"runnable\"]\r\n        });\r\n        Object.defineProperty(this, \"func\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.func = fields.func;\r\n    }\r\n    async _invoke(input, config, runManager) {\r\n        let output = await this.func(input);\r\n        if (output && Runnable.isRunnable(output)) {\r\n            output = await output.invoke(input, this._patchConfig(config, runManager?.getChild()));\r\n        }\r\n        return output;\r\n    }\r\n    async invoke(input, options) {\r\n        return this._callWithConfig(this._invoke, input, options);\r\n    }\r\n}\r\n/**\r\n * A Runnable that can fallback to other Runnables if it fails.\r\n */\r\nexport class RunnableWithFallbacks extends Runnable {\r\n    static lc_name() {\r\n        return \"RunnableWithFallbacks\";\r\n    }\r\n    constructor(fields) {\r\n        super(fields);\r\n        Object.defineProperty(this, \"lc_namespace\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\"langchain\", \"schema\", \"runnable\"]\r\n        });\r\n        Object.defineProperty(this, \"lc_serializable\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"runnable\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fallbacks\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.runnable = fields.runnable;\r\n        this.fallbacks = fields.fallbacks;\r\n    }\r\n    *runnables() {\r\n        yield this.runnable;\r\n        for (const fallback of this.fallbacks) {\r\n            yield fallback;\r\n        }\r\n    }\r\n    async invoke(input, options) {\r\n        const callbackManager_ = await CallbackManager.configure(options?.callbacks, undefined, options?.tags, undefined, options?.metadata);\r\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), _coerceToDict(input, \"input\"));\r\n        let firstError;\r\n        for (const runnable of this.runnables()) {\r\n            try {\r\n                const output = await runnable.invoke(input, this._patchConfig(options, runManager?.getChild()));\r\n                await runManager?.handleChainEnd(_coerceToDict(output, \"output\"));\r\n                return output;\r\n            }\r\n            catch (e) {\r\n                if (firstError === undefined) {\r\n                    firstError = e;\r\n                }\r\n            }\r\n        }\r\n        if (firstError === undefined) {\r\n            throw new Error(\"No error stored at end of fallback.\");\r\n        }\r\n        await runManager?.handleChainError(firstError);\r\n        throw firstError;\r\n    }\r\n    async batch(inputs, options, batchOptions) {\r\n        if (batchOptions?.returnExceptions) {\r\n            throw new Error(\"Not implemented.\");\r\n        }\r\n        const configList = this._getOptionsList(options ?? {}, inputs.length);\r\n        const callbackManagers = await Promise.all(configList.map((config) => CallbackManager.configure(config?.callbacks, undefined, config?.tags, undefined, config?.metadata)));\r\n        const runManagers = await Promise.all(callbackManagers.map((callbackManager, i) => callbackManager?.handleChainStart(this.toJSON(), _coerceToDict(inputs[i], \"input\"))));\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        let firstError;\r\n        for (const runnable of this.runnables()) {\r\n            try {\r\n                const outputs = await runnable.batch(inputs, runManagers.map((runManager, j) => this._patchConfig(configList[j], runManager?.getChild())), batchOptions);\r\n                await Promise.all(runManagers.map((runManager, i) => runManager?.handleChainEnd(_coerceToDict(outputs[i], \"output\"))));\r\n                return outputs;\r\n            }\r\n            catch (e) {\r\n                if (firstError === undefined) {\r\n                    firstError = e;\r\n                }\r\n            }\r\n        }\r\n        if (!firstError) {\r\n            throw new Error(\"No error stored at end of fallbacks.\");\r\n        }\r\n        await Promise.all(runManagers.map((runManager) => runManager?.handleChainError(firstError)));\r\n        throw firstError;\r\n    }\r\n}\r\n// TODO: Figure out why the compiler needs help eliminating Error as a RunOutput type\r\nexport function _coerceToRunnable(coerceable) {\r\n    if (typeof coerceable === \"function\") {\r\n        return new RunnableLambda({ func: coerceable });\r\n    }\r\n    else if (Runnable.isRunnable(coerceable)) {\r\n        return coerceable;\r\n    }\r\n    else if (!Array.isArray(coerceable) && typeof coerceable === \"object\") {\r\n        const runnables = {};\r\n        for (const [key, value] of Object.entries(coerceable)) {\r\n            runnables[key] = _coerceToRunnable(value);\r\n        }\r\n        return new RunnableMap({\r\n            steps: runnables,\r\n        });\r\n    }\r\n    else {\r\n        throw new Error(`Expected a Runnable, function or object.\\nInstead got an unsupported type.`);\r\n    }\r\n}\r\n", "// Unique ID creation requires a high quality random # generator. In the browser we therefore\r\n// require the crypto API and do not support built-in fallback to lower quality random number\r\n// generators (like Math.random()).\r\nlet getRandomValues;\r\nconst rnds8 = new Uint8Array(16);\r\nexport default function rng() {\r\n  // lazy load so that environments that need to polyfill have a chance to do so\r\n  if (!getRandomValues) {\r\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\r\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\r\n\r\n    if (!getRandomValues) {\r\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\r\n    }\r\n  }\r\n\r\n  return getRandomValues(rnds8);\r\n}", "export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;", "import REGEX from './regex.js';\r\n\r\nfunction validate(uuid) {\r\n  return typeof uuid === 'string' && REGEX.test(uuid);\r\n}\r\n\r\nexport default validate;", "import validate from './validate.js';\r\n/**\r\n * Convert array of 16 byte values to UUID string format of the form:\r\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\r\n */\r\n\r\nconst byteToHex = [];\r\n\r\nfor (let i = 0; i < 256; ++i) {\r\n  byteToHex.push((i + 0x100).toString(16).slice(1));\r\n}\r\n\r\nexport function unsafeStringify(arr, offset = 0) {\r\n  // Note: Be careful editing this code!  It's been tuned for performance\r\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\r\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\r\n}\r\n\r\nfunction stringify(arr, offset = 0) {\r\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\r\n  // of the following:\r\n  // - One or more input array values don't map to a hex octet (leading to\r\n  // \"undefined\" in the uuid)\r\n  // - Invalid input values for the RFC `version` or `variant` fields\r\n\r\n  if (!validate(uuid)) {\r\n    throw TypeError('Stringified UUID is invalid');\r\n  }\r\n\r\n  return uuid;\r\n}\r\n\r\nexport default stringify;", "import validate from './validate.js';\r\n\r\nfunction parse(uuid) {\r\n  if (!validate(uuid)) {\r\n    throw TypeError('Invalid UUID');\r\n  }\r\n\r\n  let v;\r\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\r\n\r\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\r\n  arr[1] = v >>> 16 & 0xff;\r\n  arr[2] = v >>> 8 & 0xff;\r\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\r\n\r\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\r\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\r\n\r\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\r\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\r\n\r\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\r\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\r\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\r\n\r\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\r\n  arr[11] = v / 0x100000000 & 0xff;\r\n  arr[12] = v >>> 24 & 0xff;\r\n  arr[13] = v >>> 16 & 0xff;\r\n  arr[14] = v >>> 8 & 0xff;\r\n  arr[15] = v & 0xff;\r\n  return arr;\r\n}\r\n\r\nexport default parse;", "import { unsafeStringify } from './stringify.js';\r\nimport parse from './parse.js';\r\n\r\nfunction stringToBytes(str) {\r\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\r\n\r\n  const bytes = [];\r\n\r\n  for (let i = 0; i < str.length; ++i) {\r\n    bytes.push(str.charCodeAt(i));\r\n  }\r\n\r\n  return bytes;\r\n}\r\n\r\nexport const DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\r\nexport const URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\r\nexport default function v35(name, version, hashfunc) {\r\n  function generateUUID(value, namespace, buf, offset) {\r\n    var _namespace;\r\n\r\n    if (typeof value === 'string') {\r\n      value = stringToBytes(value);\r\n    }\r\n\r\n    if (typeof namespace === 'string') {\r\n      namespace = parse(namespace);\r\n    }\r\n\r\n    if (((_namespace = namespace) === null || _namespace === void 0 ? void 0 : _namespace.length) !== 16) {\r\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\r\n    } // Compute hash of namespace and value, Per 4.3\r\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\r\n    // hashfunc([...namespace, ... value])`\r\n\r\n\r\n    let bytes = new Uint8Array(16 + value.length);\r\n    bytes.set(namespace);\r\n    bytes.set(value, namespace.length);\r\n    bytes = hashfunc(bytes);\r\n    bytes[6] = bytes[6] & 0x0f | version;\r\n    bytes[8] = bytes[8] & 0x3f | 0x80;\r\n\r\n    if (buf) {\r\n      offset = offset || 0;\r\n\r\n      for (let i = 0; i < 16; ++i) {\r\n        buf[offset + i] = bytes[i];\r\n      }\r\n\r\n      return buf;\r\n    }\r\n\r\n    return unsafeStringify(bytes);\r\n  } // Function#name is not settable on some platforms (#270)\r\n\r\n\r\n  try {\r\n    generateUUID.name = name; // eslint-disable-next-line no-empty\r\n  } catch (err) {} // For CommonJS default export support\r\n\r\n\r\n  generateUUID.DNS = DNS;\r\n  generateUUID.URL = URL;\r\n  return generateUUID;\r\n}", "/*\r\n * Browser-compatible JavaScript MD5\r\n *\r\n * Modification of JavaScript MD5\r\n * https://github.com/blueimp/JavaScript-MD5\r\n *\r\n * Copyright 2011, Sebastian Tschan\r\n * https://blueimp.net\r\n *\r\n * Licensed under the MIT license:\r\n * https://opensource.org/licenses/MIT\r\n *\r\n * Based on\r\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\r\n * Digest Algorithm, as defined in RFC 1321.\r\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\r\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\r\n * Distributed under the BSD License\r\n * See http://pajhome.org.uk/crypt/md5 for more info.\r\n */\r\nfunction md5(bytes) {\r\n  if (typeof bytes === 'string') {\r\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\r\n\r\n    bytes = new Uint8Array(msg.length);\r\n\r\n    for (let i = 0; i < msg.length; ++i) {\r\n      bytes[i] = msg.charCodeAt(i);\r\n    }\r\n  }\r\n\r\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\r\n}\r\n/*\r\n * Convert an array of little-endian words to an array of bytes\r\n */\r\n\r\n\r\nfunction md5ToHexEncodedArray(input) {\r\n  const output = [];\r\n  const length32 = input.length * 32;\r\n  const hexTab = '0123456789abcdef';\r\n\r\n  for (let i = 0; i < length32; i += 8) {\r\n    const x = input[i >> 5] >>> i % 32 & 0xff;\r\n    const hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\r\n    output.push(hex);\r\n  }\r\n\r\n  return output;\r\n}\r\n/**\r\n * Calculate output length with padding and bit length\r\n */\r\n\r\n\r\nfunction getOutputLength(inputLength8) {\r\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\r\n}\r\n/*\r\n * Calculate the MD5 of an array of little-endian words, and a bit length.\r\n */\r\n\r\n\r\nfunction wordsToMd5(x, len) {\r\n  /* append padding */\r\n  x[len >> 5] |= 0x80 << len % 32;\r\n  x[getOutputLength(len) - 1] = len;\r\n  let a = 1732584193;\r\n  let b = -271733879;\r\n  let c = -1732584194;\r\n  let d = 271733878;\r\n\r\n  for (let i = 0; i < x.length; i += 16) {\r\n    const olda = a;\r\n    const oldb = b;\r\n    const oldc = c;\r\n    const oldd = d;\r\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\r\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\r\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\r\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\r\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\r\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\r\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\r\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\r\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\r\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\r\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\r\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\r\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\r\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\r\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\r\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\r\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\r\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\r\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\r\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\r\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\r\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\r\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\r\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\r\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\r\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\r\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\r\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\r\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\r\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\r\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\r\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\r\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\r\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\r\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\r\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\r\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\r\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\r\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\r\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\r\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\r\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\r\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\r\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\r\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\r\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\r\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\r\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\r\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\r\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\r\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\r\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\r\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\r\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\r\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\r\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\r\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\r\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\r\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\r\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\r\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\r\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\r\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\r\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\r\n    a = safeAdd(a, olda);\r\n    b = safeAdd(b, oldb);\r\n    c = safeAdd(c, oldc);\r\n    d = safeAdd(d, oldd);\r\n  }\r\n\r\n  return [a, b, c, d];\r\n}\r\n/*\r\n * Convert an array bytes to an array of little-endian words\r\n * Characters >255 have their high-byte silently ignored.\r\n */\r\n\r\n\r\nfunction bytesToWords(input) {\r\n  if (input.length === 0) {\r\n    return [];\r\n  }\r\n\r\n  const length8 = input.length * 8;\r\n  const output = new Uint32Array(getOutputLength(length8));\r\n\r\n  for (let i = 0; i < length8; i += 8) {\r\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\r\n  }\r\n\r\n  return output;\r\n}\r\n/*\r\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\r\n * to work around bugs in some JS interpreters.\r\n */\r\n\r\n\r\nfunction safeAdd(x, y) {\r\n  const lsw = (x & 0xffff) + (y & 0xffff);\r\n  const msw = (x >> 16) + (y >> 16) + (lsw >> 16);\r\n  return msw << 16 | lsw & 0xffff;\r\n}\r\n/*\r\n * Bitwise rotate a 32-bit number to the left.\r\n */\r\n\r\n\r\nfunction bitRotateLeft(num, cnt) {\r\n  return num << cnt | num >>> 32 - cnt;\r\n}\r\n/*\r\n * These functions implement the four basic operations the algorithm uses.\r\n */\r\n\r\n\r\nfunction md5cmn(q, a, b, x, s, t) {\r\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\r\n}\r\n\r\nfunction md5ff(a, b, c, d, x, s, t) {\r\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\r\n}\r\n\r\nfunction md5gg(a, b, c, d, x, s, t) {\r\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\r\n}\r\n\r\nfunction md5hh(a, b, c, d, x, s, t) {\r\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\r\n}\r\n\r\nfunction md5ii(a, b, c, d, x, s, t) {\r\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\r\n}\r\n\r\nexport default md5;", "import v35 from './v35.js';\r\nimport md5 from './md5.js';\r\nconst v3 = v35('v3', 0x30, md5);\r\nexport default v3;", "const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\r\nexport default {\r\n  randomUUID\r\n};", "import native from './native.js';\r\nimport rng from './rng.js';\r\nimport { unsafeStringify } from './stringify.js';\r\n\r\nfunction v4(options, buf, offset) {\r\n  if (native.randomUUID && !buf && !options) {\r\n    return native.randomUUID();\r\n  }\r\n\r\n  options = options || {};\r\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\r\n\r\n  rnds[6] = rnds[6] & 0x0f | 0x40;\r\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\r\n\r\n  if (buf) {\r\n    offset = offset || 0;\r\n\r\n    for (let i = 0; i < 16; ++i) {\r\n      buf[offset + i] = rnds[i];\r\n    }\r\n\r\n    return buf;\r\n  }\r\n\r\n  return unsafeStringify(rnds);\r\n}\r\n\r\nexport default v4;", "// Adapted from Chris Veness' SHA1 code at\r\n// http://www.movable-type.co.uk/scripts/sha1.html\r\nfunction f(s, x, y, z) {\r\n  switch (s) {\r\n    case 0:\r\n      return x & y ^ ~x & z;\r\n\r\n    case 1:\r\n      return x ^ y ^ z;\r\n\r\n    case 2:\r\n      return x & y ^ x & z ^ y & z;\r\n\r\n    case 3:\r\n      return x ^ y ^ z;\r\n  }\r\n}\r\n\r\nfunction ROTL(x, n) {\r\n  return x << n | x >>> 32 - n;\r\n}\r\n\r\nfunction sha1(bytes) {\r\n  const K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\r\n  const H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\r\n\r\n  if (typeof bytes === 'string') {\r\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\r\n\r\n    bytes = [];\r\n\r\n    for (let i = 0; i < msg.length; ++i) {\r\n      bytes.push(msg.charCodeAt(i));\r\n    }\r\n  } else if (!Array.isArray(bytes)) {\r\n    // Convert Array-like to Array\r\n    bytes = Array.prototype.slice.call(bytes);\r\n  }\r\n\r\n  bytes.push(0x80);\r\n  const l = bytes.length / 4 + 2;\r\n  const N = Math.ceil(l / 16);\r\n  const M = new Array(N);\r\n\r\n  for (let i = 0; i < N; ++i) {\r\n    const arr = new Uint32Array(16);\r\n\r\n    for (let j = 0; j < 16; ++j) {\r\n      arr[j] = bytes[i * 64 + j * 4] << 24 | bytes[i * 64 + j * 4 + 1] << 16 | bytes[i * 64 + j * 4 + 2] << 8 | bytes[i * 64 + j * 4 + 3];\r\n    }\r\n\r\n    M[i] = arr;\r\n  }\r\n\r\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\r\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\r\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\r\n\r\n  for (let i = 0; i < N; ++i) {\r\n    const W = new Uint32Array(80);\r\n\r\n    for (let t = 0; t < 16; ++t) {\r\n      W[t] = M[i][t];\r\n    }\r\n\r\n    for (let t = 16; t < 80; ++t) {\r\n      W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\r\n    }\r\n\r\n    let a = H[0];\r\n    let b = H[1];\r\n    let c = H[2];\r\n    let d = H[3];\r\n    let e = H[4];\r\n\r\n    for (let t = 0; t < 80; ++t) {\r\n      const s = Math.floor(t / 20);\r\n      const T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;\r\n      e = d;\r\n      d = c;\r\n      c = ROTL(b, 30) >>> 0;\r\n      b = a;\r\n      a = T;\r\n    }\r\n\r\n    H[0] = H[0] + a >>> 0;\r\n    H[1] = H[1] + b >>> 0;\r\n    H[2] = H[2] + c >>> 0;\r\n    H[3] = H[3] + d >>> 0;\r\n    H[4] = H[4] + e >>> 0;\r\n  }\r\n\r\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\r\n}\r\n\r\nexport default sha1;", "import v35 from './v35.js';\r\nimport sha1 from './sha1.js';\r\nconst v5 = v35('v5', 0x50, sha1);\r\nexport default v5;", "import * as uuid from \"uuid\";\r\nimport { Serializable, get_lc_unique_name, } from \"../load/serializable.js\";\r\n/**\r\n * Abstract class that provides a set of optional methods that can be\r\n * overridden in derived classes to handle various events during the\r\n * execution of a LangChain application.\r\n */\r\nclass BaseCallbackHandlerMethodsClass {\r\n}\r\n/**\r\n * Abstract base class for creating callback handlers in the LangChain\r\n * framework. It provides a set of optional methods that can be overridden\r\n * in derived classes to handle various events during the execution of a\r\n * LangChain application.\r\n */\r\nexport class BaseCallbackHandler extends BaseCallbackHandlerMethodsClass {\r\n    get lc_namespace() {\r\n        return [\"langchain\", \"callbacks\", this.name];\r\n    }\r\n    get lc_secrets() {\r\n        return undefined;\r\n    }\r\n    get lc_attributes() {\r\n        return undefined;\r\n    }\r\n    get lc_aliases() {\r\n        return undefined;\r\n    }\r\n    /**\r\n     * The name of the serializable. Override to provide an alias or\r\n     * to preserve the serialized module name in minified environments.\r\n     *\r\n     * Implemented as a static method to support loading logic.\r\n     */\r\n    static lc_name() {\r\n        return this.name;\r\n    }\r\n    /**\r\n     * The final serialized identifier for the module.\r\n     */\r\n    get lc_id() {\r\n        return [\r\n            ...this.lc_namespace,\r\n            get_lc_unique_name(this.constructor),\r\n        ];\r\n    }\r\n    constructor(input) {\r\n        super();\r\n        Object.defineProperty(this, \"lc_serializable\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"lc_kwargs\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"ignoreLLM\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"ignoreChain\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"ignoreAgent\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"ignoreRetriever\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"awaitHandlers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: typeof process !== \"undefined\"\r\n                ? // eslint-disable-next-line no-process-env\r\n                    process.env?.LANGCHAIN_CALLBACKS_BACKGROUND !== \"true\"\r\n                : true\r\n        });\r\n        this.lc_kwargs = input || {};\r\n        if (input) {\r\n            this.ignoreLLM = input.ignoreLLM ?? this.ignoreLLM;\r\n            this.ignoreChain = input.ignoreChain ?? this.ignoreChain;\r\n            this.ignoreAgent = input.ignoreAgent ?? this.ignoreAgent;\r\n            this.ignoreRetriever = input.ignoreRetriever ?? this.ignoreRetriever;\r\n        }\r\n    }\r\n    copy() {\r\n        return new this.constructor(this);\r\n    }\r\n    toJSON() {\r\n        return Serializable.prototype.toJSON.call(this);\r\n    }\r\n    toJSONNotImplemented() {\r\n        return Serializable.prototype.toJSONNotImplemented.call(this);\r\n    }\r\n    static fromMethods(methods) {\r\n        class Handler extends BaseCallbackHandler {\r\n            constructor() {\r\n                super();\r\n                Object.defineProperty(this, \"name\", {\r\n                    enumerable: true,\r\n                    configurable: true,\r\n                    writable: true,\r\n                    value: uuid.v4()\r\n                });\r\n                Object.assign(this, methods);\r\n            }\r\n        }\r\n        return new Handler();\r\n    }\r\n}\r\n", "import styles from \"ansi-styles\";\r\nimport { BaseTracer } from \"./tracer.js\";\r\nfunction wrap(style, text) {\r\n    return `${style.open}${text}${style.close}`;\r\n}\r\nfunction tryJsonStringify(obj, fallback) {\r\n    try {\r\n        return JSON.stringify(obj, null, 2);\r\n    }\r\n    catch (err) {\r\n        return fallback;\r\n    }\r\n}\r\nfunction elapsed(run) {\r\n    if (!run.end_time)\r\n        return \"\";\r\n    const elapsed = run.end_time - run.start_time;\r\n    if (elapsed < 1000) {\r\n        return `${elapsed}ms`;\r\n    }\r\n    return `${(elapsed / 1000).toFixed(2)}s`;\r\n}\r\nconst { color } = styles;\r\n/**\r\n * A tracer that logs all events to the console. It extends from the\r\n * `BaseTracer` class and overrides its methods to provide custom logging\r\n * functionality.\r\n */\r\nexport class ConsoleCallbackHandler extends BaseTracer {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"name\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"console_callback_handler\"\r\n        });\r\n    }\r\n    /**\r\n     * Method used to persist the run. In this case, it simply returns a\r\n     * resolved promise as there's no persistence logic.\r\n     * @param _run The run to persist.\r\n     * @returns A resolved promise.\r\n     */\r\n    persistRun(_run) {\r\n        return Promise.resolve();\r\n    }\r\n    // utility methods\r\n    /**\r\n     * Method used to get all the parent runs of a given run.\r\n     * @param run The run whose parents are to be retrieved.\r\n     * @returns An array of parent runs.\r\n     */\r\n    getParents(run) {\r\n        const parents = [];\r\n        let currentRun = run;\r\n        while (currentRun.parent_run_id) {\r\n            const parent = this.runMap.get(currentRun.parent_run_id);\r\n            if (parent) {\r\n                parents.push(parent);\r\n                currentRun = parent;\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        return parents;\r\n    }\r\n    /**\r\n     * Method used to get a string representation of the run's lineage, which\r\n     * is used in logging.\r\n     * @param run The run whose lineage is to be retrieved.\r\n     * @returns A string representation of the run's lineage.\r\n     */\r\n    getBreadcrumbs(run) {\r\n        const parents = this.getParents(run).reverse();\r\n        const string = [...parents, run]\r\n            .map((parent, i, arr) => {\r\n            const name = `${parent.execution_order}:${parent.run_type}:${parent.name}`;\r\n            return i === arr.length - 1 ? wrap(styles.bold, name) : name;\r\n        })\r\n            .join(\" > \");\r\n        return wrap(color.grey, string);\r\n    }\r\n    // logging methods\r\n    /**\r\n     * Method used to log the start of a chain run.\r\n     * @param run The chain run that has started.\r\n     * @returns void\r\n     */\r\n    onChainStart(run) {\r\n        const crumbs = this.getBreadcrumbs(run);\r\n        console.log(`${wrap(color.green, \"[chain/start]\")} [${crumbs}] Entering Chain run with input: ${tryJsonStringify(run.inputs, \"[inputs]\")}`);\r\n    }\r\n    /**\r\n     * Method used to log the end of a chain run.\r\n     * @param run The chain run that has ended.\r\n     * @returns void\r\n     */\r\n    onChainEnd(run) {\r\n        const crumbs = this.getBreadcrumbs(run);\r\n        console.log(`${wrap(color.cyan, \"[chain/end]\")} [${crumbs}] [${elapsed(run)}] Exiting Chain run with output: ${tryJsonStringify(run.outputs, \"[outputs]\")}`);\r\n    }\r\n    /**\r\n     * Method used to log any errors of a chain run.\r\n     * @param run The chain run that has errored.\r\n     * @returns void\r\n     */\r\n    onChainError(run) {\r\n        const crumbs = this.getBreadcrumbs(run);\r\n        console.log(`${wrap(color.red, \"[chain/error]\")} [${crumbs}] [${elapsed(run)}] Chain run errored with error: ${tryJsonStringify(run.error, \"[error]\")}`);\r\n    }\r\n    /**\r\n     * Method used to log the start of an LLM run.\r\n     * @param run The LLM run that has started.\r\n     * @returns void\r\n     */\r\n    onLLMStart(run) {\r\n        const crumbs = this.getBreadcrumbs(run);\r\n        const inputs = \"prompts\" in run.inputs\r\n            ? { prompts: run.inputs.prompts.map((p) => p.trim()) }\r\n            : run.inputs;\r\n        console.log(`${wrap(color.green, \"[llm/start]\")} [${crumbs}] Entering LLM run with input: ${tryJsonStringify(inputs, \"[inputs]\")}`);\r\n    }\r\n    /**\r\n     * Method used to log the end of an LLM run.\r\n     * @param run The LLM run that has ended.\r\n     * @returns void\r\n     */\r\n    onLLMEnd(run) {\r\n        const crumbs = this.getBreadcrumbs(run);\r\n        console.log(`${wrap(color.cyan, \"[llm/end]\")} [${crumbs}] [${elapsed(run)}] Exiting LLM run with output: ${tryJsonStringify(run.outputs, \"[response]\")}`);\r\n    }\r\n    /**\r\n     * Method used to log any errors of an LLM run.\r\n     * @param run The LLM run that has errored.\r\n     * @returns void\r\n     */\r\n    onLLMError(run) {\r\n        const crumbs = this.getBreadcrumbs(run);\r\n        console.log(`${wrap(color.red, \"[llm/error]\")} [${crumbs}] [${elapsed(run)}] LLM run errored with error: ${tryJsonStringify(run.error, \"[error]\")}`);\r\n    }\r\n    /**\r\n     * Method used to log the start of a tool run.\r\n     * @param run The tool run that has started.\r\n     * @returns void\r\n     */\r\n    onToolStart(run) {\r\n        const crumbs = this.getBreadcrumbs(run);\r\n        console.log(`${wrap(color.green, \"[tool/start]\")} [${crumbs}] Entering Tool run with input: \"${run.inputs.input?.trim()}\"`);\r\n    }\r\n    /**\r\n     * Method used to log the end of a tool run.\r\n     * @param run The tool run that has ended.\r\n     * @returns void\r\n     */\r\n    onToolEnd(run) {\r\n        const crumbs = this.getBreadcrumbs(run);\r\n        console.log(`${wrap(color.cyan, \"[tool/end]\")} [${crumbs}] [${elapsed(run)}] Exiting Tool run with output: \"${run.outputs?.output?.trim()}\"`);\r\n    }\r\n    /**\r\n     * Method used to log any errors of a tool run.\r\n     * @param run The tool run that has errored.\r\n     * @returns void\r\n     */\r\n    onToolError(run) {\r\n        const crumbs = this.getBreadcrumbs(run);\r\n        console.log(`${wrap(color.red, \"[tool/error]\")} [${crumbs}] [${elapsed(run)}] Tool run errored with error: ${tryJsonStringify(run.error, \"[error]\")}`);\r\n    }\r\n    /**\r\n     * Method used to log the start of a retriever run.\r\n     * @param run The retriever run that has started.\r\n     * @returns void\r\n     */\r\n    onRetrieverStart(run) {\r\n        const crumbs = this.getBreadcrumbs(run);\r\n        console.log(`${wrap(color.green, \"[retriever/start]\")} [${crumbs}] Entering Retriever run with input: ${tryJsonStringify(run.inputs, \"[inputs]\")}`);\r\n    }\r\n    /**\r\n     * Method used to log the end of a retriever run.\r\n     * @param run The retriever run that has ended.\r\n     * @returns void\r\n     */\r\n    onRetrieverEnd(run) {\r\n        const crumbs = this.getBreadcrumbs(run);\r\n        console.log(`${wrap(color.cyan, \"[retriever/end]\")} [${crumbs}] [${elapsed(run)}] Exiting Retriever run with output: ${tryJsonStringify(run.outputs, \"[outputs]\")}`);\r\n    }\r\n    /**\r\n     * Method used to log any errors of a retriever run.\r\n     * @param run The retriever run that has errored.\r\n     * @returns void\r\n     */\r\n    onRetrieverError(run) {\r\n        const crumbs = this.getBreadcrumbs(run);\r\n        console.log(`${wrap(color.red, \"[retriever/error]\")} [${crumbs}] [${elapsed(run)}] Retriever run errored with error: ${tryJsonStringify(run.error, \"[error]\")}`);\r\n    }\r\n    /**\r\n     * Method used to log the action selected by the agent.\r\n     * @param run The run in which the agent action occurred.\r\n     * @returns void\r\n     */\r\n    onAgentAction(run) {\r\n        const agentRun = run;\r\n        const crumbs = this.getBreadcrumbs(run);\r\n        console.log(`${wrap(color.blue, \"[agent/action]\")} [${crumbs}] Agent selected action: ${tryJsonStringify(agentRun.actions[agentRun.actions.length - 1], \"[action]\")}`);\r\n    }\r\n}\r\n", "import { BaseCallbackHandler, } from \"../base.js\";\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nfunction _coerceToDict(value, defaultKey) {\r\n    return value && !Array.isArray(value) && typeof value === \"object\"\r\n        ? value\r\n        : { [defaultKey]: value };\r\n}\r\nexport class BaseTracer extends BaseCallbackHandler {\r\n    constructor(_fields) {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"runMap\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Map()\r\n        });\r\n    }\r\n    copy() {\r\n        return this;\r\n    }\r\n    _addChildRun(parentRun, childRun) {\r\n        parentRun.child_runs.push(childRun);\r\n    }\r\n    async _startTrace(run) {\r\n        if (run.parent_run_id !== undefined) {\r\n            const parentRun = this.runMap.get(run.parent_run_id);\r\n            if (parentRun) {\r\n                this._addChildRun(parentRun, run);\r\n                parentRun.child_execution_order = Math.max(parentRun.child_execution_order, run.child_execution_order);\r\n            }\r\n        }\r\n        this.runMap.set(run.id, run);\r\n        await this.onRunCreate?.(run);\r\n    }\r\n    async _endTrace(run) {\r\n        const parentRun = run.parent_run_id !== undefined && this.runMap.get(run.parent_run_id);\r\n        if (parentRun) {\r\n            parentRun.child_execution_order = Math.max(parentRun.child_execution_order, run.child_execution_order);\r\n        }\r\n        else {\r\n            await this.persistRun(run);\r\n        }\r\n        this.runMap.delete(run.id);\r\n        await this.onRunUpdate?.(run);\r\n    }\r\n    _getExecutionOrder(parentRunId) {\r\n        const parentRun = parentRunId !== undefined && this.runMap.get(parentRunId);\r\n        // If a run has no parent then execution order is 1\r\n        if (!parentRun) {\r\n            return 1;\r\n        }\r\n        return parentRun.child_execution_order + 1;\r\n    }\r\n    async handleLLMStart(llm, prompts, runId, parentRunId, extraParams, tags, metadata, name) {\r\n        const execution_order = this._getExecutionOrder(parentRunId);\r\n        const start_time = Date.now();\r\n        const finalExtraParams = metadata\r\n            ? { ...extraParams, metadata }\r\n            : extraParams;\r\n        const run = {\r\n            id: runId,\r\n            name: name ?? llm.id[llm.id.length - 1],\r\n            parent_run_id: parentRunId,\r\n            start_time,\r\n            serialized: llm,\r\n            events: [\r\n                {\r\n                    name: \"start\",\r\n                    time: new Date(start_time).toISOString(),\r\n                },\r\n            ],\r\n            inputs: { prompts },\r\n            execution_order,\r\n            child_runs: [],\r\n            child_execution_order: execution_order,\r\n            run_type: \"llm\",\r\n            extra: finalExtraParams ?? {},\r\n            tags: tags || [],\r\n        };\r\n        await this._startTrace(run);\r\n        await this.onLLMStart?.(run);\r\n        return run;\r\n    }\r\n    async handleChatModelStart(llm, messages, runId, parentRunId, extraParams, tags, metadata, name) {\r\n        const execution_order = this._getExecutionOrder(parentRunId);\r\n        const start_time = Date.now();\r\n        const finalExtraParams = metadata\r\n            ? { ...extraParams, metadata }\r\n            : extraParams;\r\n        const run = {\r\n            id: runId,\r\n            name: name ?? llm.id[llm.id.length - 1],\r\n            parent_run_id: parentRunId,\r\n            start_time,\r\n            serialized: llm,\r\n            events: [\r\n                {\r\n                    name: \"start\",\r\n                    time: new Date(start_time).toISOString(),\r\n                },\r\n            ],\r\n            inputs: { messages },\r\n            execution_order,\r\n            child_runs: [],\r\n            child_execution_order: execution_order,\r\n            run_type: \"llm\",\r\n            extra: finalExtraParams ?? {},\r\n            tags: tags || [],\r\n        };\r\n        await this._startTrace(run);\r\n        await this.onLLMStart?.(run);\r\n        return run;\r\n    }\r\n    async handleLLMEnd(output, runId) {\r\n        const run = this.runMap.get(runId);\r\n        if (!run || run?.run_type !== \"llm\") {\r\n            throw new Error(\"No LLM run to end.\");\r\n        }\r\n        run.end_time = Date.now();\r\n        run.outputs = output;\r\n        run.events.push({\r\n            name: \"end\",\r\n            time: new Date(run.end_time).toISOString(),\r\n        });\r\n        await this.onLLMEnd?.(run);\r\n        await this._endTrace(run);\r\n        return run;\r\n    }\r\n    async handleLLMError(error, runId) {\r\n        const run = this.runMap.get(runId);\r\n        if (!run || run?.run_type !== \"llm\") {\r\n            throw new Error(\"No LLM run to end.\");\r\n        }\r\n        run.end_time = Date.now();\r\n        run.error = error.message;\r\n        run.events.push({\r\n            name: \"error\",\r\n            time: new Date(run.end_time).toISOString(),\r\n        });\r\n        await this.onLLMError?.(run);\r\n        await this._endTrace(run);\r\n        return run;\r\n    }\r\n    async handleChainStart(chain, inputs, runId, parentRunId, tags, metadata, runType, name) {\r\n        const execution_order = this._getExecutionOrder(parentRunId);\r\n        const start_time = Date.now();\r\n        const run = {\r\n            id: runId,\r\n            name: name ?? chain.id[chain.id.length - 1],\r\n            parent_run_id: parentRunId,\r\n            start_time,\r\n            serialized: chain,\r\n            events: [\r\n                {\r\n                    name: \"start\",\r\n                    time: new Date(start_time).toISOString(),\r\n                },\r\n            ],\r\n            inputs,\r\n            execution_order,\r\n            child_execution_order: execution_order,\r\n            run_type: runType ?? \"chain\",\r\n            child_runs: [],\r\n            extra: metadata ? { metadata } : {},\r\n            tags: tags || [],\r\n        };\r\n        await this._startTrace(run);\r\n        await this.onChainStart?.(run);\r\n        return run;\r\n    }\r\n    async handleChainEnd(outputs, runId, _parentRunId, _tags, kwargs) {\r\n        const run = this.runMap.get(runId);\r\n        if (!run) {\r\n            throw new Error(\"No chain run to end.\");\r\n        }\r\n        run.end_time = Date.now();\r\n        run.outputs = _coerceToDict(outputs, \"output\");\r\n        run.events.push({\r\n            name: \"end\",\r\n            time: new Date(run.end_time).toISOString(),\r\n        });\r\n        if (kwargs?.inputs !== undefined) {\r\n            run.inputs = _coerceToDict(kwargs.inputs, \"input\");\r\n        }\r\n        await this.onChainEnd?.(run);\r\n        await this._endTrace(run);\r\n        return run;\r\n    }\r\n    async handleChainError(error, runId, _parentRunId, _tags, kwargs) {\r\n        const run = this.runMap.get(runId);\r\n        if (!run) {\r\n            throw new Error(\"No chain run to end.\");\r\n        }\r\n        run.end_time = Date.now();\r\n        run.error = error.message;\r\n        run.events.push({\r\n            name: \"error\",\r\n            time: new Date(run.end_time).toISOString(),\r\n        });\r\n        if (kwargs?.inputs !== undefined) {\r\n            run.inputs = _coerceToDict(kwargs.inputs, \"input\");\r\n        }\r\n        await this.onChainError?.(run);\r\n        await this._endTrace(run);\r\n        return run;\r\n    }\r\n    async handleToolStart(tool, input, runId, parentRunId, tags, metadata, name) {\r\n        const execution_order = this._getExecutionOrder(parentRunId);\r\n        const start_time = Date.now();\r\n        const run = {\r\n            id: runId,\r\n            name: name ?? tool.id[tool.id.length - 1],\r\n            parent_run_id: parentRunId,\r\n            start_time,\r\n            serialized: tool,\r\n            events: [\r\n                {\r\n                    name: \"start\",\r\n                    time: new Date(start_time).toISOString(),\r\n                },\r\n            ],\r\n            inputs: { input },\r\n            execution_order,\r\n            child_execution_order: execution_order,\r\n            run_type: \"tool\",\r\n            child_runs: [],\r\n            extra: metadata ? { metadata } : {},\r\n            tags: tags || [],\r\n        };\r\n        await this._startTrace(run);\r\n        await this.onToolStart?.(run);\r\n        return run;\r\n    }\r\n    async handleToolEnd(output, runId) {\r\n        const run = this.runMap.get(runId);\r\n        if (!run || run?.run_type !== \"tool\") {\r\n            throw new Error(\"No tool run to end\");\r\n        }\r\n        run.end_time = Date.now();\r\n        run.outputs = { output };\r\n        run.events.push({\r\n            name: \"end\",\r\n            time: new Date(run.end_time).toISOString(),\r\n        });\r\n        await this.onToolEnd?.(run);\r\n        await this._endTrace(run);\r\n        return run;\r\n    }\r\n    async handleToolError(error, runId) {\r\n        const run = this.runMap.get(runId);\r\n        if (!run || run?.run_type !== \"tool\") {\r\n            throw new Error(\"No tool run to end\");\r\n        }\r\n        run.end_time = Date.now();\r\n        run.error = error.message;\r\n        run.events.push({\r\n            name: \"error\",\r\n            time: new Date(run.end_time).toISOString(),\r\n        });\r\n        await this.onToolError?.(run);\r\n        await this._endTrace(run);\r\n        return run;\r\n    }\r\n    async handleAgentAction(action, runId) {\r\n        const run = this.runMap.get(runId);\r\n        if (!run || run?.run_type !== \"chain\") {\r\n            return;\r\n        }\r\n        const agentRun = run;\r\n        agentRun.actions = agentRun.actions || [];\r\n        agentRun.actions.push(action);\r\n        agentRun.events.push({\r\n            name: \"agent_action\",\r\n            time: new Date().toISOString(),\r\n            kwargs: { action },\r\n        });\r\n        await this.onAgentAction?.(run);\r\n    }\r\n    async handleAgentEnd(action, runId) {\r\n        const run = this.runMap.get(runId);\r\n        if (!run || run?.run_type !== \"chain\") {\r\n            return;\r\n        }\r\n        run.events.push({\r\n            name: \"agent_end\",\r\n            time: new Date().toISOString(),\r\n            kwargs: { action },\r\n        });\r\n        await this.onAgentEnd?.(run);\r\n    }\r\n    async handleRetrieverStart(retriever, query, runId, parentRunId, tags, metadata, name) {\r\n        const execution_order = this._getExecutionOrder(parentRunId);\r\n        const start_time = Date.now();\r\n        const run = {\r\n            id: runId,\r\n            name: name ?? retriever.id[retriever.id.length - 1],\r\n            parent_run_id: parentRunId,\r\n            start_time,\r\n            serialized: retriever,\r\n            events: [\r\n                {\r\n                    name: \"start\",\r\n                    time: new Date(start_time).toISOString(),\r\n                },\r\n            ],\r\n            inputs: { query },\r\n            execution_order,\r\n            child_execution_order: execution_order,\r\n            run_type: \"retriever\",\r\n            child_runs: [],\r\n            extra: metadata ? { metadata } : {},\r\n            tags: tags || [],\r\n        };\r\n        await this._startTrace(run);\r\n        await this.onRetrieverStart?.(run);\r\n        return run;\r\n    }\r\n    async handleRetrieverEnd(documents, runId) {\r\n        const run = this.runMap.get(runId);\r\n        if (!run || run?.run_type !== \"retriever\") {\r\n            throw new Error(\"No retriever run to end\");\r\n        }\r\n        run.end_time = Date.now();\r\n        run.outputs = { documents };\r\n        run.events.push({\r\n            name: \"end\",\r\n            time: new Date(run.end_time).toISOString(),\r\n        });\r\n        await this.onRetrieverEnd?.(run);\r\n        await this._endTrace(run);\r\n        return run;\r\n    }\r\n    async handleRetrieverError(error, runId) {\r\n        const run = this.runMap.get(runId);\r\n        if (!run || run?.run_type !== \"retriever\") {\r\n            throw new Error(\"No retriever run to end\");\r\n        }\r\n        run.end_time = Date.now();\r\n        run.error = error.message;\r\n        run.events.push({\r\n            name: \"error\",\r\n            time: new Date(run.end_time).toISOString(),\r\n        });\r\n        await this.onRetrieverError?.(run);\r\n        await this._endTrace(run);\r\n        return run;\r\n    }\r\n    async handleText(text, runId) {\r\n        const run = this.runMap.get(runId);\r\n        if (!run || run?.run_type !== \"chain\") {\r\n            return;\r\n        }\r\n        run.events.push({\r\n            name: \"text\",\r\n            time: new Date().toISOString(),\r\n            kwargs: { text },\r\n        });\r\n        await this.onText?.(run);\r\n    }\r\n    async handleLLMNewToken(token, idx, runId, _parentRunId, _tags, fields) {\r\n        const run = this.runMap.get(runId);\r\n        if (!run || run?.run_type !== \"llm\") {\r\n            throw new Error(`Invalid \"runId\" provided to \"handleLLMNewToken\" callback.`);\r\n        }\r\n        run.events.push({\r\n            name: \"new_token\",\r\n            time: new Date().toISOString(),\r\n            kwargs: { token, idx, chunk: fields?.chunk },\r\n        });\r\n        await this.onLLMNewToken?.(run, token);\r\n        return run;\r\n    }\r\n}\r\n", "import pRetry from \"p-retry\";\r\nimport PQueueMod from \"p-queue\";\r\nconst STATUS_NO_RETRY = [\r\n    400,\r\n    401,\r\n    403,\r\n    404,\r\n    405,\r\n    406,\r\n    407,\r\n    408,\r\n    409, // Conflict\r\n];\r\n/**\r\n * A class that can be used to make async calls with concurrency and retry logic.\r\n *\r\n * This is useful for making calls to any kind of \"expensive\" external resource,\r\n * be it because it's rate-limited, subject to network issues, etc.\r\n *\r\n * Concurrent calls are limited by the `maxConcurrency` parameter, which defaults\r\n * to `Infinity`. This means that by default, all calls will be made in parallel.\r\n *\r\n * Retries are limited by the `maxRetries` parameter, which defaults to 6. This\r\n * means that by default, each call will be retried up to 6 times, with an\r\n * exponential backoff between each attempt.\r\n */\r\nexport class AsyncCaller {\r\n    constructor(params) {\r\n        Object.defineProperty(this, \"maxConcurrency\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"maxRetries\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"queue\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.maxConcurrency = params.maxConcurrency ?? Infinity;\r\n        this.maxRetries = params.maxRetries ?? 6;\r\n        const PQueue = \"default\" in PQueueMod ? PQueueMod.default : PQueueMod;\r\n        this.queue = new PQueue({ concurrency: this.maxConcurrency });\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    call(callable, ...args) {\r\n        return this.queue.add(() => pRetry(() => callable(...args).catch((error) => {\r\n            // eslint-disable-next-line no-instanceof/no-instanceof\r\n            if (error instanceof Error) {\r\n                throw error;\r\n            }\r\n            else {\r\n                throw new Error(error);\r\n            }\r\n        }), {\r\n            onFailedAttempt(error) {\r\n                if (error.message.startsWith(\"Cancel\") ||\r\n                    error.message.startsWith(\"TimeoutError\") ||\r\n                    error.message.startsWith(\"AbortError\")) {\r\n                    throw error;\r\n                }\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                if (error?.code === \"ECONNABORTED\") {\r\n                    throw error;\r\n                }\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                const status = error?.response?.status;\r\n                if (status && STATUS_NO_RETRY.includes(+status)) {\r\n                    throw error;\r\n                }\r\n            },\r\n            retries: this.maxRetries,\r\n            randomize: true,\r\n            // If needed we can change some of the defaults here,\r\n            // but they're quite sensible.\r\n        }), { throwOnTimeout: true });\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    callWithOptions(options, callable, ...args) {\r\n        // Note this doesn't cancel the underlying request,\r\n        // when available prefer to use the signal option of the underlying call\r\n        if (options.signal) {\r\n            return Promise.race([\r\n                this.call(callable, ...args),\r\n                new Promise((_, reject) => {\r\n                    options.signal?.addEventListener(\"abort\", () => {\r\n                        reject(new Error(\"AbortError\"));\r\n                    });\r\n                }),\r\n            ]);\r\n        }\r\n        return this.call(callable, ...args);\r\n    }\r\n    fetch(...args) {\r\n        return this.call(() => fetch(...args).then((res) => (res.ok ? res : Promise.reject(res))));\r\n    }\r\n}\r\n", "export function isLangChainMessage(message) {\r\n    return typeof message?._getType === \"function\";\r\n}\r\nexport function convertLangChainMessageToExample(message) {\r\n    const converted = {\r\n        type: message._getType(),\r\n        data: { content: message.content },\r\n    };\r\n    // Check for presence of keys in additional_kwargs\r\n    if (message?.additional_kwargs &&\r\n        Object.keys(message.additional_kwargs).length > 0) {\r\n        converted.data.additional_kwargs = { ...message.additional_kwargs };\r\n    }\r\n    return converted;\r\n}\r\n", "export const isBrowser = () => typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\r\nexport const isWebWorker = () => typeof globalThis === \"object\" &&\r\n    globalThis.constructor &&\r\n    globalThis.constructor.name === \"DedicatedWorkerGlobalScope\";\r\nexport const isJsDom = () => (typeof window !== \"undefined\" && window.name === \"nodejs\") ||\r\n    (typeof navigator !== \"undefined\" &&\r\n        (navigator.userAgent.includes(\"Node.js\") ||\r\n            navigator.userAgent.includes(\"jsdom\")));\r\n// Supabase Edge Function provides a `Deno` global object\r\n// without `version` property\r\nexport const isDeno = () => typeof Deno !== \"undefined\";\r\n// Mark not-as-node if in Supabase Edge Function\r\nexport const isNode = () => typeof process !== \"undefined\" &&\r\n    typeof process.versions !== \"undefined\" &&\r\n    typeof process.versions.node !== \"undefined\" &&\r\n    !isDeno();\r\nexport const getEnv = () => {\r\n    let env;\r\n    if (isBrowser()) {\r\n        env = \"browser\";\r\n    }\r\n    else if (isNode()) {\r\n        env = \"node\";\r\n    }\r\n    else if (isWebWorker()) {\r\n        env = \"webworker\";\r\n    }\r\n    else if (isJsDom()) {\r\n        env = \"jsdom\";\r\n    }\r\n    else if (isDeno()) {\r\n        env = \"deno\";\r\n    }\r\n    else {\r\n        env = \"other\";\r\n    }\r\n    return env;\r\n};\r\nlet runtimeEnvironment;\r\nexport async function getRuntimeEnvironment() {\r\n    if (runtimeEnvironment === undefined) {\r\n        const env = getEnv();\r\n        const releaseEnv = getShas();\r\n        runtimeEnvironment = {\r\n            library: \"langsmith\",\r\n            runtime: env,\r\n            ...releaseEnv,\r\n        };\r\n    }\r\n    return runtimeEnvironment;\r\n}\r\n/**\r\n * Retrieves the LangChain-specific environment variables from the current runtime environment.\r\n * Sensitive keys (containing the word \"key\") have their values redacted for security.\r\n *\r\n * @returns {Record<string, string>}\r\n *  - A record of LangChain-specific environment variables.\r\n */\r\nexport function getLangChainEnvVars() {\r\n    const allEnvVars = getEnvironmentVariables() || {};\r\n    const envVars = {};\r\n    for (const [key, value] of Object.entries(allEnvVars)) {\r\n        if (key.startsWith(\"LANGCHAIN_\") && typeof value === \"string\") {\r\n            envVars[key] = value;\r\n        }\r\n    }\r\n    for (const key in envVars) {\r\n        if (key.toLowerCase().includes(\"key\") && typeof envVars[key] === \"string\") {\r\n            const value = envVars[key];\r\n            envVars[key] =\r\n                value.slice(0, 2) + \"*\".repeat(value.length - 4) + value.slice(-2);\r\n        }\r\n    }\r\n    return envVars;\r\n}\r\n/**\r\n * Retrieves the environment variables from the current runtime environment.\r\n *\r\n * This function is designed to operate in a variety of JS environments,\r\n * including Node.js, Deno, browsers, etc.\r\n *\r\n * @returns {Record<string, string> | undefined}\r\n *  - A record of environment variables if available.\r\n *  - `undefined` if the environment does not support or allows access to environment variables.\r\n */\r\nexport function getEnvironmentVariables() {\r\n    try {\r\n        // Check for Node.js environment\r\n        // eslint-disable-next-line no-process-env\r\n        if (typeof process !== \"undefined\" && process.env) {\r\n            // eslint-disable-next-line no-process-env\r\n            Object.entries(process.env).reduce((acc, [key, value]) => {\r\n                acc[key] = String(value);\r\n                return acc;\r\n            }, {});\r\n        }\r\n        // For browsers and other environments, we may not have direct access to env variables\r\n        // Return undefined or any other fallback as required.\r\n        return undefined;\r\n    }\r\n    catch (e) {\r\n        // Catch any errors that might occur while trying to access environment variables\r\n        return undefined;\r\n    }\r\n}\r\nexport function getEnvironmentVariable(name) {\r\n    // Certain Deno setups will throw an error if you try to access environment variables\r\n    // https://github.com/hwchase17/langchainjs/issues/1412\r\n    try {\r\n        return typeof process !== \"undefined\"\r\n            ? // eslint-disable-next-line no-process-env\r\n                process.env?.[name]\r\n            : undefined;\r\n    }\r\n    catch (e) {\r\n        return undefined;\r\n    }\r\n}\r\nexport function setEnvironmentVariable(name, value) {\r\n    if (typeof process !== \"undefined\") {\r\n        // eslint-disable-next-line no-process-env\r\n        process.env[name] = value;\r\n    }\r\n}\r\nlet cachedCommitSHAs;\r\n/**\r\n * Get the Git commit SHA from common environment variables\r\n * used by different CI/CD platforms.\r\n * @returns {string | undefined} The Git commit SHA or undefined if not found.\r\n */\r\nexport function getShas() {\r\n    if (cachedCommitSHAs !== undefined) {\r\n        return cachedCommitSHAs;\r\n    }\r\n    const common_release_envs = [\r\n        \"VERCEL_GIT_COMMIT_SHA\",\r\n        \"NEXT_PUBLIC_VERCEL_GIT_COMMIT_SHA\",\r\n        \"COMMIT_REF\",\r\n        \"RENDER_GIT_COMMIT\",\r\n        \"CI_COMMIT_SHA\",\r\n        \"CIRCLE_SHA1\",\r\n        \"CF_PAGES_COMMIT_SHA\",\r\n        \"REACT_APP_GIT_SHA\",\r\n        \"SOURCE_VERSION\",\r\n        \"GITHUB_SHA\",\r\n        \"TRAVIS_COMMIT\",\r\n        \"GIT_COMMIT\",\r\n        \"BUILD_VCS_NUMBER\",\r\n        \"bamboo_planRepository_revision\",\r\n        \"Build.SourceVersion\",\r\n        \"BITBUCKET_COMMIT\",\r\n        \"DRONE_COMMIT_SHA\",\r\n        \"SEMAPHORE_GIT_SHA\",\r\n        \"BUILDKITE_COMMIT\",\r\n    ];\r\n    const shas = {};\r\n    for (const env of common_release_envs) {\r\n        const envVar = getEnvironmentVariable(env);\r\n        if (envVar !== undefined) {\r\n            shas[env] = envVar;\r\n        }\r\n    }\r\n    cachedCommitSHAs = shas;\r\n    return shas;\r\n}\r\n", "import * as uuid from \"uuid\";\r\nimport { AsyncCaller } from \"./utils/async_caller.js\";\r\nimport { convertLangChainMessageToExample, isLangChainMessage, } from \"./utils/messages.js\";\r\nimport { getEnvironmentVariable, getRuntimeEnvironment } from \"./utils/env.js\";\r\n// utility functions\r\nconst isLocalhost = (url) => {\r\n    const strippedUrl = url.replace(\"http://\", \"\").replace(\"https://\", \"\");\r\n    const hostname = strippedUrl.split(\"/\")[0].split(\":\")[0];\r\n    return (hostname === \"localhost\" || hostname === \"127.0.0.1\" || hostname === \"::1\");\r\n};\r\nconst raiseForStatus = async (response, operation) => {\r\n    // consume the response body to release the connection\r\n    // https://undici.nodejs.org/#/?id=garbage-collection\r\n    const body = await response.text();\r\n    if (!response.ok) {\r\n        throw new Error(`Failed to ${operation}: ${response.status} ${response.statusText} ${body}`);\r\n    }\r\n};\r\nasync function toArray(iterable) {\r\n    const result = [];\r\n    for await (const item of iterable) {\r\n        result.push(item);\r\n    }\r\n    return result;\r\n}\r\nfunction trimQuotes(str) {\r\n    if (str === undefined) {\r\n        return undefined;\r\n    }\r\n    return str\r\n        .trim()\r\n        .replace(/^\"(.*)\"$/, \"$1\")\r\n        .replace(/^'(.*)'$/, \"$1\");\r\n}\r\nfunction hideInputs(inputs) {\r\n    if (getEnvironmentVariable(\"LANGCHAIN_HIDE_INPUTS\") === \"true\") {\r\n        return {};\r\n    }\r\n    return inputs;\r\n}\r\nfunction hideOutputs(outputs) {\r\n    if (getEnvironmentVariable(\"LANGCHAIN_HIDE_OUTPUTS\") === \"true\") {\r\n        return {};\r\n    }\r\n    return outputs;\r\n}\r\nexport class Client {\r\n    constructor(config = {}) {\r\n        Object.defineProperty(this, \"apiKey\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"apiUrl\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"webUrl\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"caller\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"timeout_ms\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tenantId\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        const defaultConfig = Client.getDefaultClientConfig();\r\n        this.apiUrl = trimQuotes(config.apiUrl ?? defaultConfig.apiUrl) ?? \"\";\r\n        this.apiKey = trimQuotes(config.apiKey ?? defaultConfig.apiKey);\r\n        this.webUrl = trimQuotes(config.webUrl ?? defaultConfig.webUrl);\r\n        this.validateApiKeyIfHosted();\r\n        this.timeout_ms = config.timeout_ms ?? 4000;\r\n        this.caller = new AsyncCaller(config.callerOptions ?? {});\r\n    }\r\n    static getDefaultClientConfig() {\r\n        const apiKey = getEnvironmentVariable(\"LANGCHAIN_API_KEY\");\r\n        const apiUrl = getEnvironmentVariable(\"LANGCHAIN_ENDPOINT\") ??\r\n            (apiKey ? \"https://api.smith.langchain.com\" : \"http://localhost:1984\");\r\n        return {\r\n            apiUrl: apiUrl,\r\n            apiKey: apiKey,\r\n            webUrl: undefined,\r\n        };\r\n    }\r\n    validateApiKeyIfHosted() {\r\n        const isLocal = isLocalhost(this.apiUrl);\r\n        if (!isLocal && !this.apiKey) {\r\n            throw new Error(\"API key must be provided when using hosted LangSmith API\");\r\n        }\r\n    }\r\n    getHostUrl() {\r\n        if (this.webUrl) {\r\n            return this.webUrl;\r\n        }\r\n        else if (isLocalhost(this.apiUrl)) {\r\n            this.webUrl = \"http://localhost\";\r\n            return \"http://localhost\";\r\n        }\r\n        else if (this.apiUrl.split(\".\", 1)[0].includes(\"dev\")) {\r\n            this.webUrl = \"https://dev.smith.langchain.com\";\r\n            return \"https://dev.smith.langchain.com\";\r\n        }\r\n        else {\r\n            this.webUrl = \"https://smith.langchain.com\";\r\n            return \"https://smith.langchain.com\";\r\n        }\r\n    }\r\n    get headers() {\r\n        const headers = {};\r\n        if (this.apiKey) {\r\n            headers[\"x-api-key\"] = `${this.apiKey}`;\r\n        }\r\n        return headers;\r\n    }\r\n    async _get(path, queryParams) {\r\n        const paramsString = queryParams?.toString() ?? \"\";\r\n        const url = `${this.apiUrl}${path}?${paramsString}`;\r\n        const response = await this.caller.call(fetch, url, {\r\n            method: \"GET\",\r\n            headers: this.headers,\r\n            signal: AbortSignal.timeout(this.timeout_ms),\r\n        });\r\n        if (!response.ok) {\r\n            throw new Error(`Failed to fetch ${path}: ${response.status} ${response.statusText}`);\r\n        }\r\n        return response.json();\r\n    }\r\n    async *_getPaginated(path, queryParams = new URLSearchParams()) {\r\n        let offset = Number(queryParams.get(\"offset\")) || 0;\r\n        const limit = Number(queryParams.get(\"limit\")) || 100;\r\n        while (true) {\r\n            queryParams.set(\"offset\", String(offset));\r\n            queryParams.set(\"limit\", String(limit));\r\n            const url = `${this.apiUrl}${path}?${queryParams}`;\r\n            const response = await this.caller.call(fetch, url, {\r\n                method: \"GET\",\r\n                headers: this.headers,\r\n                signal: AbortSignal.timeout(this.timeout_ms),\r\n            });\r\n            if (!response.ok) {\r\n                throw new Error(`Failed to fetch ${path}: ${response.status} ${response.statusText}`);\r\n            }\r\n            const items = await response.json();\r\n            if (items.length === 0) {\r\n                break;\r\n            }\r\n            yield items;\r\n            if (items.length < limit) {\r\n                break;\r\n            }\r\n            offset += items.length;\r\n        }\r\n    }\r\n    async createRun(run) {\r\n        const headers = { ...this.headers, \"Content-Type\": \"application/json\" };\r\n        const extra = run.extra ?? {};\r\n        const runtimeEnv = await getRuntimeEnvironment();\r\n        const session_name = run.project_name;\r\n        delete run.project_name;\r\n        const runCreate = {\r\n            session_name,\r\n            ...run,\r\n            extra: {\r\n                ...run.extra,\r\n                runtime: {\r\n                    ...runtimeEnv,\r\n                    ...extra.runtime,\r\n                },\r\n            },\r\n        };\r\n        runCreate.inputs = hideInputs(runCreate.inputs);\r\n        if (runCreate.outputs) {\r\n            runCreate.outputs = hideOutputs(runCreate.outputs);\r\n        }\r\n        const response = await this.caller.call(fetch, `${this.apiUrl}/runs`, {\r\n            method: \"POST\",\r\n            headers,\r\n            body: JSON.stringify(runCreate),\r\n            signal: AbortSignal.timeout(this.timeout_ms),\r\n        });\r\n        await raiseForStatus(response, \"create run\");\r\n    }\r\n    async updateRun(runId, run) {\r\n        if (run.inputs) {\r\n            run.inputs = hideInputs(run.inputs);\r\n        }\r\n        if (run.outputs) {\r\n            run.outputs = hideOutputs(run.outputs);\r\n        }\r\n        const headers = { ...this.headers, \"Content-Type\": \"application/json\" };\r\n        const response = await this.caller.call(fetch, `${this.apiUrl}/runs/${runId}`, {\r\n            method: \"PATCH\",\r\n            headers,\r\n            body: JSON.stringify(run),\r\n            signal: AbortSignal.timeout(this.timeout_ms),\r\n        });\r\n        await raiseForStatus(response, \"update run\");\r\n    }\r\n    async readRun(runId, { loadChildRuns } = { loadChildRuns: false }) {\r\n        let run = await this._get(`/runs/${runId}`);\r\n        if (loadChildRuns && run.child_run_ids) {\r\n            run = await this._loadChildRuns(run);\r\n        }\r\n        return run;\r\n    }\r\n    async getRunUrl({ runId, run, projectOpts, }) {\r\n        if (run !== undefined) {\r\n            let sessionId;\r\n            if (run.session_id) {\r\n                sessionId = run.session_id;\r\n            }\r\n            else if (projectOpts?.projectName) {\r\n                sessionId = (await this.readProject({ projectName: projectOpts?.projectName })).id;\r\n            }\r\n            else if (projectOpts?.projectId) {\r\n                sessionId = projectOpts?.projectId;\r\n            }\r\n            else {\r\n                const project = await this.readProject({\r\n                    projectName: getEnvironmentVariable(\"LANGCHAIN_PROJECT\") || \"default\",\r\n                });\r\n                sessionId = project.id;\r\n            }\r\n            const tenantId = await this._getTenantId();\r\n            return `${this.getHostUrl()}/o/${tenantId}/projects/p/${sessionId}/r/${run.id}?poll=true`;\r\n        }\r\n        else if (runId !== undefined) {\r\n            const run_ = await this.readRun(runId);\r\n            if (!run_.app_path) {\r\n                throw new Error(`Run ${runId} has no app_path`);\r\n            }\r\n            const baseUrl = this.getHostUrl();\r\n            return `${baseUrl}${run_.app_path}`;\r\n        }\r\n        else {\r\n            throw new Error(\"Must provide either runId or run\");\r\n        }\r\n    }\r\n    async _loadChildRuns(run) {\r\n        const childRuns = await toArray(this.listRuns({ id: run.child_run_ids }));\r\n        const treemap = {};\r\n        const runs = {};\r\n        // TODO: make dotted order required when the migration finishes\r\n        childRuns.sort((a, b) => (a?.dotted_order ?? \"\").localeCompare(b?.dotted_order ?? \"\"));\r\n        for (const childRun of childRuns) {\r\n            if (childRun.parent_run_id === null ||\r\n                childRun.parent_run_id === undefined) {\r\n                throw new Error(`Child run ${childRun.id} has no parent`);\r\n            }\r\n            if (!(childRun.parent_run_id in treemap)) {\r\n                treemap[childRun.parent_run_id] = [];\r\n            }\r\n            treemap[childRun.parent_run_id].push(childRun);\r\n            runs[childRun.id] = childRun;\r\n        }\r\n        run.child_runs = treemap[run.id] || [];\r\n        for (const runId in treemap) {\r\n            if (runId !== run.id) {\r\n                runs[runId].child_runs = treemap[runId];\r\n            }\r\n        }\r\n        return run;\r\n    }\r\n    async *listRuns({ projectId, projectName, parentRunId, referenceExampleId, startTime, executionOrder, runType, error, id, limit, offset, query, filter, }) {\r\n        const queryParams = new URLSearchParams();\r\n        let projectId_ = projectId;\r\n        if (projectName) {\r\n            if (projectId) {\r\n                throw new Error(\"Only one of projectId or projectName may be given\");\r\n            }\r\n            projectId_ = (await this.readProject({ projectName })).id;\r\n        }\r\n        if (projectId_) {\r\n            queryParams.append(\"session\", projectId_);\r\n        }\r\n        if (parentRunId) {\r\n            queryParams.append(\"parent_run\", parentRunId);\r\n        }\r\n        if (referenceExampleId) {\r\n            queryParams.append(\"reference_example\", referenceExampleId);\r\n        }\r\n        if (startTime) {\r\n            queryParams.append(\"start_time\", startTime.toISOString());\r\n        }\r\n        if (executionOrder) {\r\n            queryParams.append(\"execution_order\", executionOrder.toString());\r\n        }\r\n        if (runType) {\r\n            queryParams.append(\"run_type\", runType);\r\n        }\r\n        if (error !== undefined) {\r\n            queryParams.append(\"error\", error.toString());\r\n        }\r\n        if (id !== undefined) {\r\n            for (const id_ of id) {\r\n                queryParams.append(\"id\", id_);\r\n            }\r\n        }\r\n        if (limit !== undefined) {\r\n            queryParams.append(\"limit\", limit.toString());\r\n        }\r\n        if (offset !== undefined) {\r\n            queryParams.append(\"offset\", offset.toString());\r\n        }\r\n        if (query !== undefined) {\r\n            queryParams.append(\"query\", query);\r\n        }\r\n        if (filter !== undefined) {\r\n            queryParams.append(\"filter\", filter);\r\n        }\r\n        for await (const runs of this._getPaginated(\"/runs\", queryParams)) {\r\n            yield* runs;\r\n        }\r\n    }\r\n    async shareRun(runId, { shareId } = {}) {\r\n        const data = {\r\n            run_id: runId,\r\n            share_token: shareId || uuid.v4(),\r\n        };\r\n        const response = await this.caller.call(fetch, `${this.apiUrl}/runs/${runId}/share`, {\r\n            method: \"PUT\",\r\n            headers: this.headers,\r\n            body: JSON.stringify(data),\r\n            signal: AbortSignal.timeout(this.timeout_ms),\r\n        });\r\n        const result = await response.json();\r\n        if (result === null || !(\"share_token\" in result)) {\r\n            throw new Error(\"Invalid response from server\");\r\n        }\r\n        return `${this.getHostUrl()}/public/${result[\"share_token\"]}/r`;\r\n    }\r\n    async unshareRun(runId) {\r\n        const response = await this.caller.call(fetch, `${this.apiUrl}/runs/${runId}/share`, {\r\n            method: \"DELETE\",\r\n            headers: this.headers,\r\n            signal: AbortSignal.timeout(this.timeout_ms),\r\n        });\r\n        await raiseForStatus(response, \"unshare run\");\r\n    }\r\n    async readRunSharedLink(runId) {\r\n        const response = await this.caller.call(fetch, `${this.apiUrl}/runs/${runId}/share`, {\r\n            method: \"GET\",\r\n            headers: this.headers,\r\n            signal: AbortSignal.timeout(this.timeout_ms),\r\n        });\r\n        const result = await response.json();\r\n        if (result === null || !(\"share_token\" in result)) {\r\n            return undefined;\r\n        }\r\n        return `${this.getHostUrl()}/public/${result[\"share_token\"]}/r`;\r\n    }\r\n    async createProject({ projectName, projectExtra, upsert, referenceDatasetId, }) {\r\n        const upsert_ = upsert ? `?upsert=true` : \"\";\r\n        const endpoint = `${this.apiUrl}/sessions${upsert_}`;\r\n        const body = {\r\n            name: projectName,\r\n        };\r\n        if (projectExtra !== undefined) {\r\n            body[\"extra\"] = projectExtra;\r\n        }\r\n        if (referenceDatasetId !== undefined) {\r\n            body[\"reference_dataset_id\"] = referenceDatasetId;\r\n        }\r\n        const response = await this.caller.call(fetch, endpoint, {\r\n            method: \"POST\",\r\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(body),\r\n            signal: AbortSignal.timeout(this.timeout_ms),\r\n        });\r\n        const result = await response.json();\r\n        if (!response.ok) {\r\n            throw new Error(`Failed to create session ${projectName}: ${response.status} ${response.statusText}`);\r\n        }\r\n        return result;\r\n    }\r\n    async readProject({ projectId, projectName, }) {\r\n        let path = \"/sessions\";\r\n        const params = new URLSearchParams();\r\n        if (projectId !== undefined && projectName !== undefined) {\r\n            throw new Error(\"Must provide either projectName or projectId, not both\");\r\n        }\r\n        else if (projectId !== undefined) {\r\n            path += `/${projectId}`;\r\n        }\r\n        else if (projectName !== undefined) {\r\n            params.append(\"name\", projectName);\r\n        }\r\n        else {\r\n            throw new Error(\"Must provide projectName or projectId\");\r\n        }\r\n        const response = await this._get(path, params);\r\n        let result;\r\n        if (Array.isArray(response)) {\r\n            if (response.length === 0) {\r\n                throw new Error(`Project[id=${projectId}, name=${projectName}] not found`);\r\n            }\r\n            result = response[0];\r\n        }\r\n        else {\r\n            result = response;\r\n        }\r\n        return result;\r\n    }\r\n    async _getTenantId() {\r\n        if (this._tenantId !== null) {\r\n            return this._tenantId;\r\n        }\r\n        const queryParams = new URLSearchParams({ limit: \"1\" });\r\n        for await (const projects of this._getPaginated(\"/sessions\", queryParams)) {\r\n            this._tenantId = projects[0].tenant_id;\r\n            return projects[0].tenant_id;\r\n        }\r\n        throw new Error(\"No projects found to resolve tenant.\");\r\n    }\r\n    async *listProjects({ projectIds, name, nameContains, referenceDatasetId, referenceDatasetName, referenceFree, } = {}) {\r\n        const params = new URLSearchParams();\r\n        if (projectIds !== undefined) {\r\n            for (const projectId of projectIds) {\r\n                params.append(\"id\", projectId);\r\n            }\r\n        }\r\n        if (name !== undefined) {\r\n            params.append(\"name\", name);\r\n        }\r\n        if (nameContains !== undefined) {\r\n            params.append(\"name_contains\", nameContains);\r\n        }\r\n        if (referenceDatasetId !== undefined) {\r\n            params.append(\"reference_dataset\", referenceDatasetId);\r\n        }\r\n        else if (referenceDatasetName !== undefined) {\r\n            const dataset = await this.readDataset({\r\n                datasetName: referenceDatasetName,\r\n            });\r\n            params.append(\"reference_dataset\", dataset.id);\r\n        }\r\n        if (referenceFree !== undefined) {\r\n            params.append(\"reference_free\", referenceFree.toString());\r\n        }\r\n        for await (const projects of this._getPaginated(\"/sessions\", params)) {\r\n            yield* projects;\r\n        }\r\n    }\r\n    async deleteProject({ projectId, projectName, }) {\r\n        let projectId_;\r\n        if (projectId === undefined && projectName === undefined) {\r\n            throw new Error(\"Must provide projectName or projectId\");\r\n        }\r\n        else if (projectId !== undefined && projectName !== undefined) {\r\n            throw new Error(\"Must provide either projectName or projectId, not both\");\r\n        }\r\n        else if (projectId === undefined) {\r\n            projectId_ = (await this.readProject({ projectName })).id;\r\n        }\r\n        else {\r\n            projectId_ = projectId;\r\n        }\r\n        const response = await this.caller.call(fetch, `${this.apiUrl}/sessions/${projectId_}`, {\r\n            method: \"DELETE\",\r\n            headers: this.headers,\r\n            signal: AbortSignal.timeout(this.timeout_ms),\r\n        });\r\n        await raiseForStatus(response, `delete session ${projectId_} (${projectName})`);\r\n    }\r\n    async uploadCsv({ csvFile, fileName, inputKeys, outputKeys, description, dataType, name, }) {\r\n        const url = `${this.apiUrl}/datasets/upload`;\r\n        const formData = new FormData();\r\n        formData.append(\"file\", csvFile, fileName);\r\n        inputKeys.forEach((key) => {\r\n            formData.append(\"input_keys\", key);\r\n        });\r\n        outputKeys.forEach((key) => {\r\n            formData.append(\"output_keys\", key);\r\n        });\r\n        if (description) {\r\n            formData.append(\"description\", description);\r\n        }\r\n        if (dataType) {\r\n            formData.append(\"data_type\", dataType);\r\n        }\r\n        if (name) {\r\n            formData.append(\"name\", name);\r\n        }\r\n        const response = await this.caller.call(fetch, url, {\r\n            method: \"POST\",\r\n            headers: this.headers,\r\n            body: formData,\r\n            signal: AbortSignal.timeout(this.timeout_ms),\r\n        });\r\n        if (!response.ok) {\r\n            const result = await response.json();\r\n            if (result.detail && result.detail.includes(\"already exists\")) {\r\n                throw new Error(`Dataset ${fileName} already exists`);\r\n            }\r\n            throw new Error(`Failed to upload CSV: ${response.status} ${response.statusText}`);\r\n        }\r\n        const result = await response.json();\r\n        return result;\r\n    }\r\n    async createDataset(name, { description, dataType, } = {}) {\r\n        const body = {\r\n            name,\r\n            description,\r\n        };\r\n        if (dataType) {\r\n            body.data_type = dataType;\r\n        }\r\n        const response = await this.caller.call(fetch, `${this.apiUrl}/datasets`, {\r\n            method: \"POST\",\r\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(body),\r\n            signal: AbortSignal.timeout(this.timeout_ms),\r\n        });\r\n        if (!response.ok) {\r\n            const result = await response.json();\r\n            if (result.detail && result.detail.includes(\"already exists\")) {\r\n                throw new Error(`Dataset ${name} already exists`);\r\n            }\r\n            throw new Error(`Failed to create dataset ${response.status} ${response.statusText}`);\r\n        }\r\n        const result = await response.json();\r\n        return result;\r\n    }\r\n    async readDataset({ datasetId, datasetName, }) {\r\n        let path = \"/datasets\";\r\n        // limit to 1 result\r\n        const params = new URLSearchParams({ limit: \"1\" });\r\n        if (datasetId !== undefined && datasetName !== undefined) {\r\n            throw new Error(\"Must provide either datasetName or datasetId, not both\");\r\n        }\r\n        else if (datasetId !== undefined) {\r\n            path += `/${datasetId}`;\r\n        }\r\n        else if (datasetName !== undefined) {\r\n            params.append(\"name\", datasetName);\r\n        }\r\n        else {\r\n            throw new Error(\"Must provide datasetName or datasetId\");\r\n        }\r\n        const response = await this._get(path, params);\r\n        let result;\r\n        if (Array.isArray(response)) {\r\n            if (response.length === 0) {\r\n                throw new Error(`Dataset[id=${datasetId}, name=${datasetName}] not found`);\r\n            }\r\n            result = response[0];\r\n        }\r\n        else {\r\n            result = response;\r\n        }\r\n        return result;\r\n    }\r\n    async *listDatasets({ limit = 100, offset = 0, datasetIds, datasetName, datasetNameContains, } = {}) {\r\n        const path = \"/datasets\";\r\n        const params = new URLSearchParams({\r\n            limit: limit.toString(),\r\n            offset: offset.toString(),\r\n        });\r\n        if (datasetIds !== undefined) {\r\n            for (const id_ of datasetIds) {\r\n                params.append(\"id\", id_);\r\n            }\r\n        }\r\n        if (datasetName !== undefined) {\r\n            params.append(\"name\", datasetName);\r\n        }\r\n        if (datasetNameContains !== undefined) {\r\n            params.append(\"name_contains\", datasetNameContains);\r\n        }\r\n        for await (const datasets of this._getPaginated(path, params)) {\r\n            yield* datasets;\r\n        }\r\n    }\r\n    async deleteDataset({ datasetId, datasetName, }) {\r\n        let path = \"/datasets\";\r\n        let datasetId_ = datasetId;\r\n        if (datasetId !== undefined && datasetName !== undefined) {\r\n            throw new Error(\"Must provide either datasetName or datasetId, not both\");\r\n        }\r\n        else if (datasetName !== undefined) {\r\n            const dataset = await this.readDataset({ datasetName });\r\n            datasetId_ = dataset.id;\r\n        }\r\n        if (datasetId_ !== undefined) {\r\n            path += `/${datasetId_}`;\r\n        }\r\n        else {\r\n            throw new Error(\"Must provide datasetName or datasetId\");\r\n        }\r\n        const response = await this.caller.call(fetch, this.apiUrl + path, {\r\n            method: \"DELETE\",\r\n            headers: this.headers,\r\n            signal: AbortSignal.timeout(this.timeout_ms),\r\n        });\r\n        if (!response.ok) {\r\n            throw new Error(`Failed to delete ${path}: ${response.status} ${response.statusText}`);\r\n        }\r\n        await response.json();\r\n    }\r\n    async createExample(inputs, outputs, { datasetId, datasetName, createdAt, exampleId }) {\r\n        let datasetId_ = datasetId;\r\n        if (datasetId_ === undefined && datasetName === undefined) {\r\n            throw new Error(\"Must provide either datasetName or datasetId\");\r\n        }\r\n        else if (datasetId_ !== undefined && datasetName !== undefined) {\r\n            throw new Error(\"Must provide either datasetName or datasetId, not both\");\r\n        }\r\n        else if (datasetId_ === undefined) {\r\n            const dataset = await this.readDataset({ datasetName });\r\n            datasetId_ = dataset.id;\r\n        }\r\n        const createdAt_ = createdAt || new Date();\r\n        const data = {\r\n            dataset_id: datasetId_,\r\n            inputs,\r\n            outputs,\r\n            created_at: createdAt_.toISOString(),\r\n            id: exampleId,\r\n        };\r\n        const response = await this.caller.call(fetch, `${this.apiUrl}/examples`, {\r\n            method: \"POST\",\r\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(data),\r\n            signal: AbortSignal.timeout(this.timeout_ms),\r\n        });\r\n        if (!response.ok) {\r\n            throw new Error(`Failed to create example: ${response.status} ${response.statusText}`);\r\n        }\r\n        const result = await response.json();\r\n        return result;\r\n    }\r\n    async createLLMExample(input, generation, options) {\r\n        return this.createExample({ input }, { output: generation }, options);\r\n    }\r\n    async createChatExample(input, generations, options) {\r\n        const finalInput = input.map((message) => {\r\n            if (isLangChainMessage(message)) {\r\n                return convertLangChainMessageToExample(message);\r\n            }\r\n            return message;\r\n        });\r\n        const finalOutput = isLangChainMessage(generations)\r\n            ? convertLangChainMessageToExample(generations)\r\n            : generations;\r\n        return this.createExample({ input: finalInput }, { output: finalOutput }, options);\r\n    }\r\n    async readExample(exampleId) {\r\n        const path = `/examples/${exampleId}`;\r\n        return await this._get(path);\r\n    }\r\n    async *listExamples({ datasetId, datasetName, exampleIds, } = {}) {\r\n        let datasetId_;\r\n        if (datasetId !== undefined && datasetName !== undefined) {\r\n            throw new Error(\"Must provide either datasetName or datasetId, not both\");\r\n        }\r\n        else if (datasetId !== undefined) {\r\n            datasetId_ = datasetId;\r\n        }\r\n        else if (datasetName !== undefined) {\r\n            const dataset = await this.readDataset({ datasetName });\r\n            datasetId_ = dataset.id;\r\n        }\r\n        else {\r\n            throw new Error(\"Must provide a datasetName or datasetId\");\r\n        }\r\n        const params = new URLSearchParams({ dataset: datasetId_ });\r\n        if (exampleIds !== undefined) {\r\n            for (const id_ of exampleIds) {\r\n                params.append(\"id\", id_);\r\n            }\r\n        }\r\n        for await (const examples of this._getPaginated(\"/examples\", params)) {\r\n            yield* examples;\r\n        }\r\n    }\r\n    async deleteExample(exampleId) {\r\n        const path = `/examples/${exampleId}`;\r\n        const response = await this.caller.call(fetch, this.apiUrl + path, {\r\n            method: \"DELETE\",\r\n            headers: this.headers,\r\n            signal: AbortSignal.timeout(this.timeout_ms),\r\n        });\r\n        if (!response.ok) {\r\n            throw new Error(`Failed to delete ${path}: ${response.status} ${response.statusText}`);\r\n        }\r\n        await response.json();\r\n    }\r\n    async updateExample(exampleId, update) {\r\n        const response = await this.caller.call(fetch, `${this.apiUrl}/examples/${exampleId}`, {\r\n            method: \"PATCH\",\r\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(update),\r\n            signal: AbortSignal.timeout(this.timeout_ms),\r\n        });\r\n        if (!response.ok) {\r\n            throw new Error(`Failed to update example ${exampleId}: ${response.status} ${response.statusText}`);\r\n        }\r\n        const result = await response.json();\r\n        return result;\r\n    }\r\n    async evaluateRun(run, evaluator, { sourceInfo, loadChildRuns, } = { loadChildRuns: false }) {\r\n        let run_;\r\n        if (typeof run === \"string\") {\r\n            run_ = await this.readRun(run, { loadChildRuns });\r\n        }\r\n        else if (typeof run === \"object\" && \"id\" in run) {\r\n            run_ = run;\r\n        }\r\n        else {\r\n            throw new Error(`Invalid run type: ${typeof run}`);\r\n        }\r\n        let referenceExample = undefined;\r\n        if (run_.reference_example_id !== null &&\r\n            run_.reference_example_id !== undefined) {\r\n            referenceExample = await this.readExample(run_.reference_example_id);\r\n        }\r\n        const feedbackResult = await evaluator.evaluateRun(run_, referenceExample);\r\n        let sourceInfo_ = sourceInfo ?? {};\r\n        if (feedbackResult.evaluatorInfo) {\r\n            sourceInfo_ = { ...sourceInfo_, ...feedbackResult.evaluatorInfo };\r\n        }\r\n        return await this.createFeedback(run_.id, feedbackResult.key, {\r\n            score: feedbackResult.score,\r\n            value: feedbackResult.value,\r\n            comment: feedbackResult.comment,\r\n            correction: feedbackResult.correction,\r\n            sourceInfo: sourceInfo_,\r\n            feedbackSourceType: \"model\",\r\n        });\r\n    }\r\n    async createFeedback(runId, key, { score, value, correction, comment, sourceInfo, feedbackSourceType = \"api\", sourceRunId, feedbackId, }) {\r\n        const feedback_source = {\r\n            type: feedbackSourceType ?? \"api\",\r\n            metadata: sourceInfo ?? {},\r\n        };\r\n        if (sourceRunId !== undefined &&\r\n            feedback_source?.metadata !== undefined &&\r\n            !feedback_source.metadata[\"__run\"]) {\r\n            feedback_source.metadata[\"__run\"] = { run_id: sourceRunId };\r\n        }\r\n        const feedback = {\r\n            id: feedbackId ?? uuid.v4(),\r\n            run_id: runId,\r\n            key,\r\n            score,\r\n            value,\r\n            correction,\r\n            comment,\r\n            feedback_source: feedback_source,\r\n        };\r\n        const response = await this.caller.call(fetch, `${this.apiUrl}/feedback`, {\r\n            method: \"POST\",\r\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(feedback),\r\n            signal: AbortSignal.timeout(this.timeout_ms),\r\n        });\r\n        await raiseForStatus(response, \"create feedback\");\r\n        return feedback;\r\n    }\r\n    async updateFeedback(feedbackId, { score, value, correction, comment, }) {\r\n        const feedbackUpdate = {};\r\n        if (score !== undefined && score !== null) {\r\n            feedbackUpdate[\"score\"] = score;\r\n        }\r\n        if (value !== undefined && value !== null) {\r\n            feedbackUpdate[\"value\"] = value;\r\n        }\r\n        if (correction !== undefined && correction !== null) {\r\n            feedbackUpdate[\"correction\"] = correction;\r\n        }\r\n        if (comment !== undefined && comment !== null) {\r\n            feedbackUpdate[\"comment\"] = comment;\r\n        }\r\n        const response = await this.caller.call(fetch, `${this.apiUrl}/feedback/${feedbackId}`, {\r\n            method: \"PATCH\",\r\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(feedbackUpdate),\r\n            signal: AbortSignal.timeout(this.timeout_ms),\r\n        });\r\n        await raiseForStatus(response, \"update feedback\");\r\n    }\r\n    async readFeedback(feedbackId) {\r\n        const path = `/feedback/${feedbackId}`;\r\n        const response = await this._get(path);\r\n        return response;\r\n    }\r\n    async deleteFeedback(feedbackId) {\r\n        const path = `/feedback/${feedbackId}`;\r\n        const response = await this.caller.call(fetch, this.apiUrl + path, {\r\n            method: \"DELETE\",\r\n            headers: this.headers,\r\n            signal: AbortSignal.timeout(this.timeout_ms),\r\n        });\r\n        if (!response.ok) {\r\n            throw new Error(`Failed to delete ${path}: ${response.status} ${response.statusText}`);\r\n        }\r\n        await response.json();\r\n    }\r\n    async *listFeedback({ runIds, feedbackKeys, feedbackSourceTypes, } = {}) {\r\n        const queryParams = new URLSearchParams();\r\n        if (runIds) {\r\n            queryParams.append(\"run\", runIds.join(\",\"));\r\n        }\r\n        if (feedbackKeys) {\r\n            for (const key of feedbackKeys) {\r\n                queryParams.append(\"key\", key);\r\n            }\r\n        }\r\n        if (feedbackSourceTypes) {\r\n            for (const type of feedbackSourceTypes) {\r\n                queryParams.append(\"source\", type);\r\n            }\r\n        }\r\n        for await (const feedbacks of this._getPaginated(\"/feedback\", queryParams)) {\r\n            yield* feedbacks;\r\n        }\r\n    }\r\n}\r\n", "export const isBrowser = () => typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\r\nexport const isWebWorker = () => typeof globalThis === \"object\" &&\r\n    globalThis.constructor &&\r\n    globalThis.constructor.name === \"DedicatedWorkerGlobalScope\";\r\nexport const isJsDom = () => (typeof window !== \"undefined\" && window.name === \"nodejs\") ||\r\n    (typeof navigator !== \"undefined\" &&\r\n        (navigator.userAgent.includes(\"Node.js\") ||\r\n            navigator.userAgent.includes(\"jsdom\")));\r\n// Supabase Edge Function provides a `Deno` global object\r\n// without `version` property\r\nexport const isDeno = () => typeof Deno !== \"undefined\";\r\n// Mark not-as-node if in Supabase Edge Function\r\nexport const isNode = () => typeof process !== \"undefined\" &&\r\n    typeof process.versions !== \"undefined\" &&\r\n    typeof process.versions.node !== \"undefined\" &&\r\n    !isDeno();\r\nexport const getEnv = () => {\r\n    let env;\r\n    if (isBrowser()) {\r\n        env = \"browser\";\r\n    }\r\n    else if (isNode()) {\r\n        env = \"node\";\r\n    }\r\n    else if (isWebWorker()) {\r\n        env = \"webworker\";\r\n    }\r\n    else if (isJsDom()) {\r\n        env = \"jsdom\";\r\n    }\r\n    else if (isDeno()) {\r\n        env = \"deno\";\r\n    }\r\n    else {\r\n        env = \"other\";\r\n    }\r\n    return env;\r\n};\r\nlet runtimeEnvironment;\r\nexport async function getRuntimeEnvironment() {\r\n    if (runtimeEnvironment === undefined) {\r\n        const env = getEnv();\r\n        runtimeEnvironment = {\r\n            library: \"langchain-js\",\r\n            runtime: env,\r\n        };\r\n    }\r\n    return runtimeEnvironment;\r\n}\r\nexport function getEnvironmentVariable(name) {\r\n    // Certain Deno setups will throw an error if you try to access environment variables\r\n    // https://github.com/hwchase17/langchainjs/issues/1412\r\n    try {\r\n        return typeof process !== \"undefined\"\r\n            ? // eslint-disable-next-line no-process-env\r\n                process.env?.[name]\r\n            : undefined;\r\n    }\r\n    catch (e) {\r\n        return undefined;\r\n    }\r\n}\r\n", "import { Client } from \"langsmith\";\r\nimport { getEnvironmentVariable, getRuntimeEnvironment, } from \"../../util/env.js\";\r\nimport { BaseTracer } from \"./tracer.js\";\r\nexport class LangChainTracer extends BaseTracer {\r\n    constructor(fields = {}) {\r\n        super(fields);\r\n        Object.defineProperty(this, \"name\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"langchain_tracer\"\r\n        });\r\n        Object.defineProperty(this, \"projectName\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"exampleId\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"client\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        const { exampleId, projectName, client } = fields;\r\n        this.projectName =\r\n            projectName ??\r\n                getEnvironmentVariable(\"LANGCHAIN_PROJECT\") ??\r\n                getEnvironmentVariable(\"LANGCHAIN_SESSION\");\r\n        this.exampleId = exampleId;\r\n        this.client = client ?? new Client({});\r\n    }\r\n    async _convertToCreate(run, example_id = undefined) {\r\n        return {\r\n            ...run,\r\n            extra: {\r\n                ...run.extra,\r\n                runtime: await getRuntimeEnvironment(),\r\n            },\r\n            child_runs: undefined,\r\n            session_name: this.projectName,\r\n            reference_example_id: run.parent_run_id ? undefined : example_id,\r\n        };\r\n    }\r\n    async persistRun(_run) { }\r\n    async _persistRunSingle(run) {\r\n        const persistedRun = await this._convertToCreate(run, this.exampleId);\r\n        await this.client.createRun(persistedRun);\r\n    }\r\n    async _updateRunSingle(run) {\r\n        const runUpdate = {\r\n            end_time: run.end_time,\r\n            error: run.error,\r\n            outputs: run.outputs,\r\n            events: run.events,\r\n            inputs: run.inputs,\r\n        };\r\n        await this.client.updateRun(run.id, runUpdate);\r\n    }\r\n    async onRetrieverStart(run) {\r\n        await this._persistRunSingle(run);\r\n    }\r\n    async onRetrieverEnd(run) {\r\n        await this._updateRunSingle(run);\r\n    }\r\n    async onRetrieverError(run) {\r\n        await this._updateRunSingle(run);\r\n    }\r\n    async onLLMStart(run) {\r\n        await this._persistRunSingle(run);\r\n    }\r\n    async onLLMEnd(run) {\r\n        await this._updateRunSingle(run);\r\n    }\r\n    async onLLMError(run) {\r\n        await this._updateRunSingle(run);\r\n    }\r\n    async onChainStart(run) {\r\n        await this._persistRunSingle(run);\r\n    }\r\n    async onChainEnd(run) {\r\n        await this._updateRunSingle(run);\r\n    }\r\n    async onChainError(run) {\r\n        await this._updateRunSingle(run);\r\n    }\r\n    async onToolStart(run) {\r\n        await this._persistRunSingle(run);\r\n    }\r\n    async onToolEnd(run) {\r\n        await this._updateRunSingle(run);\r\n    }\r\n    async onToolError(run) {\r\n        await this._updateRunSingle(run);\r\n    }\r\n}\r\n", "/**\r\n * Abstract base class for memory in LangChain's Chains. Memory refers to\r\n * the state in Chains. It can be used to store information about past\r\n * executions of a Chain and inject that information into the inputs of\r\n * future executions of the Chain.\r\n */\r\nexport class BaseMemory {\r\n}\r\nconst getValue = (values, key) => {\r\n    if (key !== undefined) {\r\n        return values[key];\r\n    }\r\n    const keys = Object.keys(values);\r\n    if (keys.length === 1) {\r\n        return values[keys[0]];\r\n    }\r\n};\r\n/**\r\n * This function is used by memory classes to select the input value\r\n * to use for the memory. If there is only one input value, it is used.\r\n * If there are multiple input values, the inputKey must be specified.\r\n */\r\nexport const getInputValue = (inputValues, inputKey) => {\r\n    const value = getValue(inputValues, inputKey);\r\n    if (!value) {\r\n        const keys = Object.keys(inputValues);\r\n        throw new Error(`input values have ${keys.length} keys, you must specify an input key or pass only 1 key as input`);\r\n    }\r\n    return value;\r\n};\r\n/**\r\n * This function is used by memory classes to select the output value\r\n * to use for the memory. If there is only one output value, it is used.\r\n * If there are multiple output values, the outputKey must be specified.\r\n * If no outputKey is specified, an error is thrown.\r\n */\r\nexport const getOutputValue = (outputValues, outputKey) => {\r\n    const value = getValue(outputValues, outputKey);\r\n    if (!value) {\r\n        const keys = Object.keys(outputValues);\r\n        throw new Error(`output values have ${keys.length} keys, you must specify an output key or pass only 1 key as output`);\r\n    }\r\n    return value;\r\n};\r\n/**\r\n * This function is used by memory classes to get a string representation\r\n * of the chat message history, based on the message content and role.\r\n */\r\nexport function getBufferString(messages, humanPrefix = \"Human\", aiPrefix = \"AI\") {\r\n    const string_messages = [];\r\n    for (const m of messages) {\r\n        let role;\r\n        if (m._getType() === \"human\") {\r\n            role = humanPrefix;\r\n        }\r\n        else if (m._getType() === \"ai\") {\r\n            role = aiPrefix;\r\n        }\r\n        else if (m._getType() === \"system\") {\r\n            role = \"System\";\r\n        }\r\n        else if (m._getType() === \"function\") {\r\n            role = \"Function\";\r\n        }\r\n        else if (m._getType() === \"generic\") {\r\n            role = m.role;\r\n        }\r\n        else {\r\n            throw new Error(`Got unsupported message type: ${m}`);\r\n        }\r\n        const nameStr = m.name ? `${m.name}, ` : \"\";\r\n        string_messages.push(`${role}: ${nameStr}${m.content}`);\r\n    }\r\n    return string_messages.join(\"\\n\");\r\n}\r\n/**\r\n * Function used by memory classes to get the key of the prompt input,\r\n * excluding any keys that are memory variables or the \"stop\" key. If\r\n * there is not exactly one prompt input key, an error is thrown.\r\n */\r\nexport function getPromptInputKey(inputs, memoryVariables) {\r\n    const promptInputKeys = Object.keys(inputs).filter((key) => !memoryVariables.includes(key) && key !== \"stop\");\r\n    if (promptInputKeys.length !== 1) {\r\n        throw new Error(`One input key expected, but got ${promptInputKeys.length}`);\r\n    }\r\n    return promptInputKeys[0];\r\n}\r\n", "import { getBufferString } from \"../../memory/base.js\";\r\nimport { getEnvironmentVariable } from \"../../util/env.js\";\r\nimport { BaseTracer } from \"./tracer.js\";\r\nexport class LangChainTracerV1 extends BaseTracer {\r\n    constructor() {\r\n        super();\r\n        Object.defineProperty(this, \"name\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"langchain_tracer\"\r\n        });\r\n        Object.defineProperty(this, \"endpoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: getEnvironmentVariable(\"LANGCHAIN_ENDPOINT\") || \"http://localhost:1984\"\r\n        });\r\n        Object.defineProperty(this, \"headers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {\r\n                \"Content-Type\": \"application/json\",\r\n            }\r\n        });\r\n        Object.defineProperty(this, \"session\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        const apiKey = getEnvironmentVariable(\"LANGCHAIN_API_KEY\");\r\n        if (apiKey) {\r\n            this.headers[\"x-api-key\"] = apiKey;\r\n        }\r\n    }\r\n    async newSession(sessionName) {\r\n        const sessionCreate = {\r\n            start_time: Date.now(),\r\n            name: sessionName,\r\n        };\r\n        const session = await this.persistSession(sessionCreate);\r\n        this.session = session;\r\n        return session;\r\n    }\r\n    async loadSession(sessionName) {\r\n        const endpoint = `${this.endpoint}/sessions?name=${sessionName}`;\r\n        return this._handleSessionResponse(endpoint);\r\n    }\r\n    async loadDefaultSession() {\r\n        const endpoint = `${this.endpoint}/sessions?name=default`;\r\n        return this._handleSessionResponse(endpoint);\r\n    }\r\n    async convertV2RunToRun(run) {\r\n        const session = this.session ?? (await this.loadDefaultSession());\r\n        const serialized = run.serialized;\r\n        let runResult;\r\n        if (run.run_type === \"llm\") {\r\n            const prompts = run.inputs.prompts\r\n                ? run.inputs.prompts\r\n                : run.inputs.messages.map((x) => getBufferString(x));\r\n            const llmRun = {\r\n                uuid: run.id,\r\n                start_time: run.start_time,\r\n                end_time: run.end_time,\r\n                execution_order: run.execution_order,\r\n                child_execution_order: run.child_execution_order,\r\n                serialized,\r\n                type: run.run_type,\r\n                session_id: session.id,\r\n                prompts,\r\n                response: run.outputs,\r\n            };\r\n            runResult = llmRun;\r\n        }\r\n        else if (run.run_type === \"chain\") {\r\n            const child_runs = await Promise.all(run.child_runs.map((child_run) => this.convertV2RunToRun(child_run)));\r\n            const chainRun = {\r\n                uuid: run.id,\r\n                start_time: run.start_time,\r\n                end_time: run.end_time,\r\n                execution_order: run.execution_order,\r\n                child_execution_order: run.child_execution_order,\r\n                serialized,\r\n                type: run.run_type,\r\n                session_id: session.id,\r\n                inputs: run.inputs,\r\n                outputs: run.outputs,\r\n                child_llm_runs: child_runs.filter((child_run) => child_run.type === \"llm\"),\r\n                child_chain_runs: child_runs.filter((child_run) => child_run.type === \"chain\"),\r\n                child_tool_runs: child_runs.filter((child_run) => child_run.type === \"tool\"),\r\n            };\r\n            runResult = chainRun;\r\n        }\r\n        else if (run.run_type === \"tool\") {\r\n            const child_runs = await Promise.all(run.child_runs.map((child_run) => this.convertV2RunToRun(child_run)));\r\n            const toolRun = {\r\n                uuid: run.id,\r\n                start_time: run.start_time,\r\n                end_time: run.end_time,\r\n                execution_order: run.execution_order,\r\n                child_execution_order: run.child_execution_order,\r\n                serialized,\r\n                type: run.run_type,\r\n                session_id: session.id,\r\n                tool_input: run.inputs.input,\r\n                output: run.outputs?.output,\r\n                action: JSON.stringify(serialized),\r\n                child_llm_runs: child_runs.filter((child_run) => child_run.type === \"llm\"),\r\n                child_chain_runs: child_runs.filter((child_run) => child_run.type === \"chain\"),\r\n                child_tool_runs: child_runs.filter((child_run) => child_run.type === \"tool\"),\r\n            };\r\n            runResult = toolRun;\r\n        }\r\n        else {\r\n            throw new Error(`Unknown run type: ${run.run_type}`);\r\n        }\r\n        return runResult;\r\n    }\r\n    async persistRun(run) {\r\n        let endpoint;\r\n        let v1Run;\r\n        if (run.run_type !== undefined) {\r\n            v1Run = await this.convertV2RunToRun(run);\r\n        }\r\n        else {\r\n            v1Run = run;\r\n        }\r\n        if (v1Run.type === \"llm\") {\r\n            endpoint = `${this.endpoint}/llm-runs`;\r\n        }\r\n        else if (v1Run.type === \"chain\") {\r\n            endpoint = `${this.endpoint}/chain-runs`;\r\n        }\r\n        else {\r\n            endpoint = `${this.endpoint}/tool-runs`;\r\n        }\r\n        const response = await fetch(endpoint, {\r\n            method: \"POST\",\r\n            headers: this.headers,\r\n            body: JSON.stringify(v1Run),\r\n        });\r\n        if (!response.ok) {\r\n            console.error(`Failed to persist run: ${response.status} ${response.statusText}`);\r\n        }\r\n    }\r\n    async persistSession(sessionCreate) {\r\n        const endpoint = `${this.endpoint}/sessions`;\r\n        const response = await fetch(endpoint, {\r\n            method: \"POST\",\r\n            headers: this.headers,\r\n            body: JSON.stringify(sessionCreate),\r\n        });\r\n        if (!response.ok) {\r\n            console.error(`Failed to persist session: ${response.status} ${response.statusText}, using default session.`);\r\n            return {\r\n                id: 1,\r\n                ...sessionCreate,\r\n            };\r\n        }\r\n        return {\r\n            id: (await response.json()).id,\r\n            ...sessionCreate,\r\n        };\r\n    }\r\n    async _handleSessionResponse(endpoint) {\r\n        const response = await fetch(endpoint, {\r\n            method: \"GET\",\r\n            headers: this.headers,\r\n        });\r\n        let tracerSession;\r\n        if (!response.ok) {\r\n            console.error(`Failed to load session: ${response.status} ${response.statusText}`);\r\n            tracerSession = {\r\n                id: 1,\r\n                start_time: Date.now(),\r\n            };\r\n            this.session = tracerSession;\r\n            return tracerSession;\r\n        }\r\n        const resp = (await response.json());\r\n        if (resp.length === 0) {\r\n            tracerSession = {\r\n                id: 1,\r\n                start_time: Date.now(),\r\n            };\r\n            this.session = tracerSession;\r\n            return tracerSession;\r\n        }\r\n        [tracerSession] = resp;\r\n        this.session = tracerSession;\r\n        return tracerSession;\r\n    }\r\n}\r\n", "import { LangChainTracer } from \"./tracer_langchain.js\";\r\nimport { LangChainTracerV1 } from \"./tracer_langchain_v1.js\";\r\n/**\r\n * Function that returns an instance of `LangChainTracerV1`. If a session\r\n * is provided, it loads that session into the tracer; otherwise, it loads\r\n * a default session.\r\n * @param session Optional session to load into the tracer.\r\n * @returns An instance of `LangChainTracerV1`.\r\n */\r\nexport async function getTracingCallbackHandler(session) {\r\n    const tracer = new LangChainTracerV1();\r\n    if (session) {\r\n        await tracer.loadSession(session);\r\n    }\r\n    else {\r\n        await tracer.loadDefaultSession();\r\n    }\r\n    return tracer;\r\n}\r\n/**\r\n * Function that returns an instance of `LangChainTracer`. It does not\r\n * load any session data.\r\n * @returns An instance of `LangChainTracer`.\r\n */\r\nexport async function getTracingV2CallbackHandler() {\r\n    return new LangChainTracer();\r\n}\r\n", "import PQueueMod from \"p-queue\";\r\nlet queue;\r\n/**\r\n * Creates a queue using the p-queue library. The queue is configured to\r\n * auto-start and has a concurrency of 1, meaning it will process tasks\r\n * one at a time.\r\n */\r\nfunction createQueue() {\r\n    const PQueue = \"default\" in PQueueMod ? PQueueMod.default : PQueueMod;\r\n    return new PQueue({\r\n        autoStart: true,\r\n        concurrency: 1,\r\n    });\r\n}\r\n/**\r\n * Consume a promise, either adding it to the queue or waiting for it to resolve\r\n * @param promise Promise to consume\r\n * @param wait Whether to wait for the promise to resolve or resolve immediately\r\n */\r\nexport async function consumeCallback(promiseFn, wait) {\r\n    if (wait === true) {\r\n        await promiseFn();\r\n    }\r\n    else {\r\n        if (typeof queue === \"undefined\") {\r\n            queue = createQueue();\r\n        }\r\n        void queue.add(promiseFn);\r\n    }\r\n}\r\n/**\r\n * Waits for all promises in the queue to resolve. If the queue is\r\n * undefined, it immediately resolves a promise.\r\n */\r\nexport function awaitAllCallbacks() {\r\n    return typeof queue !== \"undefined\" ? queue.onIdle() : Promise.resolve();\r\n}\r\n", "import { v4 as uuidv4 } from \"uuid\";\r\nimport { BaseCallbackHandler, } from \"./base.js\";\r\nimport { ConsoleCallbackHandler } from \"./handlers/console.js\";\r\nimport { getTracingCallbackHandler, getTracingV2CallbackHandler, } from \"./handlers/initialize.js\";\r\nimport { getBufferString } from \"../memory/base.js\";\r\nimport { getEnvironmentVariable } from \"../util/env.js\";\r\nimport { LangChainTracer, } from \"./handlers/tracer_langchain.js\";\r\nimport { consumeCallback } from \"./promises.js\";\r\nexport function parseCallbackConfigArg(arg) {\r\n    if (!arg) {\r\n        return {};\r\n    }\r\n    else if (Array.isArray(arg) || \"name\" in arg) {\r\n        return { callbacks: arg };\r\n    }\r\n    else {\r\n        return arg;\r\n    }\r\n}\r\n/**\r\n * Manage callbacks from different components of LangChain.\r\n */\r\nexport class BaseCallbackManager {\r\n    setHandler(handler) {\r\n        return this.setHandlers([handler]);\r\n    }\r\n}\r\n/**\r\n * Base class for run manager in LangChain.\r\n */\r\nclass BaseRunManager {\r\n    constructor(runId, handlers, inheritableHandlers, tags, inheritableTags, metadata, inheritableMetadata, _parentRunId) {\r\n        Object.defineProperty(this, \"runId\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: runId\r\n        });\r\n        Object.defineProperty(this, \"handlers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: handlers\r\n        });\r\n        Object.defineProperty(this, \"inheritableHandlers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: inheritableHandlers\r\n        });\r\n        Object.defineProperty(this, \"tags\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: tags\r\n        });\r\n        Object.defineProperty(this, \"inheritableTags\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: inheritableTags\r\n        });\r\n        Object.defineProperty(this, \"metadata\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: metadata\r\n        });\r\n        Object.defineProperty(this, \"inheritableMetadata\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: inheritableMetadata\r\n        });\r\n        Object.defineProperty(this, \"_parentRunId\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: _parentRunId\r\n        });\r\n    }\r\n    async handleText(text) {\r\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\r\n            try {\r\n                await handler.handleText?.(text, this.runId, this._parentRunId, this.tags);\r\n            }\r\n            catch (err) {\r\n                console.error(`Error in handler ${handler.constructor.name}, handleText: ${err}`);\r\n            }\r\n        }, handler.awaitHandlers)));\r\n    }\r\n}\r\n/**\r\n * Manages callbacks for retriever runs.\r\n */\r\nexport class CallbackManagerForRetrieverRun extends BaseRunManager {\r\n    getChild(tag) {\r\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\r\n        const manager = new CallbackManager(this.runId);\r\n        manager.setHandlers(this.inheritableHandlers);\r\n        manager.addTags(this.inheritableTags);\r\n        manager.addMetadata(this.inheritableMetadata);\r\n        if (tag) {\r\n            manager.addTags([tag], false);\r\n        }\r\n        return manager;\r\n    }\r\n    async handleRetrieverEnd(documents) {\r\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\r\n            if (!handler.ignoreRetriever) {\r\n                try {\r\n                    await handler.handleRetrieverEnd?.(documents, this.runId, this._parentRunId, this.tags);\r\n                }\r\n                catch (err) {\r\n                    console.error(`Error in handler ${handler.constructor.name}, handleRetriever`);\r\n                }\r\n            }\r\n        }, handler.awaitHandlers)));\r\n    }\r\n    async handleRetrieverError(err) {\r\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\r\n            if (!handler.ignoreRetriever) {\r\n                try {\r\n                    await handler.handleRetrieverError?.(err, this.runId, this._parentRunId, this.tags);\r\n                }\r\n                catch (error) {\r\n                    console.error(`Error in handler ${handler.constructor.name}, handleRetrieverError: ${error}`);\r\n                }\r\n            }\r\n        }, handler.awaitHandlers)));\r\n    }\r\n}\r\nexport class CallbackManagerForLLMRun extends BaseRunManager {\r\n    async handleLLMNewToken(token, idx, _runId, _parentRunId, _tags, fields) {\r\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\r\n            if (!handler.ignoreLLM) {\r\n                try {\r\n                    await handler.handleLLMNewToken?.(token, idx ?? { prompt: 0, completion: 0 }, this.runId, this._parentRunId, this.tags, fields);\r\n                }\r\n                catch (err) {\r\n                    console.error(`Error in handler ${handler.constructor.name}, handleLLMNewToken: ${err}`);\r\n                }\r\n            }\r\n        }, handler.awaitHandlers)));\r\n    }\r\n    async handleLLMError(err) {\r\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\r\n            if (!handler.ignoreLLM) {\r\n                try {\r\n                    await handler.handleLLMError?.(err, this.runId, this._parentRunId, this.tags);\r\n                }\r\n                catch (err) {\r\n                    console.error(`Error in handler ${handler.constructor.name}, handleLLMError: ${err}`);\r\n                }\r\n            }\r\n        }, handler.awaitHandlers)));\r\n    }\r\n    async handleLLMEnd(output) {\r\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\r\n            if (!handler.ignoreLLM) {\r\n                try {\r\n                    await handler.handleLLMEnd?.(output, this.runId, this._parentRunId, this.tags);\r\n                }\r\n                catch (err) {\r\n                    console.error(`Error in handler ${handler.constructor.name}, handleLLMEnd: ${err}`);\r\n                }\r\n            }\r\n        }, handler.awaitHandlers)));\r\n    }\r\n}\r\nexport class CallbackManagerForChainRun extends BaseRunManager {\r\n    getChild(tag) {\r\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\r\n        const manager = new CallbackManager(this.runId);\r\n        manager.setHandlers(this.inheritableHandlers);\r\n        manager.addTags(this.inheritableTags);\r\n        manager.addMetadata(this.inheritableMetadata);\r\n        if (tag) {\r\n            manager.addTags([tag], false);\r\n        }\r\n        return manager;\r\n    }\r\n    async handleChainError(err, _runId, _parentRunId, _tags, kwargs) {\r\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\r\n            if (!handler.ignoreChain) {\r\n                try {\r\n                    await handler.handleChainError?.(err, this.runId, this._parentRunId, this.tags, kwargs);\r\n                }\r\n                catch (err) {\r\n                    console.error(`Error in handler ${handler.constructor.name}, handleChainError: ${err}`);\r\n                }\r\n            }\r\n        }, handler.awaitHandlers)));\r\n    }\r\n    async handleChainEnd(output, _runId, _parentRunId, _tags, kwargs) {\r\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\r\n            if (!handler.ignoreChain) {\r\n                try {\r\n                    await handler.handleChainEnd?.(output, this.runId, this._parentRunId, this.tags, kwargs);\r\n                }\r\n                catch (err) {\r\n                    console.error(`Error in handler ${handler.constructor.name}, handleChainEnd: ${err}`);\r\n                }\r\n            }\r\n        }, handler.awaitHandlers)));\r\n    }\r\n    async handleAgentAction(action) {\r\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\r\n            if (!handler.ignoreAgent) {\r\n                try {\r\n                    await handler.handleAgentAction?.(action, this.runId, this._parentRunId, this.tags);\r\n                }\r\n                catch (err) {\r\n                    console.error(`Error in handler ${handler.constructor.name}, handleAgentAction: ${err}`);\r\n                }\r\n            }\r\n        }, handler.awaitHandlers)));\r\n    }\r\n    async handleAgentEnd(action) {\r\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\r\n            if (!handler.ignoreAgent) {\r\n                try {\r\n                    await handler.handleAgentEnd?.(action, this.runId, this._parentRunId, this.tags);\r\n                }\r\n                catch (err) {\r\n                    console.error(`Error in handler ${handler.constructor.name}, handleAgentEnd: ${err}`);\r\n                }\r\n            }\r\n        }, handler.awaitHandlers)));\r\n    }\r\n}\r\nexport class CallbackManagerForToolRun extends BaseRunManager {\r\n    getChild(tag) {\r\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\r\n        const manager = new CallbackManager(this.runId);\r\n        manager.setHandlers(this.inheritableHandlers);\r\n        manager.addTags(this.inheritableTags);\r\n        manager.addMetadata(this.inheritableMetadata);\r\n        if (tag) {\r\n            manager.addTags([tag], false);\r\n        }\r\n        return manager;\r\n    }\r\n    async handleToolError(err) {\r\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\r\n            if (!handler.ignoreAgent) {\r\n                try {\r\n                    await handler.handleToolError?.(err, this.runId, this._parentRunId, this.tags);\r\n                }\r\n                catch (err) {\r\n                    console.error(`Error in handler ${handler.constructor.name}, handleToolError: ${err}`);\r\n                }\r\n            }\r\n        }, handler.awaitHandlers)));\r\n    }\r\n    async handleToolEnd(output) {\r\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\r\n            if (!handler.ignoreAgent) {\r\n                try {\r\n                    await handler.handleToolEnd?.(output, this.runId, this._parentRunId, this.tags);\r\n                }\r\n                catch (err) {\r\n                    console.error(`Error in handler ${handler.constructor.name}, handleToolEnd: ${err}`);\r\n                }\r\n            }\r\n        }, handler.awaitHandlers)));\r\n    }\r\n}\r\nexport class CallbackManager extends BaseCallbackManager {\r\n    constructor(parentRunId) {\r\n        super();\r\n        Object.defineProperty(this, \"handlers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"inheritableHandlers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"tags\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"inheritableTags\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"metadata\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"inheritableMetadata\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"name\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"callback_manager\"\r\n        });\r\n        Object.defineProperty(this, \"_parentRunId\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.handlers = [];\r\n        this.inheritableHandlers = [];\r\n        this._parentRunId = parentRunId;\r\n    }\r\n    async handleLLMStart(llm, prompts, _runId = undefined, _parentRunId = undefined, extraParams = undefined) {\r\n        return Promise.all(prompts.map(async (prompt) => {\r\n            const runId = uuidv4();\r\n            await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\r\n                if (!handler.ignoreLLM) {\r\n                    try {\r\n                        await handler.handleLLMStart?.(llm, [prompt], runId, this._parentRunId, extraParams, this.tags, this.metadata);\r\n                    }\r\n                    catch (err) {\r\n                        console.error(`Error in handler ${handler.constructor.name}, handleLLMStart: ${err}`);\r\n                    }\r\n                }\r\n            }, handler.awaitHandlers)));\r\n            return new CallbackManagerForLLMRun(runId, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\r\n        }));\r\n    }\r\n    async handleChatModelStart(llm, messages, _runId = undefined, _parentRunId = undefined, extraParams = undefined) {\r\n        return Promise.all(messages.map(async (messageGroup) => {\r\n            const runId = uuidv4();\r\n            await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\r\n                if (!handler.ignoreLLM) {\r\n                    try {\r\n                        if (handler.handleChatModelStart)\r\n                            await handler.handleChatModelStart?.(llm, [messageGroup], runId, this._parentRunId, extraParams, this.tags, this.metadata);\r\n                        else if (handler.handleLLMStart) {\r\n                            const messageString = getBufferString(messageGroup);\r\n                            await handler.handleLLMStart?.(llm, [messageString], runId, this._parentRunId, extraParams, this.tags, this.metadata);\r\n                        }\r\n                    }\r\n                    catch (err) {\r\n                        console.error(`Error in handler ${handler.constructor.name}, handleLLMStart: ${err}`);\r\n                    }\r\n                }\r\n            }, handler.awaitHandlers)));\r\n            return new CallbackManagerForLLMRun(runId, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\r\n        }));\r\n    }\r\n    async handleChainStart(chain, inputs, runId = uuidv4(), runType = undefined) {\r\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\r\n            if (!handler.ignoreChain) {\r\n                try {\r\n                    await handler.handleChainStart?.(chain, inputs, runId, this._parentRunId, this.tags, this.metadata, runType);\r\n                }\r\n                catch (err) {\r\n                    console.error(`Error in handler ${handler.constructor.name}, handleChainStart: ${err}`);\r\n                }\r\n            }\r\n        }, handler.awaitHandlers)));\r\n        return new CallbackManagerForChainRun(runId, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\r\n    }\r\n    async handleToolStart(tool, input, runId = uuidv4()) {\r\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\r\n            if (!handler.ignoreAgent) {\r\n                try {\r\n                    await handler.handleToolStart?.(tool, input, runId, this._parentRunId, this.tags, this.metadata);\r\n                }\r\n                catch (err) {\r\n                    console.error(`Error in handler ${handler.constructor.name}, handleToolStart: ${err}`);\r\n                }\r\n            }\r\n        }, handler.awaitHandlers)));\r\n        return new CallbackManagerForToolRun(runId, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\r\n    }\r\n    async handleRetrieverStart(retriever, query, runId = uuidv4(), _parentRunId = undefined) {\r\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\r\n            if (!handler.ignoreRetriever) {\r\n                try {\r\n                    await handler.handleRetrieverStart?.(retriever, query, runId, this._parentRunId, this.tags, this.metadata);\r\n                }\r\n                catch (err) {\r\n                    console.error(`Error in handler ${handler.constructor.name}, handleRetrieverStart: ${err}`);\r\n                }\r\n            }\r\n        }, handler.awaitHandlers)));\r\n        return new CallbackManagerForRetrieverRun(runId, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\r\n    }\r\n    addHandler(handler, inherit = true) {\r\n        this.handlers.push(handler);\r\n        if (inherit) {\r\n            this.inheritableHandlers.push(handler);\r\n        }\r\n    }\r\n    removeHandler(handler) {\r\n        this.handlers = this.handlers.filter((_handler) => _handler !== handler);\r\n        this.inheritableHandlers = this.inheritableHandlers.filter((_handler) => _handler !== handler);\r\n    }\r\n    setHandlers(handlers, inherit = true) {\r\n        this.handlers = [];\r\n        this.inheritableHandlers = [];\r\n        for (const handler of handlers) {\r\n            this.addHandler(handler, inherit);\r\n        }\r\n    }\r\n    addTags(tags, inherit = true) {\r\n        this.removeTags(tags); // Remove duplicates\r\n        this.tags.push(...tags);\r\n        if (inherit) {\r\n            this.inheritableTags.push(...tags);\r\n        }\r\n    }\r\n    removeTags(tags) {\r\n        this.tags = this.tags.filter((tag) => !tags.includes(tag));\r\n        this.inheritableTags = this.inheritableTags.filter((tag) => !tags.includes(tag));\r\n    }\r\n    addMetadata(metadata, inherit = true) {\r\n        this.metadata = { ...this.metadata, ...metadata };\r\n        if (inherit) {\r\n            this.inheritableMetadata = { ...this.inheritableMetadata, ...metadata };\r\n        }\r\n    }\r\n    removeMetadata(metadata) {\r\n        for (const key of Object.keys(metadata)) {\r\n            delete this.metadata[key];\r\n            delete this.inheritableMetadata[key];\r\n        }\r\n    }\r\n    copy(additionalHandlers = [], inherit = true) {\r\n        const manager = new CallbackManager(this._parentRunId);\r\n        for (const handler of this.handlers) {\r\n            const inheritable = this.inheritableHandlers.includes(handler);\r\n            manager.addHandler(handler, inheritable);\r\n        }\r\n        for (const tag of this.tags) {\r\n            const inheritable = this.inheritableTags.includes(tag);\r\n            manager.addTags([tag], inheritable);\r\n        }\r\n        for (const key of Object.keys(this.metadata)) {\r\n            const inheritable = Object.keys(this.inheritableMetadata).includes(key);\r\n            manager.addMetadata({ [key]: this.metadata[key] }, inheritable);\r\n        }\r\n        for (const handler of additionalHandlers) {\r\n            if (\r\n            // Prevent multiple copies of console_callback_handler\r\n            manager.handlers\r\n                .filter((h) => h.name === \"console_callback_handler\")\r\n                .some((h) => h.name === handler.name)) {\r\n                continue;\r\n            }\r\n            manager.addHandler(handler, inherit);\r\n        }\r\n        return manager;\r\n    }\r\n    static fromHandlers(handlers) {\r\n        class Handler extends BaseCallbackHandler {\r\n            constructor() {\r\n                super();\r\n                Object.defineProperty(this, \"name\", {\r\n                    enumerable: true,\r\n                    configurable: true,\r\n                    writable: true,\r\n                    value: uuidv4()\r\n                });\r\n                Object.assign(this, handlers);\r\n            }\r\n        }\r\n        const manager = new this();\r\n        manager.addHandler(new Handler());\r\n        return manager;\r\n    }\r\n    static async configure(inheritableHandlers, localHandlers, inheritableTags, localTags, inheritableMetadata, localMetadata, options) {\r\n        let callbackManager;\r\n        if (inheritableHandlers || localHandlers) {\r\n            if (Array.isArray(inheritableHandlers) || !inheritableHandlers) {\r\n                callbackManager = new CallbackManager();\r\n                callbackManager.setHandlers(inheritableHandlers?.map(ensureHandler) ?? [], true);\r\n            }\r\n            else {\r\n                callbackManager = inheritableHandlers;\r\n            }\r\n            callbackManager = callbackManager.copy(Array.isArray(localHandlers)\r\n                ? localHandlers.map(ensureHandler)\r\n                : localHandlers?.handlers, false);\r\n        }\r\n        const verboseEnabled = getEnvironmentVariable(\"LANGCHAIN_VERBOSE\") || options?.verbose;\r\n        const tracingV2Enabled = getEnvironmentVariable(\"LANGCHAIN_TRACING_V2\") === \"true\";\r\n        const tracingEnabled = tracingV2Enabled ||\r\n            (getEnvironmentVariable(\"LANGCHAIN_TRACING\") ?? false);\r\n        if (verboseEnabled || tracingEnabled) {\r\n            if (!callbackManager) {\r\n                callbackManager = new CallbackManager();\r\n            }\r\n            if (verboseEnabled &&\r\n                !callbackManager.handlers.some((handler) => handler.name === ConsoleCallbackHandler.prototype.name)) {\r\n                const consoleHandler = new ConsoleCallbackHandler();\r\n                callbackManager.addHandler(consoleHandler, true);\r\n            }\r\n            if (tracingEnabled &&\r\n                !callbackManager.handlers.some((handler) => handler.name === \"langchain_tracer\")) {\r\n                if (tracingV2Enabled) {\r\n                    callbackManager.addHandler(await getTracingV2CallbackHandler(), true);\r\n                }\r\n                else {\r\n                    const session = getEnvironmentVariable(\"LANGCHAIN_PROJECT\") &&\r\n                        getEnvironmentVariable(\"LANGCHAIN_SESSION\");\r\n                    callbackManager.addHandler(await getTracingCallbackHandler(session), true);\r\n                }\r\n            }\r\n        }\r\n        if (inheritableTags || localTags) {\r\n            if (callbackManager) {\r\n                callbackManager.addTags(inheritableTags ?? []);\r\n                callbackManager.addTags(localTags ?? [], false);\r\n            }\r\n        }\r\n        if (inheritableMetadata || localMetadata) {\r\n            if (callbackManager) {\r\n                callbackManager.addMetadata(inheritableMetadata ?? {});\r\n                callbackManager.addMetadata(localMetadata ?? {}, false);\r\n            }\r\n        }\r\n        return callbackManager;\r\n    }\r\n}\r\nfunction ensureHandler(handler) {\r\n    if (\"name\" in handler) {\r\n        return handler;\r\n    }\r\n    return BaseCallbackHandler.fromMethods(handler);\r\n}\r\nexport class TraceGroup {\r\n    constructor(groupName, options) {\r\n        Object.defineProperty(this, \"groupName\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: groupName\r\n        });\r\n        Object.defineProperty(this, \"options\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: options\r\n        });\r\n        Object.defineProperty(this, \"runManager\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    async getTraceGroupCallbackManager(group_name, inputs, options) {\r\n        const cb = new LangChainTracer(options);\r\n        const cm = await CallbackManager.configure([cb]);\r\n        const runManager = await cm?.handleChainStart({\r\n            lc: 1,\r\n            type: \"not_implemented\",\r\n            id: [\"langchain\", \"callbacks\", \"groups\", group_name],\r\n        }, inputs ?? {});\r\n        if (!runManager) {\r\n            throw new Error(\"Failed to create run group callback manager.\");\r\n        }\r\n        return runManager;\r\n    }\r\n    async start(inputs) {\r\n        if (!this.runManager) {\r\n            this.runManager = await this.getTraceGroupCallbackManager(this.groupName, inputs, this.options);\r\n        }\r\n        return this.runManager.getChild();\r\n    }\r\n    async error(err) {\r\n        if (this.runManager) {\r\n            await this.runManager.handleChainError(err);\r\n            this.runManager = undefined;\r\n        }\r\n    }\r\n    async end(output) {\r\n        if (this.runManager) {\r\n            await this.runManager.handleChainEnd(output ?? {});\r\n            this.runManager = undefined;\r\n        }\r\n    }\r\n}\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nfunction _coerceToDict(value, defaultKey) {\r\n    return value && !Array.isArray(value) && typeof value === \"object\"\r\n        ? value\r\n        : { [defaultKey]: value };\r\n}\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport async function traceAsGroup(groupOptions, enclosedCode, ...args) {\r\n    const traceGroup = new TraceGroup(groupOptions.name, groupOptions);\r\n    const callbackManager = await traceGroup.start({ ...args });\r\n    try {\r\n        const result = await enclosedCode(callbackManager, ...args);\r\n        await traceGroup.end(_coerceToDict(result, \"output\"));\r\n        return result;\r\n    }\r\n    catch (err) {\r\n        await traceGroup.error(err);\r\n        throw err;\r\n    }\r\n}\r\n", "// @ts-nocheck\r\nimport { PatchError, _deepClone, isInteger, unescapePathComponent, hasUndefined, } from \"./helpers.js\";\r\nexport const JsonPatchError = PatchError;\r\nexport const deepClone = _deepClone;\r\n/* We use a Javascript hash to store each\r\n function. Each hash entry (property) uses\r\n the operation identifiers specified in rfc6902.\r\n In this way, we can map each patch operation\r\n to its dedicated function in efficient way.\r\n */\r\n/* The operations applicable to an object */\r\nconst objOps = {\r\n    add: function (obj, key, document) {\r\n        obj[key] = this.value;\r\n        return { newDocument: document };\r\n    },\r\n    remove: function (obj, key, document) {\r\n        var removed = obj[key];\r\n        delete obj[key];\r\n        return { newDocument: document, removed };\r\n    },\r\n    replace: function (obj, key, document) {\r\n        var removed = obj[key];\r\n        obj[key] = this.value;\r\n        return { newDocument: document, removed };\r\n    },\r\n    move: function (obj, key, document) {\r\n        /* in case move target overwrites an existing value,\r\n        return the removed value, this can be taxing performance-wise,\r\n        and is potentially unneeded */\r\n        let removed = getValueByPointer(document, this.path);\r\n        if (removed) {\r\n            removed = _deepClone(removed);\r\n        }\r\n        const originalValue = applyOperation(document, {\r\n            op: \"remove\",\r\n            path: this.from,\r\n        }).removed;\r\n        applyOperation(document, {\r\n            op: \"add\",\r\n            path: this.path,\r\n            value: originalValue,\r\n        });\r\n        return { newDocument: document, removed };\r\n    },\r\n    copy: function (obj, key, document) {\r\n        const valueToCopy = getValueByPointer(document, this.from);\r\n        // enforce copy by value so further operations don't affect source (see issue #177)\r\n        applyOperation(document, {\r\n            op: \"add\",\r\n            path: this.path,\r\n            value: _deepClone(valueToCopy),\r\n        });\r\n        return { newDocument: document };\r\n    },\r\n    test: function (obj, key, document) {\r\n        return { newDocument: document, test: _areEquals(obj[key], this.value) };\r\n    },\r\n    _get: function (obj, key, document) {\r\n        this.value = obj[key];\r\n        return { newDocument: document };\r\n    },\r\n};\r\n/* The operations applicable to an array. Many are the same as for the object */\r\nvar arrOps = {\r\n    add: function (arr, i, document) {\r\n        if (isInteger(i)) {\r\n            arr.splice(i, 0, this.value);\r\n        }\r\n        else {\r\n            // array props\r\n            arr[i] = this.value;\r\n        }\r\n        // this may be needed when using '-' in an array\r\n        return { newDocument: document, index: i };\r\n    },\r\n    remove: function (arr, i, document) {\r\n        var removedList = arr.splice(i, 1);\r\n        return { newDocument: document, removed: removedList[0] };\r\n    },\r\n    replace: function (arr, i, document) {\r\n        var removed = arr[i];\r\n        arr[i] = this.value;\r\n        return { newDocument: document, removed };\r\n    },\r\n    move: objOps.move,\r\n    copy: objOps.copy,\r\n    test: objOps.test,\r\n    _get: objOps._get,\r\n};\r\n/**\r\n * Retrieves a value from a JSON document by a JSON pointer.\r\n * Returns the value.\r\n *\r\n * @param document The document to get the value from\r\n * @param pointer an escaped JSON pointer\r\n * @return The retrieved value\r\n */\r\nexport function getValueByPointer(document, pointer) {\r\n    if (pointer == \"\") {\r\n        return document;\r\n    }\r\n    var getOriginalDestination = { op: \"_get\", path: pointer };\r\n    applyOperation(document, getOriginalDestination);\r\n    return getOriginalDestination.value;\r\n}\r\n/**\r\n * Apply a single JSON Patch Operation on a JSON document.\r\n * Returns the {newDocument, result} of the operation.\r\n * It modifies the `document` and `operation` objects - it gets the values by reference.\r\n * If you would like to avoid touching your values, clone them:\r\n * `jsonpatch.applyOperation(document, jsonpatch._deepClone(operation))`.\r\n *\r\n * @param document The document to patch\r\n * @param operation The operation to apply\r\n * @param validateOperation `false` is without validation, `true` to use default jsonpatch's validation, or you can pass a `validateOperation` callback to be used for validation.\r\n * @param mutateDocument Whether to mutate the original document or clone it before applying\r\n * @param banPrototypeModifications Whether to ban modifications to `__proto__`, defaults to `true`.\r\n * @return `{newDocument, result}` after the operation\r\n */\r\nexport function applyOperation(document, operation, validateOperation = false, mutateDocument = true, banPrototypeModifications = true, index = 0) {\r\n    if (validateOperation) {\r\n        if (typeof validateOperation == \"function\") {\r\n            validateOperation(operation, 0, document, operation.path);\r\n        }\r\n        else {\r\n            validator(operation, 0);\r\n        }\r\n    }\r\n    /* ROOT OPERATIONS */\r\n    if (operation.path === \"\") {\r\n        let returnValue = { newDocument: document };\r\n        if (operation.op === \"add\") {\r\n            returnValue.newDocument = operation.value;\r\n            return returnValue;\r\n        }\r\n        else if (operation.op === \"replace\") {\r\n            returnValue.newDocument = operation.value;\r\n            returnValue.removed = document; //document we removed\r\n            return returnValue;\r\n        }\r\n        else if (operation.op === \"move\" || operation.op === \"copy\") {\r\n            // it's a move or copy to root\r\n            returnValue.newDocument = getValueByPointer(document, operation.from); // get the value by json-pointer in `from` field\r\n            if (operation.op === \"move\") {\r\n                // report removed item\r\n                returnValue.removed = document;\r\n            }\r\n            return returnValue;\r\n        }\r\n        else if (operation.op === \"test\") {\r\n            returnValue.test = _areEquals(document, operation.value);\r\n            if (returnValue.test === false) {\r\n                throw new JsonPatchError(\"Test operation failed\", \"TEST_OPERATION_FAILED\", index, operation, document);\r\n            }\r\n            returnValue.newDocument = document;\r\n            return returnValue;\r\n        }\r\n        else if (operation.op === \"remove\") {\r\n            // a remove on root\r\n            returnValue.removed = document;\r\n            returnValue.newDocument = null;\r\n            return returnValue;\r\n        }\r\n        else if (operation.op === \"_get\") {\r\n            operation.value = document;\r\n            return returnValue;\r\n        }\r\n        else {\r\n            /* bad operation */\r\n            if (validateOperation) {\r\n                throw new JsonPatchError(\"Operation `op` property is not one of operations defined in RFC-6902\", \"OPERATION_OP_INVALID\", index, operation, document);\r\n            }\r\n            else {\r\n                return returnValue;\r\n            }\r\n        }\r\n    } /* END ROOT OPERATIONS */\r\n    else {\r\n        if (!mutateDocument) {\r\n            document = _deepClone(document);\r\n        }\r\n        const path = operation.path || \"\";\r\n        const keys = path.split(\"/\");\r\n        let obj = document;\r\n        let t = 1; //skip empty element - http://jsperf.com/to-shift-or-not-to-shift\r\n        let len = keys.length;\r\n        let existingPathFragment = undefined;\r\n        let key;\r\n        let validateFunction;\r\n        if (typeof validateOperation == \"function\") {\r\n            validateFunction = validateOperation;\r\n        }\r\n        else {\r\n            validateFunction = validator;\r\n        }\r\n        while (true) {\r\n            key = keys[t];\r\n            if (key && key.indexOf(\"~\") != -1) {\r\n                key = unescapePathComponent(key);\r\n            }\r\n            if (banPrototypeModifications &&\r\n                (key == \"__proto__\" ||\r\n                    (key == \"prototype\" && t > 0 && keys[t - 1] == \"constructor\"))) {\r\n                throw new TypeError(\"JSON-Patch: modifying `__proto__` or `constructor/prototype` prop is banned for security reasons, if this was on purpose, please set `banPrototypeModifications` flag false and pass it to this function. More info in fast-json-patch README\");\r\n            }\r\n            if (validateOperation) {\r\n                if (existingPathFragment === undefined) {\r\n                    if (obj[key] === undefined) {\r\n                        existingPathFragment = keys.slice(0, t).join(\"/\");\r\n                    }\r\n                    else if (t == len - 1) {\r\n                        existingPathFragment = operation.path;\r\n                    }\r\n                    if (existingPathFragment !== undefined) {\r\n                        validateFunction(operation, 0, document, existingPathFragment);\r\n                    }\r\n                }\r\n            }\r\n            t++;\r\n            if (Array.isArray(obj)) {\r\n                if (key === \"-\") {\r\n                    key = obj.length;\r\n                }\r\n                else {\r\n                    if (validateOperation && !isInteger(key)) {\r\n                        throw new JsonPatchError(\"Expected an unsigned base-10 integer value, making the new referenced value the array element with the zero-based index\", \"OPERATION_PATH_ILLEGAL_ARRAY_INDEX\", index, operation, document);\r\n                    } // only parse key when it's an integer for `arr.prop` to work\r\n                    else if (isInteger(key)) {\r\n                        key = ~~key;\r\n                    }\r\n                }\r\n                if (t >= len) {\r\n                    if (validateOperation && operation.op === \"add\" && key > obj.length) {\r\n                        throw new JsonPatchError(\"The specified index MUST NOT be greater than the number of elements in the array\", \"OPERATION_VALUE_OUT_OF_BOUNDS\", index, operation, document);\r\n                    }\r\n                    const returnValue = arrOps[operation.op].call(operation, obj, key, document); // Apply patch\r\n                    if (returnValue.test === false) {\r\n                        throw new JsonPatchError(\"Test operation failed\", \"TEST_OPERATION_FAILED\", index, operation, document);\r\n                    }\r\n                    return returnValue;\r\n                }\r\n            }\r\n            else {\r\n                if (t >= len) {\r\n                    const returnValue = objOps[operation.op].call(operation, obj, key, document); // Apply patch\r\n                    if (returnValue.test === false) {\r\n                        throw new JsonPatchError(\"Test operation failed\", \"TEST_OPERATION_FAILED\", index, operation, document);\r\n                    }\r\n                    return returnValue;\r\n                }\r\n            }\r\n            obj = obj[key];\r\n            // If we have more keys in the path, but the next value isn't a non-null object,\r\n            // throw an OPERATION_PATH_UNRESOLVABLE error instead of iterating again.\r\n            if (validateOperation && t < len && (!obj || typeof obj !== \"object\")) {\r\n                throw new JsonPatchError(\"Cannot perform operation at the desired path\", \"OPERATION_PATH_UNRESOLVABLE\", index, operation, document);\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * Apply a full JSON Patch array on a JSON document.\r\n * Returns the {newDocument, result} of the patch.\r\n * It modifies the `document` object and `patch` - it gets the values by reference.\r\n * If you would like to avoid touching your values, clone them:\r\n * `jsonpatch.applyPatch(document, jsonpatch._deepClone(patch))`.\r\n *\r\n * @param document The document to patch\r\n * @param patch The patch to apply\r\n * @param validateOperation `false` is without validation, `true` to use default jsonpatch's validation, or you can pass a `validateOperation` callback to be used for validation.\r\n * @param mutateDocument Whether to mutate the original document or clone it before applying\r\n * @param banPrototypeModifications Whether to ban modifications to `__proto__`, defaults to `true`.\r\n * @return An array of `{newDocument, result}` after the patch\r\n */\r\nexport function applyPatch(document, patch, validateOperation, mutateDocument = true, banPrototypeModifications = true) {\r\n    if (validateOperation) {\r\n        if (!Array.isArray(patch)) {\r\n            throw new JsonPatchError(\"Patch sequence must be an array\", \"SEQUENCE_NOT_AN_ARRAY\");\r\n        }\r\n    }\r\n    if (!mutateDocument) {\r\n        document = _deepClone(document);\r\n    }\r\n    const results = new Array(patch.length);\r\n    for (let i = 0, length = patch.length; i < length; i++) {\r\n        // we don't need to pass mutateDocument argument because if it was true, we already deep cloned the object, we'll just pass `true`\r\n        results[i] = applyOperation(document, patch[i], validateOperation, true, banPrototypeModifications, i);\r\n        document = results[i].newDocument; // in case root was replaced\r\n    }\r\n    results.newDocument = document;\r\n    return results;\r\n}\r\n/**\r\n * Apply a single JSON Patch Operation on a JSON document.\r\n * Returns the updated document.\r\n * Suitable as a reducer.\r\n *\r\n * @param document The document to patch\r\n * @param operation The operation to apply\r\n * @return The updated document\r\n */\r\nexport function applyReducer(document, operation, index) {\r\n    const operationResult = applyOperation(document, operation);\r\n    if (operationResult.test === false) {\r\n        // failed test\r\n        throw new JsonPatchError(\"Test operation failed\", \"TEST_OPERATION_FAILED\", index, operation, document);\r\n    }\r\n    return operationResult.newDocument;\r\n}\r\n/**\r\n * Validates a single operation. Called from `jsonpatch.validate`. Throws `JsonPatchError` in case of an error.\r\n * @param {object} operation - operation object (patch)\r\n * @param {number} index - index of operation in the sequence\r\n * @param {object} [document] - object where the operation is supposed to be applied\r\n * @param {string} [existingPathFragment] - comes along with `document`\r\n */\r\nexport function validator(operation, index, document, existingPathFragment) {\r\n    if (typeof operation !== \"object\" ||\r\n        operation === null ||\r\n        Array.isArray(operation)) {\r\n        throw new JsonPatchError(\"Operation is not an object\", \"OPERATION_NOT_AN_OBJECT\", index, operation, document);\r\n    }\r\n    else if (!objOps[operation.op]) {\r\n        throw new JsonPatchError(\"Operation `op` property is not one of operations defined in RFC-6902\", \"OPERATION_OP_INVALID\", index, operation, document);\r\n    }\r\n    else if (typeof operation.path !== \"string\") {\r\n        throw new JsonPatchError(\"Operation `path` property is not a string\", \"OPERATION_PATH_INVALID\", index, operation, document);\r\n    }\r\n    else if (operation.path.indexOf(\"/\") !== 0 && operation.path.length > 0) {\r\n        // paths that aren't empty string should start with \"/\"\r\n        throw new JsonPatchError('Operation `path` property must start with \"/\"', \"OPERATION_PATH_INVALID\", index, operation, document);\r\n    }\r\n    else if ((operation.op === \"move\" || operation.op === \"copy\") &&\r\n        typeof operation.from !== \"string\") {\r\n        throw new JsonPatchError(\"Operation `from` property is not present (applicable in `move` and `copy` operations)\", \"OPERATION_FROM_REQUIRED\", index, operation, document);\r\n    }\r\n    else if ((operation.op === \"add\" ||\r\n        operation.op === \"replace\" ||\r\n        operation.op === \"test\") &&\r\n        operation.value === undefined) {\r\n        throw new JsonPatchError(\"Operation `value` property is not present (applicable in `add`, `replace` and `test` operations)\", \"OPERATION_VALUE_REQUIRED\", index, operation, document);\r\n    }\r\n    else if ((operation.op === \"add\" ||\r\n        operation.op === \"replace\" ||\r\n        operation.op === \"test\") &&\r\n        hasUndefined(operation.value)) {\r\n        throw new JsonPatchError(\"Operation `value` property is not present (applicable in `add`, `replace` and `test` operations)\", \"OPERATION_VALUE_CANNOT_CONTAIN_UNDEFINED\", index, operation, document);\r\n    }\r\n    else if (document) {\r\n        if (operation.op == \"add\") {\r\n            var pathLen = operation.path.split(\"/\").length;\r\n            var existingPathLen = existingPathFragment.split(\"/\").length;\r\n            if (pathLen !== existingPathLen + 1 && pathLen !== existingPathLen) {\r\n                throw new JsonPatchError(\"Cannot perform an `add` operation at the desired path\", \"OPERATION_PATH_CANNOT_ADD\", index, operation, document);\r\n            }\r\n        }\r\n        else if (operation.op === \"replace\" ||\r\n            operation.op === \"remove\" ||\r\n            operation.op === \"_get\") {\r\n            if (operation.path !== existingPathFragment) {\r\n                throw new JsonPatchError(\"Cannot perform the operation at a path that does not exist\", \"OPERATION_PATH_UNRESOLVABLE\", index, operation, document);\r\n            }\r\n        }\r\n        else if (operation.op === \"move\" || operation.op === \"copy\") {\r\n            var existingValue = {\r\n                op: \"_get\",\r\n                path: operation.from,\r\n                value: undefined,\r\n            };\r\n            var error = validate([existingValue], document);\r\n            if (error && error.name === \"OPERATION_PATH_UNRESOLVABLE\") {\r\n                throw new JsonPatchError(\"Cannot perform the operation from a path that does not exist\", \"OPERATION_FROM_UNRESOLVABLE\", index, operation, document);\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * Validates a sequence of operations. If `document` parameter is provided, the sequence is additionally validated against the object document.\r\n * If error is encountered, returns a JsonPatchError object\r\n * @param sequence\r\n * @param document\r\n * @returns {JsonPatchError|undefined}\r\n */\r\nexport function validate(sequence, document, externalValidator) {\r\n    try {\r\n        if (!Array.isArray(sequence)) {\r\n            throw new JsonPatchError(\"Patch sequence must be an array\", \"SEQUENCE_NOT_AN_ARRAY\");\r\n        }\r\n        if (document) {\r\n            //clone document and sequence so that we can safely try applying operations\r\n            applyPatch(_deepClone(document), _deepClone(sequence), externalValidator || true);\r\n        }\r\n        else {\r\n            externalValidator = externalValidator || validator;\r\n            for (var i = 0; i < sequence.length; i++) {\r\n                externalValidator(sequence[i], i, document, undefined);\r\n            }\r\n        }\r\n    }\r\n    catch (e) {\r\n        if (e instanceof JsonPatchError) {\r\n            return e;\r\n        }\r\n        else {\r\n            throw e;\r\n        }\r\n    }\r\n}\r\n// based on https://github.com/epoberezkin/fast-deep-equal\r\n// MIT License\r\n// Copyright (c) 2017 Evgeny Poberezkin\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n// The above copyright notice and this permission notice shall be included in all\r\n// copies or substantial portions of the Software.\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n// SOFTWARE.\r\nexport function _areEquals(a, b) {\r\n    if (a === b)\r\n        return true;\r\n    if (a && b && typeof a == \"object\" && typeof b == \"object\") {\r\n        var arrA = Array.isArray(a), arrB = Array.isArray(b), i, length, key;\r\n        if (arrA && arrB) {\r\n            length = a.length;\r\n            if (length != b.length)\r\n                return false;\r\n            for (i = length; i-- !== 0;)\r\n                if (!_areEquals(a[i], b[i]))\r\n                    return false;\r\n            return true;\r\n        }\r\n        if (arrA != arrB)\r\n            return false;\r\n        var keys = Object.keys(a);\r\n        length = keys.length;\r\n        if (length !== Object.keys(b).length)\r\n            return false;\r\n        for (i = length; i-- !== 0;)\r\n            if (!b.hasOwnProperty(keys[i]))\r\n                return false;\r\n        for (i = length; i-- !== 0;) {\r\n            key = keys[i];\r\n            if (!_areEquals(a[key], b[key]))\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n    return a !== a && b !== b;\r\n}\r\n", "// @ts-nocheck\r\n// Inlined because of ESM import issues\r\n/*!\r\n * https://github.com/Starcounter-Jack/JSON-Patch\r\n * (c) 2017-2022 Joachim Wester\r\n * MIT licensed\r\n */\r\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\r\nexport function hasOwnProperty(obj, key) {\r\n    return _hasOwnProperty.call(obj, key);\r\n}\r\nexport function _objectKeys(obj) {\r\n    if (Array.isArray(obj)) {\r\n        const keys = new Array(obj.length);\r\n        for (let k = 0; k < keys.length; k++) {\r\n            keys[k] = \"\" + k;\r\n        }\r\n        return keys;\r\n    }\r\n    if (Object.keys) {\r\n        return Object.keys(obj);\r\n    }\r\n    let keys = [];\r\n    for (let i in obj) {\r\n        if (hasOwnProperty(obj, i)) {\r\n            keys.push(i);\r\n        }\r\n    }\r\n    return keys;\r\n}\r\n/**\r\n * Deeply clone the object.\r\n * https://jsperf.com/deep-copy-vs-json-stringify-json-parse/25 (recursiveDeepCopy)\r\n * @param  {any} obj value to clone\r\n * @return {any} cloned obj\r\n */\r\nexport function _deepClone(obj) {\r\n    switch (typeof obj) {\r\n        case \"object\":\r\n            return JSON.parse(JSON.stringify(obj)); //Faster than ES5 clone - http://jsperf.com/deep-cloning-of-objects/5\r\n        case \"undefined\":\r\n            return null; //this is how JSON.stringify behaves for array items\r\n        default:\r\n            return obj; //no need to clone primitives\r\n    }\r\n}\r\n//3x faster than cached /^\\d+$/.test(str)\r\nexport function isInteger(str) {\r\n    let i = 0;\r\n    const len = str.length;\r\n    let charCode;\r\n    while (i < len) {\r\n        charCode = str.charCodeAt(i);\r\n        if (charCode >= 48 && charCode <= 57) {\r\n            i++;\r\n            continue;\r\n        }\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Escapes a json pointer path\r\n * @param path The raw pointer\r\n * @return the Escaped path\r\n */\r\nexport function escapePathComponent(path) {\r\n    if (path.indexOf(\"/\") === -1 && path.indexOf(\"~\") === -1)\r\n        return path;\r\n    return path.replace(/~/g, \"~0\").replace(/\\//g, \"~1\");\r\n}\r\n/**\r\n * Unescapes a json pointer path\r\n * @param path The escaped pointer\r\n * @return The unescaped path\r\n */\r\nexport function unescapePathComponent(path) {\r\n    return path.replace(/~1/g, \"/\").replace(/~0/g, \"~\");\r\n}\r\nexport function _getPathRecursive(root, obj) {\r\n    let found;\r\n    for (let key in root) {\r\n        if (hasOwnProperty(root, key)) {\r\n            if (root[key] === obj) {\r\n                return escapePathComponent(key) + \"/\";\r\n            }\r\n            else if (typeof root[key] === \"object\") {\r\n                found = _getPathRecursive(root[key], obj);\r\n                if (found != \"\") {\r\n                    return escapePathComponent(key) + \"/\" + found;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return \"\";\r\n}\r\nexport function getPath(root, obj) {\r\n    if (root === obj) {\r\n        return \"/\";\r\n    }\r\n    const path = _getPathRecursive(root, obj);\r\n    if (path === \"\") {\r\n        throw new Error(\"Object not found in root\");\r\n    }\r\n    return `/${path}`;\r\n}\r\n/**\r\n * Recursively checks whether an object has any undefined values inside.\r\n */\r\nexport function hasUndefined(obj) {\r\n    if (obj === undefined) {\r\n        return true;\r\n    }\r\n    if (obj) {\r\n        if (Array.isArray(obj)) {\r\n            for (let i = 0, len = obj.length; i < len; i++) {\r\n                if (hasUndefined(obj[i])) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        else if (typeof obj === \"object\") {\r\n            const objKeys = _objectKeys(obj);\r\n            const objKeysLength = objKeys.length;\r\n            for (var i = 0; i < objKeysLength; i++) {\r\n                if (hasUndefined(obj[objKeys[i]])) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction patchErrorMessageFormatter(message, args) {\r\n    const messageParts = [message];\r\n    for (const key in args) {\r\n        const value = typeof args[key] === \"object\"\r\n            ? JSON.stringify(args[key], null, 2)\r\n            : args[key]; // pretty print\r\n        if (typeof value !== \"undefined\") {\r\n            messageParts.push(`${key}: ${value}`);\r\n        }\r\n    }\r\n    return messageParts.join(\"\\n\");\r\n}\r\nexport class PatchError extends Error {\r\n    constructor(message, name, index, operation, tree) {\r\n        super(patchErrorMessageFormatter(message, { name, index, operation, tree }));\r\n        Object.defineProperty(this, \"name\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: name\r\n        });\r\n        Object.defineProperty(this, \"index\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: index\r\n        });\r\n        Object.defineProperty(this, \"operation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: operation\r\n        });\r\n        Object.defineProperty(this, \"tree\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: tree\r\n        });\r\n        Object.setPrototypeOf(this, new.target.prototype); // restore prototype chain, see https://stackoverflow.com/a/48342359\r\n        this.message = patchErrorMessageFormatter(message, {\r\n            name,\r\n            index,\r\n            operation,\r\n            tree,\r\n        });\r\n    }\r\n}\r\n", "export * from \"./src/core.js\";\r\nexport { PatchError as JsonPatchError, _deepClone as deepClone, escapePathComponent, unescapePathComponent, } from \"./src/helpers.js\";\r\n/**\r\n * Default export for backwards compat\r\n */\r\nimport * as core from \"./src/core.js\";\r\nimport { PatchError as JsonPatchError, _deepClone as deepClone, escapePathComponent, unescapePathComponent, } from \"./src/helpers.js\";\r\nexport default {\r\n    ...core,\r\n    // ...duplex,\r\n    JsonPatchError,\r\n    deepClone,\r\n    escapePathComponent,\r\n    unescapePathComponent,\r\n};\r\n", "/*\r\n * Support async iterator syntax for ReadableStreams in all environments.\r\n * Source: https://github.com/MattiasBuelens/web-streams-polyfill/pull/122#issuecomment-1627354490\r\n */\r\nexport class IterableReadableStream extends ReadableStream {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"reader\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    ensureReader() {\r\n        if (!this.reader) {\r\n            this.reader = this.getReader();\r\n        }\r\n    }\r\n    async next() {\r\n        this.ensureReader();\r\n        try {\r\n            const result = await this.reader.read();\r\n            if (result.done)\r\n                this.reader.releaseLock(); // release lock when stream becomes closed\r\n            return result;\r\n        }\r\n        catch (e) {\r\n            this.reader.releaseLock(); // release lock when stream becomes errored\r\n            throw e;\r\n        }\r\n    }\r\n    async return() {\r\n        this.ensureReader();\r\n        const cancelPromise = this.reader.cancel(); // cancel first, but don't await yet\r\n        this.reader.releaseLock(); // release lock first\r\n        await cancelPromise; // now await it\r\n        return { done: true, value: undefined }; // This cast fixes TS typing, and convention is to ignore chunk value anyway\r\n    }\r\n    [Symbol.asyncIterator]() {\r\n        return this;\r\n    }\r\n    static fromReadableStream(stream) {\r\n        // From https://developer.mozilla.org/en-US/docs/Web/API/Streams_API/Using_readable_streams#reading_the_stream\r\n        const reader = stream.getReader();\r\n        return new IterableReadableStream({\r\n            start(controller) {\r\n                return pump();\r\n                function pump() {\r\n                    return reader.read().then(({ done, value }) => {\r\n                        // When no more data needs to be consumed, close the stream\r\n                        if (done) {\r\n                            controller.close();\r\n                            return;\r\n                        }\r\n                        // Enqueue the next data chunk into our target stream\r\n                        controller.enqueue(value);\r\n                        return pump();\r\n                    });\r\n                }\r\n            },\r\n        });\r\n    }\r\n    static fromAsyncGenerator(generator) {\r\n        return new IterableReadableStream({\r\n            async pull(controller) {\r\n                const { value, done } = await generator.next();\r\n                if (done) {\r\n                    controller.close();\r\n                }\r\n                else if (value) {\r\n                    controller.enqueue(value);\r\n                }\r\n            },\r\n        });\r\n    }\r\n}\r\n", "import { applyPatch, } from \"../../util/fast-json-patch/index.js\";\r\nimport { BaseTracer } from \"./tracer.js\";\r\nimport { IterableReadableStream } from \"../../util/stream.js\";\r\n/**\r\n * List of jsonpatch JSONPatchOperations, which describe how to create the run state\r\n * from an empty dict. This is the minimal representation of the log, designed to\r\n * be serialized as JSON and sent over the wire to reconstruct the log on the other\r\n * side. Reconstruction of the state can be done with any jsonpatch-compliant library,\r\n * see https://jsonpatch.com for more information.\r\n */\r\nexport class RunLogPatch {\r\n    constructor(fields) {\r\n        Object.defineProperty(this, \"ops\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.ops = fields.ops;\r\n    }\r\n    concat(other) {\r\n        const ops = this.ops.concat(other.ops);\r\n        const states = applyPatch({}, ops);\r\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\r\n        return new RunLog({\r\n            ops,\r\n            state: states[states.length - 1].newDocument,\r\n        });\r\n    }\r\n}\r\nexport class RunLog extends RunLogPatch {\r\n    constructor(fields) {\r\n        super(fields);\r\n        Object.defineProperty(this, \"state\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.state = fields.state;\r\n    }\r\n    concat(other) {\r\n        const ops = this.ops.concat(other.ops);\r\n        const states = applyPatch(this.state, other.ops);\r\n        return new RunLog({ ops, state: states[states.length - 1].newDocument });\r\n    }\r\n}\r\n/**\r\n * Class that extends the `BaseTracer` class from the\r\n * `langchain.callbacks.tracers.base` module. It represents a callback\r\n * handler that logs the execution of runs and emits `RunLog` instances to a\r\n * `RunLogStream`.\r\n */\r\nexport class LogStreamCallbackHandler extends BaseTracer {\r\n    constructor(fields) {\r\n        super(fields);\r\n        Object.defineProperty(this, \"autoClose\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"includeNames\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"includeTypes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"includeTags\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"excludeNames\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"excludeTypes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"excludeTags\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"indexMap\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"transformStream\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"writer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"receiveStream\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"name\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"log_stream_tracer\"\r\n        });\r\n        this.autoClose = fields?.autoClose ?? true;\r\n        this.includeNames = fields?.includeNames;\r\n        this.includeTypes = fields?.includeTypes;\r\n        this.includeTags = fields?.includeTags;\r\n        this.excludeNames = fields?.excludeNames;\r\n        this.excludeTypes = fields?.excludeTypes;\r\n        this.excludeTags = fields?.excludeTags;\r\n        this.transformStream = new TransformStream();\r\n        this.writer = this.transformStream.writable.getWriter();\r\n        this.receiveStream = IterableReadableStream.fromReadableStream(this.transformStream.readable);\r\n    }\r\n    [Symbol.asyncIterator]() {\r\n        return this.receiveStream;\r\n    }\r\n    async persistRun(_run) {\r\n        // This is a legacy method only called once for an entire run tree\r\n        // and is therefore not useful here\r\n    }\r\n    _includeRun(run) {\r\n        if (run.parent_run_id === undefined) {\r\n            return false;\r\n        }\r\n        const runTags = run.tags ?? [];\r\n        let include = this.includeNames === undefined &&\r\n            this.includeTags === undefined &&\r\n            this.includeTypes === undefined;\r\n        if (this.includeNames !== undefined) {\r\n            include = include || this.includeNames.includes(run.name);\r\n        }\r\n        if (this.includeTypes !== undefined) {\r\n            include = include || this.includeTypes.includes(run.run_type);\r\n        }\r\n        if (this.includeTags !== undefined) {\r\n            include =\r\n                include ||\r\n                    runTags.find((tag) => this.includeTags?.includes(tag)) !== undefined;\r\n        }\r\n        if (this.excludeNames !== undefined) {\r\n            include = include && !this.excludeNames.includes(run.name);\r\n        }\r\n        if (this.excludeTypes !== undefined) {\r\n            include = include && !this.excludeTypes.includes(run.run_type);\r\n        }\r\n        if (this.excludeTags !== undefined) {\r\n            include =\r\n                include && runTags.every((tag) => !this.excludeTags?.includes(tag));\r\n        }\r\n        return include;\r\n    }\r\n    async onRunCreate(run) {\r\n        if (run.parent_run_id === undefined) {\r\n            await this.writer.write(new RunLogPatch({\r\n                ops: [\r\n                    {\r\n                        op: \"replace\",\r\n                        path: \"\",\r\n                        value: {\r\n                            id: run.id,\r\n                            streamed_output: [],\r\n                            final_output: undefined,\r\n                            logs: [],\r\n                        },\r\n                    },\r\n                ],\r\n            }));\r\n        }\r\n        if (!this._includeRun(run)) {\r\n            return;\r\n        }\r\n        this.indexMap[run.id] = Math.max(...Object.values(this.indexMap), -1) + 1;\r\n        const logEntry = {\r\n            id: run.id,\r\n            name: run.name,\r\n            type: run.run_type,\r\n            tags: run.tags ?? [],\r\n            metadata: run.extra?.metadata ?? {},\r\n            start_time: new Date(run.start_time).toISOString(),\r\n            streamed_output_str: [],\r\n            final_output: undefined,\r\n            end_time: undefined,\r\n        };\r\n        await this.writer.write(new RunLogPatch({\r\n            ops: [\r\n                {\r\n                    op: \"add\",\r\n                    path: `/logs/${this.indexMap[run.id]}`,\r\n                    value: logEntry,\r\n                },\r\n            ],\r\n        }));\r\n    }\r\n    async onRunUpdate(run) {\r\n        try {\r\n            const index = this.indexMap[run.id];\r\n            if (index === undefined) {\r\n                return;\r\n            }\r\n            const ops = [\r\n                {\r\n                    op: \"add\",\r\n                    path: `/logs/${index}/final_output`,\r\n                    value: run.outputs,\r\n                },\r\n            ];\r\n            if (run.end_time !== undefined) {\r\n                ops.push({\r\n                    op: \"add\",\r\n                    path: `/logs/${index}/end_time`,\r\n                    value: new Date(run.end_time).toISOString(),\r\n                });\r\n            }\r\n            const patch = new RunLogPatch({ ops });\r\n            await this.writer.write(patch);\r\n        }\r\n        finally {\r\n            if (run.parent_run_id === undefined) {\r\n                const patch = new RunLogPatch({\r\n                    ops: [\r\n                        {\r\n                            op: \"replace\",\r\n                            path: \"/final_output\",\r\n                            value: run.outputs,\r\n                        },\r\n                    ],\r\n                });\r\n                await this.writer.write(patch);\r\n                if (this.autoClose) {\r\n                    await this.writer.close();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    async onLLMNewToken(run, token) {\r\n        const index = this.indexMap[run.id];\r\n        if (index === undefined) {\r\n            return;\r\n        }\r\n        const patch = new RunLogPatch({\r\n            ops: [\r\n                {\r\n                    op: \"add\",\r\n                    path: `/logs/${index}/streamed_output_str/-`,\r\n                    value: token,\r\n                },\r\n            ],\r\n        });\r\n        await this.writer.write(patch);\r\n    }\r\n}\r\n", "import { CallbackManager, } from \"../../callbacks/manager.js\";\r\nexport async function getCallbackMangerForConfig(config) {\r\n    return CallbackManager.configure(config?.callbacks, undefined, config?.tags, undefined, config?.metadata);\r\n}\r\n", "import pRetry from \"p-retry\";\r\nimport PQueueMod from \"p-queue\";\r\nconst STATUS_NO_RETRY = [\r\n    400,\r\n    401,\r\n    402,\r\n    403,\r\n    404,\r\n    405,\r\n    406,\r\n    407,\r\n    408,\r\n    409, // Conflict\r\n];\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nconst defaultFailedAttemptHandler = (error) => {\r\n    if (error.message.startsWith(\"Cancel\") ||\r\n        error.message.startsWith(\"TimeoutError\") ||\r\n        error.name === \"TimeoutError\" ||\r\n        error.message.startsWith(\"AbortError\") ||\r\n        error.name === \"AbortError\") {\r\n        throw error;\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    if (error?.code === \"ECONNABORTED\") {\r\n        throw error;\r\n    }\r\n    const status = \r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    error?.response?.status ?? error?.status;\r\n    if (status && STATUS_NO_RETRY.includes(+status)) {\r\n        throw error;\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    if (error?.error?.code === \"insufficient_quota\") {\r\n        const err = new Error(error?.message);\r\n        err.name = \"InsufficientQuotaError\";\r\n        throw err;\r\n    }\r\n};\r\n/**\r\n * A class that can be used to make async calls with concurrency and retry logic.\r\n *\r\n * This is useful for making calls to any kind of \"expensive\" external resource,\r\n * be it because it's rate-limited, subject to network issues, etc.\r\n *\r\n * Concurrent calls are limited by the `maxConcurrency` parameter, which defaults\r\n * to `Infinity`. This means that by default, all calls will be made in parallel.\r\n *\r\n * Retries are limited by the `maxRetries` parameter, which defaults to 6. This\r\n * means that by default, each call will be retried up to 6 times, with an\r\n * exponential backoff between each attempt.\r\n */\r\nexport class AsyncCaller {\r\n    constructor(params) {\r\n        Object.defineProperty(this, \"maxConcurrency\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"maxRetries\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"onFailedAttempt\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"queue\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.maxConcurrency = params.maxConcurrency ?? Infinity;\r\n        this.maxRetries = params.maxRetries ?? 6;\r\n        this.onFailedAttempt =\r\n            params.onFailedAttempt ?? defaultFailedAttemptHandler;\r\n        const PQueue = \"default\" in PQueueMod ? PQueueMod.default : PQueueMod;\r\n        this.queue = new PQueue({ concurrency: this.maxConcurrency });\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    call(callable, ...args) {\r\n        return this.queue.add(() => pRetry(() => callable(...args).catch((error) => {\r\n            // eslint-disable-next-line no-instanceof/no-instanceof\r\n            if (error instanceof Error) {\r\n                throw error;\r\n            }\r\n            else {\r\n                throw new Error(error);\r\n            }\r\n        }), {\r\n            onFailedAttempt: this.onFailedAttempt,\r\n            retries: this.maxRetries,\r\n            randomize: true,\r\n            // If needed we can change some of the defaults here,\r\n            // but they're quite sensible.\r\n        }), { throwOnTimeout: true });\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    callWithOptions(options, callable, ...args) {\r\n        // Note this doesn't cancel the underlying request,\r\n        // when available prefer to use the signal option of the underlying call\r\n        if (options.signal) {\r\n            return Promise.race([\r\n                this.call(callable, ...args),\r\n                new Promise((_, reject) => {\r\n                    options.signal?.addEventListener(\"abort\", () => {\r\n                        reject(new Error(\"AbortError\"));\r\n                    });\r\n                }),\r\n            ]);\r\n        }\r\n        return this.call(callable, ...args);\r\n    }\r\n    fetch(...args) {\r\n        return this.call(() => fetch(...args).then((res) => (res.ok ? res : Promise.reject(res))));\r\n    }\r\n}\r\n", "// Default generic \"any\" values are for backwards compatibility.\r\n// Replace with \"string\" when we are comfortable with a breaking change.\r\nimport { BasePromptValue, HumanMessage, } from \"../schema/index.js\";\r\nimport { Serializable } from \"../load/serializable.js\";\r\nimport { Runnable } from \"../schema/runnable/index.js\";\r\n/**\r\n * Represents a prompt value as a string. It extends the BasePromptValue\r\n * class and overrides the toString and toChatMessages methods.\r\n */\r\nexport class StringPromptValue extends BasePromptValue {\r\n    constructor(value) {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"lc_namespace\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\"langchain\", \"prompts\", \"base\"]\r\n        });\r\n        Object.defineProperty(this, \"value\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.value = value;\r\n    }\r\n    toString() {\r\n        return this.value;\r\n    }\r\n    toChatMessages() {\r\n        return [new HumanMessage(this.value)];\r\n    }\r\n}\r\n/**\r\n * Base class for prompt templates. Exposes a format method that returns a\r\n * string prompt given a set of input values.\r\n */\r\nexport class BasePromptTemplate extends Runnable {\r\n    get lc_attributes() {\r\n        return {\r\n            partialVariables: undefined, // python doesn't support this yet\r\n        };\r\n    }\r\n    constructor(input) {\r\n        super(input);\r\n        Object.defineProperty(this, \"lc_serializable\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"lc_namespace\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\"langchain\", \"prompts\", this._getPromptType()]\r\n        });\r\n        Object.defineProperty(this, \"inputVariables\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"outputParser\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"partialVariables\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        const { inputVariables } = input;\r\n        if (inputVariables.includes(\"stop\")) {\r\n            throw new Error(\"Cannot have an input variable named 'stop', as it is used internally, please rename.\");\r\n        }\r\n        Object.assign(this, input);\r\n    }\r\n    /**\r\n     * Merges partial variables and user variables.\r\n     * @param userVariables The user variables to merge with the partial variables.\r\n     * @returns A Promise that resolves to an object containing the merged variables.\r\n     */\r\n    async mergePartialAndUserVariables(userVariables) {\r\n        const partialVariables = this.partialVariables ?? {};\r\n        const partialValues = {};\r\n        for (const [key, value] of Object.entries(partialVariables)) {\r\n            if (typeof value === \"string\") {\r\n                partialValues[key] = value;\r\n            }\r\n            else {\r\n                partialValues[key] = await value();\r\n            }\r\n        }\r\n        const allKwargs = {\r\n            ...partialValues,\r\n            ...userVariables,\r\n        };\r\n        return allKwargs;\r\n    }\r\n    /**\r\n     * Invokes the prompt template with the given input and options.\r\n     * @param input The input to invoke the prompt template with.\r\n     * @param options Optional configuration for the callback.\r\n     * @returns A Promise that resolves to the output of the prompt template.\r\n     */\r\n    async invoke(input, options) {\r\n        return this._callWithConfig((input) => this.formatPromptValue(input), input, { ...options, runType: \"prompt\" });\r\n    }\r\n    /**\r\n     * Return a json-like object representing this prompt template.\r\n     * @deprecated\r\n     */\r\n    serialize() {\r\n        throw new Error(\"Use .toJSON() instead\");\r\n    }\r\n    /**\r\n     * @deprecated\r\n     * Load a prompt template from a json-like object describing it.\r\n     *\r\n     * @remarks\r\n     * Deserializing needs to be async because templates (e.g. {@link FewShotPromptTemplate}) can\r\n     * reference remote resources that we read asynchronously with a web\r\n     * request.\r\n     */\r\n    static async deserialize(data) {\r\n        switch (data._type) {\r\n            case \"prompt\": {\r\n                const { PromptTemplate } = await import(\"./prompt.js\");\r\n                return PromptTemplate.deserialize(data);\r\n            }\r\n            case undefined: {\r\n                const { PromptTemplate } = await import(\"./prompt.js\");\r\n                return PromptTemplate.deserialize({ ...data, _type: \"prompt\" });\r\n            }\r\n            case \"few_shot\": {\r\n                const { FewShotPromptTemplate } = await import(\"./few_shot.js\");\r\n                return FewShotPromptTemplate.deserialize(data);\r\n            }\r\n            default:\r\n                throw new Error(`Invalid prompt type in config: ${data._type}`);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Base class for string prompt templates. It extends the\r\n * BasePromptTemplate class and overrides the formatPromptValue method to\r\n * return a StringPromptValue.\r\n */\r\nexport class BaseStringPromptTemplate extends BasePromptTemplate {\r\n    /**\r\n     * Formats the prompt given the input values and returns a formatted\r\n     * prompt value.\r\n     * @param values The input values to format the prompt.\r\n     * @returns A Promise that resolves to a formatted prompt value.\r\n     */\r\n    async formatPromptValue(values) {\r\n        const formattedPrompt = await this.format(values);\r\n        return new StringPromptValue(formattedPrompt);\r\n    }\r\n}\r\n/**\r\n * Base class for example selectors.\r\n */\r\nexport class BaseExampleSelector extends Serializable {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"lc_namespace\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\"langchain\", \"prompts\", \"selectors\"]\r\n        });\r\n    }\r\n}\r\n", "export const parseFString = (template) => {\r\n    // Core logic replicated from internals of pythons built in Formatter class.\r\n    // https://github.com/python/cpython/blob/135ec7cefbaffd516b77362ad2b2ad1025af462e/Objects/stringlib/unicode_format.h#L700-L706\r\n    const chars = template.split(\"\");\r\n    const nodes = [];\r\n    const nextBracket = (bracket, start) => {\r\n        for (let i = start; i < chars.length; i += 1) {\r\n            if (bracket.includes(chars[i])) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    };\r\n    let i = 0;\r\n    while (i < chars.length) {\r\n        if (chars[i] === \"{\" && i + 1 < chars.length && chars[i + 1] === \"{\") {\r\n            nodes.push({ type: \"literal\", text: \"{\" });\r\n            i += 2;\r\n        }\r\n        else if (chars[i] === \"}\" &&\r\n            i + 1 < chars.length &&\r\n            chars[i + 1] === \"}\") {\r\n            nodes.push({ type: \"literal\", text: \"}\" });\r\n            i += 2;\r\n        }\r\n        else if (chars[i] === \"{\") {\r\n            const j = nextBracket(\"}\", i);\r\n            if (j < 0) {\r\n                throw new Error(\"Unclosed '{' in template.\");\r\n            }\r\n            nodes.push({\r\n                type: \"variable\",\r\n                name: chars.slice(i + 1, j).join(\"\"),\r\n            });\r\n            i = j + 1;\r\n        }\r\n        else if (chars[i] === \"}\") {\r\n            throw new Error(\"Single '}' in template.\");\r\n        }\r\n        else {\r\n            const next = nextBracket(\"{}\", i);\r\n            const text = (next < 0 ? chars.slice(i) : chars.slice(i, next)).join(\"\");\r\n            nodes.push({ type: \"literal\", text });\r\n            i = next < 0 ? chars.length : next;\r\n        }\r\n    }\r\n    return nodes;\r\n};\r\nexport const interpolateFString = (template, values) => parseFString(template).reduce((res, node) => {\r\n    if (node.type === \"variable\") {\r\n        if (node.name in values) {\r\n            return res + values[node.name];\r\n        }\r\n        throw new Error(`Missing value for input ${node.name}`);\r\n    }\r\n    return res + node.text;\r\n}, \"\");\r\nexport const DEFAULT_FORMATTER_MAPPING = {\r\n    \"f-string\": interpolateFString,\r\n    jinja2: (_, __) => \"\",\r\n};\r\nexport const DEFAULT_PARSER_MAPPING = {\r\n    \"f-string\": parseFString,\r\n    jinja2: (_) => [],\r\n};\r\nexport const renderTemplate = (template, templateFormat, inputValues) => DEFAULT_FORMATTER_MAPPING[templateFormat](template, inputValues);\r\nexport const parseTemplate = (template, templateFormat) => DEFAULT_PARSER_MAPPING[templateFormat](template);\r\nexport const checkValidTemplate = (template, templateFormat, inputVariables) => {\r\n    if (!(templateFormat in DEFAULT_FORMATTER_MAPPING)) {\r\n        const validFormats = Object.keys(DEFAULT_FORMATTER_MAPPING);\r\n        throw new Error(`Invalid template format. Got \\`${templateFormat}\\`;\r\n                         should be one of ${validFormats}`);\r\n    }\r\n    try {\r\n        const dummyInputs = inputVariables.reduce((acc, v) => {\r\n            acc[v] = \"foo\";\r\n            return acc;\r\n        }, {});\r\n        renderTemplate(template, templateFormat, dummyInputs);\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    }\r\n    catch (e) {\r\n        throw new Error(`Invalid prompt schema: ${e.message}`);\r\n    }\r\n};\r\n", "// Default generic \"any\" values are for backwards compatibility.\r\n// Replace with \"string\" when we are comfortable with a breaking change.\r\nimport { BaseStringPromptTemplate, } from \"./base.js\";\r\nimport { checkValidTemplate, parseTemplate, renderTemplate, } from \"./template.js\";\r\n/**\r\n * Schema to represent a basic prompt for an LLM.\r\n * @augments BasePromptTemplate\r\n * @augments PromptTemplateInput\r\n *\r\n * @example\r\n * ```ts\r\n * import { PromptTemplate } from \"langchain/prompts\";\r\n *\r\n * const prompt = new PromptTemplate({\r\n *   inputVariables: [\"foo\"],\r\n *   template: \"Say {foo}\",\r\n * });\r\n * ```\r\n */\r\nexport class PromptTemplate extends BaseStringPromptTemplate {\r\n    static lc_name() {\r\n        return \"PromptTemplate\";\r\n    }\r\n    constructor(input) {\r\n        super(input);\r\n        Object.defineProperty(this, \"template\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"templateFormat\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"f-string\"\r\n        });\r\n        Object.defineProperty(this, \"validateTemplate\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.assign(this, input);\r\n        if (this.validateTemplate) {\r\n            let totalInputVariables = this.inputVariables;\r\n            if (this.partialVariables) {\r\n                totalInputVariables = totalInputVariables.concat(Object.keys(this.partialVariables));\r\n            }\r\n            checkValidTemplate(this.template, this.templateFormat, totalInputVariables);\r\n        }\r\n    }\r\n    _getPromptType() {\r\n        return \"prompt\";\r\n    }\r\n    /**\r\n     * Formats the prompt template with the provided values.\r\n     * @param values The values to be used to format the prompt template.\r\n     * @returns A promise that resolves to a string which is the formatted prompt.\r\n     */\r\n    async format(values) {\r\n        const allValues = await this.mergePartialAndUserVariables(values);\r\n        return renderTemplate(this.template, this.templateFormat, allValues);\r\n    }\r\n    /**\r\n     * Take examples in list format with prefix and suffix to create a prompt.\r\n     *\r\n     * Intended to be used a a way to dynamically create a prompt from examples.\r\n     *\r\n     * @param examples - List of examples to use in the prompt.\r\n     * @param suffix - String to go after the list of examples. Should generally set up the user's input.\r\n     * @param inputVariables - A list of variable names the final prompt template will expect\r\n     * @param exampleSeparator - The separator to use in between examples\r\n     * @param prefix - String that should go before any examples. Generally includes examples.\r\n     *\r\n     * @returns The final prompt template generated.\r\n     */\r\n    static fromExamples(examples, suffix, inputVariables, exampleSeparator = \"\\n\\n\", prefix = \"\") {\r\n        const template = [prefix, ...examples, suffix].join(exampleSeparator);\r\n        return new PromptTemplate({\r\n            inputVariables,\r\n            template,\r\n        });\r\n    }\r\n    /**\r\n     * Load prompt template from a template f-string\r\n     */\r\n    static fromTemplate(template, { templateFormat = \"f-string\", ...rest } = {}) {\r\n        if (templateFormat === \"jinja2\") {\r\n            throw new Error(\"jinja2 templates are not currently supported.\");\r\n        }\r\n        const names = new Set();\r\n        parseTemplate(template, templateFormat).forEach((node) => {\r\n            if (node.type === \"variable\") {\r\n                names.add(node.name);\r\n            }\r\n        });\r\n        return new PromptTemplate({\r\n            // Rely on extracted types\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            inputVariables: [...names],\r\n            templateFormat,\r\n            template,\r\n            ...rest,\r\n        });\r\n    }\r\n    /**\r\n     * Partially applies values to the prompt template.\r\n     * @param values The values to be partially applied to the prompt template.\r\n     * @returns A new instance of PromptTemplate with the partially applied values.\r\n     */\r\n    async partial(values) {\r\n        const newInputVariables = this.inputVariables.filter((iv) => !(iv in values));\r\n        const newPartialVariables = {\r\n            ...(this.partialVariables ?? {}),\r\n            ...values,\r\n        };\r\n        const promptDict = {\r\n            ...this,\r\n            inputVariables: newInputVariables,\r\n            partialVariables: newPartialVariables,\r\n        };\r\n        return new PromptTemplate(promptDict);\r\n    }\r\n    serialize() {\r\n        if (this.outputParser !== undefined) {\r\n            throw new Error(\"Cannot serialize a prompt template with an output parser\");\r\n        }\r\n        return {\r\n            _type: this._getPromptType(),\r\n            input_variables: this.inputVariables,\r\n            template: this.template,\r\n            template_format: this.templateFormat,\r\n        };\r\n    }\r\n    static async deserialize(data) {\r\n        if (!data.template) {\r\n            throw new Error(\"Prompt template must have a template\");\r\n        }\r\n        const res = new PromptTemplate({\r\n            inputVariables: data.input_variables,\r\n            template: data.template,\r\n            templateFormat: data.template_format,\r\n        });\r\n        return res;\r\n    }\r\n}\r\n"],
  "mappings": "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",
  "names": ["camelCase", "original", "require_retry", "pRetry", "error", "styles", "snakeCase", "import_p_retry", "elapsed", "styles", "PQueueMod", "pRetry", "result", "isBrowser", "isWebWorker", "isJsDom", "isDeno", "isNode", "getEnv", "runtimeEnvironment", "getRuntimeEnvironment", "getEnvironmentVariable", "getEnvironmentVariable", "getRuntimeEnvironment", "getEnvironmentVariable", "import_p_queue", "PQueueMod", "err", "getEnvironmentVariable", "validate", "keys", "i", "validate", "import_p_retry", "import_p_queue", "STATUS_NO_RETRY", "AsyncCaller", "PQueueMod", "pRetry", "_coerceToDict", "AsyncCaller", "pRetry", "input", "PromptTemplate", "i"]
}
